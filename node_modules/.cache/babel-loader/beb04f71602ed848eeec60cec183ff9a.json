{"ast":null,"code":"var _jsxFileName = \"/home/brianmuciri/Projects/farm-ledger-ld/src/Routes/Notices.js\";\nimport Layout from \"../components/PrivateLayout\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Box from \"@material-ui/core/Box\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { handleDelete, itemsFetchData } from \"../actions/actions\";\nimport CommonTable from \"../components/table/commonTable\";\nimport { commonStyles } from \"../components/commonStyles\";\nimport ExportToExcelBtn from \"../components/ExportToExcelBtn\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport PageHeading from \"../components/PageHeading\";\nimport { startOfToday, parse, differenceInDays } from \"date-fns\";\nconst noticesTableHeadCells = [{\n  id: \"days_left\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Days Left\"\n}, {\n  id: \"unit_ref\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Unit\"\n}, {\n  id: \"tenant_name\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Tenant Name\"\n}, {\n  id: \"tenant_id_number\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Tenant ID Number\"\n}, {\n  id: \"notification_date\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Notification Date\"\n}, {\n  id: \"vacating_date\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Move Out Date\"\n}, {\n  id: \"vacated\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Vacated Status\"\n}, {\n  id: \"edit\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Edit\"\n}, {\n  id: \"delete\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Delete\"\n}];\n\nlet VacatingNoticesPage = ({\n  fetchData,\n  notices,\n  properties,\n  contacts,\n  handleItemDelete,\n  match\n}) => {\n  const classes = commonStyles();\n  const [vacatingNotices, setVacatingNotices] = useState([]);\n  const [fromDateFilter, setFromDateFilter] = useState(\"\");\n  const [toDateFilter, setToDateFilter] = useState(\"\");\n  const [propertyFilter, setPropertyFilter] = useState(\"all\");\n  const [tenantFilter, setTenantFilter] = useState(null);\n  const [selected, setSelected] = useState([]);\n  useEffect(() => {\n    fetchData(['notices']);\n  }, [fetchData]);\n  useEffect(() => {\n    setVacatingNotices(notices);\n  }, [notices]);\n\n  const handleSearchFormSubmit = event => {\n    event.preventDefault(); //filter the notices here according to search criteria\n\n    const filteredNotices = notices.filter(({\n      notification_date,\n      tenant_id,\n      property_id\n    }) => (!fromDateFilter ? true : notification_date >= fromDateFilter) && (!toDateFilter ? true : notification_date <= toDateFilter) && (!tenantFilter ? true : tenant_id === tenantFilter.id) && (propertyFilter === \"all\" ? true : property_id === propertyFilter));\n    setVacatingNotices(filteredNotices);\n  };\n\n  const resetSearchForm = event => {\n    event.preventDefault();\n    setFromDateFilter(\"\");\n    setToDateFilter(\"\");\n    setPropertyFilter(\"all\");\n    setTenantFilter(null);\n  };\n\n  return /*#__PURE__*/React.createElement(Layout, {\n    pageTitle: \"Move Outs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    key: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PageHeading, {\n    text: 'Move Outs',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    item: true,\n    alignItems: \"center\",\n    direction: \"row\",\n    key: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"medium\",\n    startIcon: /*#__PURE__*/React.createElement(AddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 40\n      }\n    }),\n    component: Link,\n    to: `${match.url}/new`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }, \"NEW\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"medium\",\n    startIcon: /*#__PURE__*/React.createElement(EditIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 40\n      }\n    }),\n    disabled: !selected.length,\n    component: Link,\n    to: `${match.url}/${selected[0]}/edit`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 25\n    }\n  }, \"Edit\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ExportToExcelBtn, {\n    disabled: !selected.length,\n    reportName: 'Notices Records',\n    reportTitle: 'Notices Data',\n    headCells: noticesTableHeadCells,\n    dataToPrint: notices.filter(({\n      id\n    }) => selected.includes(id)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    border: 1,\n    borderRadius: \"borderRadius\",\n    borderColor: \"grey.400\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    id: \"contactSearchForm\",\n    onSubmit: handleSearchFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"center\",\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    type: \"date\",\n    id: \"from_date_filter\",\n    name: \"from_date_filter\",\n    label: \"From Date\",\n    value: fromDateFilter,\n    onChange: event => {\n      setFromDateFilter(event.target.value);\n    },\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    type: \"date\",\n    name: \"to_date_filter\",\n    label: \"To Date\",\n    id: \"to_date_filter\",\n    onChange: event => {\n      setToDateFilter(event.target.value);\n    },\n    value: toDateFilter,\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"center\",\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    select: true,\n    variant: \"outlined\",\n    id: \"propertyFilter\",\n    name: \"propertyFilter\",\n    label: \"Property\",\n    value: propertyFilter,\n    onChange: event => {\n      setPropertyFilter(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    key: \"all\",\n    value: \"all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 41\n    }\n  }, \"All\"), properties.map((property, index) => /*#__PURE__*/React.createElement(MenuItem, {\n    key: index,\n    value: property.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 45\n    }\n  }, property.ref)))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    id: \"contact_filter\",\n    options: contacts,\n    getOptionSelected: (option, value) => option.id === value.id,\n    name: \"contact_filter\",\n    onChange: (event, newValue) => {\n      setTenantFilter(newValue);\n    },\n    value: tenantFilter,\n    getOptionLabel: tenant => tenant ? `${tenant.first_name} ${tenant.last_name}` : '',\n    style: {\n      width: \"100%\"\n    },\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"Tenant\",\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 66\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    item: true,\n    justify: \"flex-end\",\n    alignItems: \"center\",\n    direction: \"row\",\n    key: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: event => handleSearchFormSubmit(event),\n    type: \"submit\",\n    form: \"contactSearchForm\",\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"medium\",\n    startIcon: /*#__PURE__*/React.createElement(SearchIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 52\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 37\n    }\n  }, \"SEARCH\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: event => resetSearchForm(event),\n    type: \"reset\",\n    form: \"propertySearchForm\",\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"medium\",\n    startIcon: /*#__PURE__*/React.createElement(UndoIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 52\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 37\n    }\n  }, \"RESET\")))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CommonTable, {\n    selected: selected,\n    setSelected: setSelected,\n    rows: vacatingNotices,\n    headCells: noticesTableHeadCells,\n    handleDelete: handleItemDelete,\n    deleteUrl: \"notices\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 21\n    }\n  }))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    notices: state.notices.map(notice => {\n      const tenant = state.contacts.find(({\n        id\n      }) => id === notice.tenant_id) || {};\n      const tenantUnit = state.propertyUnits.find(({\n        id\n      }) => id === notice.unit_id) || {};\n      const noticeDetails = {};\n      noticeDetails.tenant_id_number = tenant.id_number;\n      noticeDetails.tenant_name = `${tenant.first_name} ${tenant.last_name}`;\n      const days_left = differenceInDays(parse(notice.vacating_date, 'yyyy-MM-dd', new Date()), startOfToday());\n      noticeDetails.days_left = days_left >= 0 ? days_left : 0;\n      noticeDetails.unit_ref = tenantUnit.ref;\n      return Object.assign({}, notice, noticeDetails);\n    }).sort((notice1, notice2) => parse(notice2.notification_date, 'yyyy-MM-dd', new Date()) - parse(notice1.notification_date, 'yyyy-MM-dd', new Date())),\n    properties: state.properties,\n    contacts: state.contacts\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchData: collectionsUrls => dispatch(itemsFetchData(collectionsUrls)),\n    handleItemDelete: (itemId, url) => dispatch(handleDelete(itemId, url))\n  };\n};\n\nVacatingNoticesPage = connect(mapStateToProps, mapDispatchToProps)(VacatingNoticesPage);\nexport default withRouter(VacatingNoticesPage);","map":{"version":3,"sources":["/home/brianmuciri/Projects/farm-ledger-ld/src/Routes/Notices.js"],"names":["Layout","React","useState","useEffect","Link","EditIcon","SearchIcon","UndoIcon","AddIcon","Grid","TextField","Button","MenuItem","Box","Autocomplete","handleDelete","itemsFetchData","CommonTable","commonStyles","ExportToExcelBtn","connect","withRouter","PageHeading","startOfToday","parse","differenceInDays","noticesTableHeadCells","id","numeric","disablePadding","label","VacatingNoticesPage","fetchData","notices","properties","contacts","handleItemDelete","match","classes","vacatingNotices","setVacatingNotices","fromDateFilter","setFromDateFilter","toDateFilter","setToDateFilter","propertyFilter","setPropertyFilter","tenantFilter","setTenantFilter","selected","setSelected","handleSearchFormSubmit","event","preventDefault","filteredNotices","filter","notification_date","tenant_id","property_id","resetSearchForm","url","length","includes","form","target","value","shrink","map","property","index","ref","option","newValue","tenant","first_name","last_name","width","params","mapStateToProps","state","notice","find","tenantUnit","propertyUnits","unit_id","noticeDetails","tenant_id_number","id_number","tenant_name","days_left","vacating_date","Date","unit_ref","Object","assign","sort","notice1","notice2","mapDispatchToProps","dispatch","collectionsUrls","itemId"],"mappings":"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","sourcesContent":["import Layout from \"../components/PrivateLayout\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Box from \"@material-ui/core/Box\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { handleDelete, itemsFetchData } from \"../actions/actions\";\nimport CommonTable from \"../components/table/commonTable\";\nimport { commonStyles } from \"../components/commonStyles\";\nimport ExportToExcelBtn from \"../components/ExportToExcelBtn\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport PageHeading from \"../components/PageHeading\";\nimport { startOfToday, parse, differenceInDays } from \"date-fns\";\n\n\nconst noticesTableHeadCells = [\n    { id: \"days_left\", numeric: false, disablePadding: true, label: \"Days Left\" },\n    { id: \"unit_ref\", numeric: false, disablePadding: true, label: \"Unit\" },\n    { id: \"tenant_name\", numeric: false, disablePadding: true, label: \"Tenant Name\" },\n    { id: \"tenant_id_number\", numeric: false, disablePadding: true, label: \"Tenant ID Number\" },\n    { id: \"notification_date\", numeric: false, disablePadding: true, label: \"Notification Date\" },\n    { id: \"vacating_date\", numeric: false, disablePadding: true, label: \"Move Out Date\" },\n    { id: \"vacated\", numeric: false, disablePadding: true, label: \"Vacated Status\" },\n    { id: \"edit\", numeric: false, disablePadding: true, label: \"Edit\" },\n    { id: \"delete\", numeric: false, disablePadding: true, label: \"Delete\" },\n\n];\n\nlet VacatingNoticesPage = ({\n    fetchData,\n    notices,\n    properties,\n    contacts,\n    handleItemDelete,\n    match,\n}) => {\n    const classes = commonStyles();\n    const [vacatingNotices, setVacatingNotices] = useState([]);\n    const [fromDateFilter, setFromDateFilter] = useState(\"\");\n    const [toDateFilter, setToDateFilter] = useState(\"\");\n    const [propertyFilter, setPropertyFilter] = useState(\"all\");\n    const [tenantFilter, setTenantFilter] = useState(null);\n    const [selected, setSelected] = useState([]);\n\n    useEffect(() => {\n\t\tfetchData(['notices']);\n\t}, [fetchData]);\n\n    useEffect(() => {\n        setVacatingNotices(notices);\n    }, [notices]);\n\n    const handleSearchFormSubmit = (event) => {\n        event.preventDefault();\n        //filter the notices here according to search criteria\n        const filteredNotices = notices\n            .filter(({ notification_date, tenant_id, property_id }) =>\n                (!fromDateFilter ? true : notification_date >= fromDateFilter)\n                && (!toDateFilter ? true : notification_date <= toDateFilter)\n                && (!tenantFilter ? true : tenant_id === tenantFilter.id)\n                && (propertyFilter === \"all\" ? true : property_id === propertyFilter)\n            )\n        setVacatingNotices(filteredNotices);\n    };\n\n    const resetSearchForm = (event) => {\n        event.preventDefault();\n        setFromDateFilter(\"\");\n        setToDateFilter(\"\");\n        setPropertyFilter(\"all\");\n        setTenantFilter(null);\n    };\n\n    return (\n        <Layout pageTitle=\"Move Outs\">\n            <Grid\n                container\n                spacing={3}\n                alignItems=\"center\"\n            >\n                <Grid item key={2}>\n                    <PageHeading text={'Move Outs'} />\n                </Grid>\n                <Grid\n                    container\n                    spacing={2}\n                    item\n                    alignItems=\"center\"\n                    direction=\"row\"\n                    key={1}\n                >\n                    <Grid item>\n                        <Button\n                            type=\"button\"\n                            color=\"primary\"\n                            variant=\"contained\"\n                            size=\"medium\"\n                            startIcon={<AddIcon />}\n                            component={Link}\n                            to={`${match.url}/new`}\n                        >\n                            NEW\n                        </Button>\n                    </Grid>\n                    <Grid item>\n                        <Button\n                            type=\"button\"\n                            color=\"primary\"\n                            variant=\"contained\"\n                            size=\"medium\"\n                            startIcon={<EditIcon />}\n                            disabled={!selected.length}\n                            component={Link}\n                            to={`${match.url}/${selected[0]}/edit`}\n                        >\n                            Edit\n                        </Button>\n                    </Grid>\n                    <Grid item>\n                        <ExportToExcelBtn\n                            disabled={!selected.length}\n                            reportName={'Notices Records'}\n                            reportTitle={'Notices Data'}\n                            headCells={noticesTableHeadCells}\n                            dataToPrint={notices.filter(({ id }) => selected.includes(id))}\n                        />\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    <Box\n                        border={1}\n                        borderRadius=\"borderRadius\"\n                        borderColor=\"grey.400\"\n                    >\n                        <form\n                            className={classes.form}\n                            id=\"contactSearchForm\"\n                            onSubmit={handleSearchFormSubmit}\n                        >\n                            <Grid\n                                container\n                                spacing={2}\n                                justify=\"center\"\n                                direction=\"row\"\n                            >\n                                <Grid item md={6} xs={12}>\n                                    <TextField\n                                        fullWidth\n                                        variant=\"outlined\"\n                                        type=\"date\"\n                                        id=\"from_date_filter\"\n                                        name=\"from_date_filter\"\n                                        label=\"From Date\"\n                                        value={fromDateFilter}\n                                        onChange={(event) => {\n                                            setFromDateFilter(\n                                                event.target.value\n                                            );\n                                        }}\n                                        InputLabelProps={{ shrink: true }}\n                                    />\n                                </Grid>\n                                <Grid item md={6} xs={12}>\n                                    <TextField\n                                        fullWidth\n                                        variant=\"outlined\"\n                                        type=\"date\"\n                                        name=\"to_date_filter\"\n                                        label=\"To Date\"\n                                        id=\"to_date_filter\"\n                                        onChange={(event) => {\n                                            setToDateFilter(event.target.value);\n                                        }}\n                                        value={toDateFilter}\n                                        InputLabelProps={{ shrink: true }}\n                                    />\n                                </Grid>\n                            </Grid>\n                            <Grid\n                                container\n                                spacing={2}\n                                justify=\"center\"\n                                direction=\"row\"\n                            >\n                                <Grid item md={6} xs={12}>\n                                    <TextField\n                                        fullWidth\n                                        select\n                                        variant=\"outlined\"\n                                        id=\"propertyFilter\"\n                                        name=\"propertyFilter\"\n                                        label=\"Property\"\n                                        value={propertyFilter}\n                                        onChange={(event) => {\n                                            setPropertyFilter(\n                                                event.target.value\n                                            );\n                                        }}\n                                    >\n                                        <MenuItem key={\"all\"} value={\"all\"}>All</MenuItem>\n                                        {properties.map((property, index) => (\n                                            <MenuItem\n                                                key={index}\n                                                value={property.id}\n                                            >\n                                                {property.ref}\n                                            </MenuItem>\n                                        ))}\n                                    </TextField>\n                                </Grid>\n                                <Grid item md={6} xs={12}>\n                                    <Autocomplete\n                                        id=\"contact_filter\"\n                                        options={contacts}\n                                        getOptionSelected={(option, value) => option.id === value.id}\n                                        name=\"contact_filter\"\n                                        onChange={(event, newValue) => {\n                                            setTenantFilter(newValue);\n                                        }}\n                                        value={tenantFilter}\n                                        getOptionLabel={(tenant) => tenant ? `${tenant.first_name} ${tenant.last_name}` : ''}\n                                        style={{ width: \"100%\" }}\n                                        renderInput={(params) => <TextField {...params} label=\"Tenant\" variant=\"outlined\" />}\n                                    />\n                                </Grid>\n                            </Grid>\n                            <Grid\n                                container\n                                spacing={2}\n                                item\n                                justify=\"flex-end\"\n                                alignItems=\"center\"\n                                direction=\"row\"\n                                key={1}\n                            >\n                                <Grid item>\n                                    <Button\n                                        onClick={(event) => handleSearchFormSubmit(event)}\n                                        type=\"submit\"\n                                        form=\"contactSearchForm\"\n                                        color=\"primary\"\n                                        variant=\"contained\"\n                                        size=\"medium\"\n                                        startIcon={<SearchIcon />}\n                                    >\n                                        SEARCH\n                                    </Button>\n                                </Grid>\n                                <Grid item>\n                                    <Button\n                                        onClick={(event) =>\n                                            resetSearchForm(event)\n                                        }\n                                        type=\"reset\"\n                                        form=\"propertySearchForm\"\n                                        color=\"primary\"\n                                        variant=\"contained\"\n                                        size=\"medium\"\n                                        startIcon={<UndoIcon />}\n                                    >\n                                        RESET\n                                    </Button>\n                                </Grid>\n                            </Grid>\n                        </form>\n                    </Box>\n                </Grid>\n                <Grid item xs={12}>\n                    <CommonTable\n                        selected={selected}\n                        setSelected={setSelected}\n                        rows={vacatingNotices}\n                        headCells={noticesTableHeadCells}\n                        handleDelete={handleItemDelete}\n                        deleteUrl={\"notices\"}\n                    />\n                </Grid>\n            </Grid>\n        </Layout>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        notices: state.notices.map((notice) => {\n            const tenant = state.contacts.find(({ id }) => id === notice.tenant_id) || {};\n            const tenantUnit = state.propertyUnits.find(({ id }) => id === notice.unit_id) || {};\n            const noticeDetails = {};\n            noticeDetails.tenant_id_number = tenant.id_number\n            noticeDetails.tenant_name = `${tenant.first_name} ${tenant.last_name}`\n            const days_left = differenceInDays(parse(notice.vacating_date, 'yyyy-MM-dd', new Date()), startOfToday())\n            noticeDetails.days_left = days_left >= 0 ? days_left : 0\n            noticeDetails.unit_ref = tenantUnit.ref\n            return Object.assign({}, notice, noticeDetails);\n        }).sort((notice1, notice2) => parse(notice2.notification_date, 'yyyy-MM-dd', new Date()) -\n            parse(notice1.notification_date, 'yyyy-MM-dd', new Date())),\n        properties: state.properties,\n        contacts: state.contacts,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchData: (collectionsUrls) => dispatch(itemsFetchData(collectionsUrls)),\n        handleItemDelete: (itemId, url) => dispatch(handleDelete(itemId, url)),\n    };\n};\n\nVacatingNoticesPage = connect(mapStateToProps, mapDispatchToProps)(VacatingNoticesPage);\n\nexport default withRouter(VacatingNoticesPage);\n"]},"metadata":{},"sourceType":"module"}