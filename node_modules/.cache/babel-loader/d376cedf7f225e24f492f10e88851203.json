{"ast":null,"code":"var _jsxFileName = \"/home/brianmuciri/Projects/farm-ledger-ld/src/Routes/TenantDetailsPage.js\";\nimport React from \"react\";\nimport Layout from \"../components/PrivateLayout\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Tab from '@material-ui/core/Tab';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport { handleDelete } from \"../actions/actions\";\nimport IndividualTenantChargesStatement from \"./IndividualTenantChargesStatement\";\nimport TabPanel from \"../components/TabPanel\";\nimport DataGridTable from '../components/DataGridTable';\nimport TenantInfoDisplayCard from \"../components/TenantInfoDisplayCard\";\nimport { commonStyles } from '../components/commonStyles';\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { startOfToday, startOfMonth, endOfMonth, parse, isWithinInterval } from \"date-fns\";\nconst chargesColumns = [{\n  field: 'charge_label',\n  headerName: 'Charge Type',\n  width: 200\n}, {\n  field: 'charge_date',\n  headerName: 'Date Charged',\n  width: 200\n}, {\n  field: 'charge_amount',\n  headerName: 'Amount',\n  type: \"number\",\n  width: 90\n}];\nconst paymentsColumns = [{\n  field: 'payment_label',\n  headerName: 'Payment For',\n  width: 200\n}, {\n  field: 'payment_date',\n  headerName: 'Date Made',\n  width: 200\n}, {\n  field: 'payment_amount',\n  headerName: 'Amount',\n  type: \"number\",\n  width: 90\n}];\n\nlet TenantDetailsPage = ({\n  rentalPayments,\n  rentalCharges,\n  tenantUnit,\n  tenantDetails,\n  handleItemDelete\n}) => {\n  const classes = commonStyles();\n  const emergencyContact = {\n    emergency_contact_name: tenantDetails.emergency_contact_name,\n    emergency_contact_relationship: tenantDetails.emergency_contact_relationship,\n    emergency_contact_phone_number: tenantDetails.emergency_contact_phone_number,\n    emergency_contact_email: tenantDetails.emergency_contact_email\n  };\n  const [tabValue, setTabValue] = React.useState(0);\n\n  const handleTabChange = (event, newValue) => {\n    setTabValue(newValue);\n  };\n\n  const currentMonthCharges = rentalCharges.filter(chargeItem => {\n    const chargeItemDate = parse(chargeItem.charge_date, 'yyyy-MM-dd', new Date());\n    return isWithinInterval(chargeItemDate, {\n      start: startOfMonth(startOfToday()),\n      end: endOfMonth(startOfToday())\n    });\n  });\n  const currentMonthPayments = rentalPayments.filter(paymentItem => {\n    const paymentItemDate = parse(paymentItem.payment_date, 'yyyy-MM-dd', new Date());\n    return isWithinInterval(paymentItemDate, {\n      start: startOfMonth(startOfToday()),\n      end: endOfMonth(startOfToday())\n    });\n  });\n  return /*#__PURE__*/React.createElement(Layout, {\n    pageTitle: \"Tenant Summary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Tabs, {\n    value: tabValue,\n    onChange: handleTabChange,\n    \"aria-label\": \"simple tabs example\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Tab, {\n    label: \"Tenant Details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Tab, {\n    label: \"Rent & Other Charges\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(TabPanel, {\n    value: tabValue,\n    index: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IndividualTenantChargesStatement, {\n    tenantTransactionCharges: rentalCharges,\n    tenantDetails: tenantDetails,\n    handleItemDelete: handleItemDelete,\n    classes: classes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(TabPanel, {\n    value: tabValue,\n    index: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    direction: \"column\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    key: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  }, \"Tenant Details\")), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    item: true,\n    alignItems: \"stretch\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TenantInfoDisplayCard, {\n    title: \"Tenant Details\",\n    subheader: \"Personal Info\",\n    avatarSrc: tenantDetails.contact_avatar_url,\n    cardContent: [{\n      name: 'Name',\n      value: `${tenantDetails.title} ${tenantDetails.first_name} ${tenantDetails.last_name}`\n    }, {\n      name: 'ID Number',\n      value: tenantDetails.id_number || '-'\n    }, {\n      name: 'Personal Phone Number',\n      value: tenantDetails.phone_number || tenantUnit.address || '-'\n    }, {\n      name: 'Work Phone Number',\n      value: tenantDetails.work_mobile_number || '-'\n    }, {\n      name: 'Home Phone Number',\n      value: tenantDetails.home_phone_number || '-'\n    }, {\n      name: 'Email',\n      value: tenantDetails.contact_email || '-'\n    }, {\n      name: 'Emergency Contact Name',\n      value: emergencyContact.emergency_contact_name\n    }, {\n      name: 'Emergency Contact Relationship',\n      value: emergencyContact.emergency_contact_relationship\n    }, {\n      name: 'Emergency Contact Phone Number',\n      value: emergencyContact.emergency_contact_phone_number || '-'\n    }, {\n      name: 'Emergency Contact Email',\n      value: emergencyContact.emergency_contact_email || '-'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.fullHeightWidthContainer,\n    variant: \"outlined\",\n    elevation: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CardMedia, {\n    height: \"200\",\n    component: \"img\",\n    image: tenantUnit.unit_image_url,\n    title: \"Unit Image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 37\n    }\n  }, \"Unit: \", tenantUnit.ref), /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 37\n    }\n  }, \"Unit Type: \", tenantUnit.unit_type), /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 37\n    }\n  }, \"Beds: \", tenantUnit.beds), /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 37\n    }\n  }, \"Baths: \", tenantUnit.baths), /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 37\n    }\n  }, \"Unit Sqft: \", tenantUnit.sqft), /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 37\n    }\n  }, \"Rent Amount: \", tenantUnit.rent_amount), /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 37\n    }\n  }, \"Rent Cycle: \", tenantUnit.rent_cycle))))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    item: true,\n    alignItems: \"stretch\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.fullHeightWidthContainer,\n    variant: \"outlined\",\n    elevation: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    align: \"center\",\n    variant: \"subtitle1\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 37\n    }\n  }, \"Recent Charges History\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: 400,\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(DataGridTable, {\n    rows: currentMonthCharges,\n    headCells: chargesColumns,\n    pageSize: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 41\n    }\n  }))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.fullHeightWidthContainer,\n    variant: \"outlined\",\n    elevation: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    align: \"center\",\n    variant: \"subtitle1\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 37\n    }\n  }, \"Recent Payments History\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: 400,\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(DataGridTable, {\n    rows: currentMonthPayments,\n    headCells: paymentsColumns,\n    pageSize: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 41\n    }\n  })))))))));\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const currentTenantActiveLease = state.leases.filter(({\n    terminated\n  }) => terminated !== true).find(({\n    tenants\n  }) => Array.isArray(tenants) ? tenants.includes(ownProps.match.params.contactId) : false) || {};\n  const unitInLease = state.propertyUnits.find(({\n    id\n  }) => id === currentTenantActiveLease.unit_id) || {};\n  return {\n    rentalCharges: state.rentalCharges.filter(charge => charge.tenant_id === ownProps.match.params.contactId).sort((charge1, charge2) => charge2.charge_date > charge1.charge_date).map(charge => {\n      const chargeDetails = {}; //get payments with this charge id\n\n      const chargePayments = state.rentalPayments.filter(payment => payment.charge_id === charge.id);\n      chargeDetails.payed_status = chargePayments.length ? true : false;\n      const payed_amount = chargePayments.reduce((total, currentValue) => {\n        return total + parseFloat(currentValue.payment_amount) || 0;\n      }, 0);\n      chargeDetails.payed_amount = payed_amount;\n      chargeDetails.balance = parseFloat(charge.charge_amount) - payed_amount;\n      return Object.assign({}, charge, chargeDetails);\n    }).sort((charge1, charge2) => parse(charge2.charge_date, 'yyyy-MM-dd', new Date()) - parse(charge1.charge_date, 'yyyy-MM-dd', new Date())),\n    tenantUnit: Object.assign({}, unitInLease, currentTenantActiveLease),\n    rentalPayments: state.rentalPayments.filter(payment => payment.tenant_id === ownProps.match.params.contactId),\n    tenantDetails: state.contacts.find(({\n      id\n    }) => id === ownProps.match.params.contactId) || {}\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleItemDelete: (itemId, url) => dispatch(handleDelete(itemId, url))\n  };\n};\n\nTenantDetailsPage = connect(mapStateToProps, mapDispatchToProps)(TenantDetailsPage);\nexport default withRouter(TenantDetailsPage);","map":{"version":3,"sources":["/home/brianmuciri/Projects/farm-ledger-ld/src/Routes/TenantDetailsPage.js"],"names":["React","Layout","Typography","Grid","Card","CardContent","CardMedia","Tab","AppBar","Tabs","handleDelete","IndividualTenantChargesStatement","TabPanel","DataGridTable","TenantInfoDisplayCard","commonStyles","connect","withRouter","startOfToday","startOfMonth","endOfMonth","parse","isWithinInterval","chargesColumns","field","headerName","width","type","paymentsColumns","TenantDetailsPage","rentalPayments","rentalCharges","tenantUnit","tenantDetails","handleItemDelete","classes","emergencyContact","emergency_contact_name","emergency_contact_relationship","emergency_contact_phone_number","emergency_contact_email","tabValue","setTabValue","useState","handleTabChange","event","newValue","currentMonthCharges","filter","chargeItem","chargeItemDate","charge_date","Date","start","end","currentMonthPayments","paymentItem","paymentItemDate","payment_date","contact_avatar_url","name","value","title","first_name","last_name","id_number","phone_number","address","work_mobile_number","home_phone_number","contact_email","fullHeightWidthContainer","unit_image_url","ref","unit_type","beds","baths","sqft","rent_amount","rent_cycle","height","mapStateToProps","state","ownProps","currentTenantActiveLease","leases","terminated","find","tenants","Array","isArray","includes","match","params","contactId","unitInLease","propertyUnits","id","unit_id","charge","tenant_id","sort","charge1","charge2","map","chargeDetails","chargePayments","payment","charge_id","payed_status","length","payed_amount","reduce","total","currentValue","parseFloat","payment_amount","balance","charge_amount","Object","assign","contacts","mapDispatchToProps","dispatch","itemId","url"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Layout from \"../components/PrivateLayout\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Tab from '@material-ui/core/Tab';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport { handleDelete } from \"../actions/actions\";\nimport IndividualTenantChargesStatement from \"./IndividualTenantChargesStatement\";\nimport TabPanel from \"../components/TabPanel\";\nimport DataGridTable from '../components/DataGridTable'\nimport TenantInfoDisplayCard from \"../components/TenantInfoDisplayCard\";\nimport { commonStyles } from '../components/commonStyles'\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { startOfToday, startOfMonth, endOfMonth, parse, isWithinInterval } from \"date-fns\";\n\nconst chargesColumns = [\n    { field: 'charge_label', headerName: 'Charge Type', width: 200 },\n    { field: 'charge_date', headerName: 'Date Charged', width: 200 },\n    { field: 'charge_amount', headerName: 'Amount', type: \"number\", width: 90 },\n]\n\nconst paymentsColumns = [\n    { field: 'payment_label', headerName: 'Payment For', width: 200 },\n    { field: 'payment_date', headerName: 'Date Made', width: 200 },\n    { field: 'payment_amount', headerName: 'Amount', type: \"number\", width: 90 },\n]\n\nlet TenantDetailsPage = ({\n    rentalPayments,\n    rentalCharges,\n    tenantUnit,\n    tenantDetails,\n    handleItemDelete,\n}) => {\n    const classes = commonStyles()\n    const emergencyContact = {\n        emergency_contact_name: tenantDetails.emergency_contact_name,\n        emergency_contact_relationship: tenantDetails.emergency_contact_relationship,\n        emergency_contact_phone_number: tenantDetails.emergency_contact_phone_number,\n        emergency_contact_email: tenantDetails.emergency_contact_email,\n    }\n    const [tabValue, setTabValue] = React.useState(0);\n\n    const handleTabChange = (event, newValue) => {\n        setTabValue(newValue);\n    };\n\n    const currentMonthCharges = rentalCharges.filter((chargeItem) => {\n        const chargeItemDate = parse(chargeItem.charge_date, 'yyyy-MM-dd', new Date())\n        return isWithinInterval(chargeItemDate, { start: startOfMonth(startOfToday()), end: endOfMonth(startOfToday()) })\n    })\n    const currentMonthPayments = rentalPayments.filter((paymentItem) => {\n        const paymentItemDate = parse(paymentItem.payment_date, 'yyyy-MM-dd', new Date())\n        return isWithinInterval(paymentItemDate, { start: startOfMonth(startOfToday()), end: endOfMonth(startOfToday()) })\n    })\n\n    return (\n        <Layout pageTitle=\"Tenant Summary\">\n            <AppBar position=\"static\">\n                <Tabs value={tabValue} onChange={handleTabChange} aria-label=\"simple tabs example\">\n                    <Tab label=\"Tenant Details\" />\n                    <Tab label=\"Rent &amp; Other Charges\" />\n                </Tabs>\n            </AppBar>\n            <TabPanel value={tabValue} index={1}>\n                <IndividualTenantChargesStatement tenantTransactionCharges={rentalCharges}\n                    tenantDetails={tenantDetails} handleItemDelete={handleItemDelete} classes={classes} />\n            </TabPanel>\n            <TabPanel value={tabValue} index={0}>\n                <Grid container justify=\"center\" direction=\"column\" spacing={2}>\n                    <Grid item key={0}>\n                        <Typography variant=\"h6\">Tenant Details</Typography>\n                    </Grid>\n                    <Grid\n                        container\n                        direction=\"row\"\n                        item\n                        alignItems=\"stretch\"\n                        spacing={2}\n                    >\n                        <Grid item xs={12} md>\n                            <TenantInfoDisplayCard title=\"Tenant Details\"\n                                subheader=\"Personal Info\"\n                                avatarSrc={tenantDetails.contact_avatar_url}\n                                cardContent={[\n                                    { name: 'Name', value: `${tenantDetails.title} ${tenantDetails.first_name} ${tenantDetails.last_name}` },\n                                    { name: 'ID Number', value: tenantDetails.id_number || '-' },\n                                    { name: 'Personal Phone Number', value: tenantDetails.phone_number || tenantUnit.address || '-' },\n                                    { name: 'Work Phone Number', value: tenantDetails.work_mobile_number || '-' },\n                                    { name: 'Home Phone Number', value: tenantDetails.home_phone_number || '-' },\n                                    { name: 'Email', value: tenantDetails.contact_email || '-' },\n                                    { name: 'Emergency Contact Name', value: emergencyContact.emergency_contact_name },\n                                    { name: 'Emergency Contact Relationship', value: emergencyContact.emergency_contact_relationship },\n                                    { name: 'Emergency Contact Phone Number', value: emergencyContact.emergency_contact_phone_number || '-' },\n                                    { name: 'Emergency Contact Email', value: emergencyContact.emergency_contact_email || '-' },\n                                ]}\n                            />\n                        </Grid>\n                        <Grid item xs={12} md>\n                            <Card className={classes.fullHeightWidthContainer} variant=\"outlined\" elevation={1}>\n                                <CardMedia\n                                    height=\"200\"\n                                    component=\"img\"\n                                    image={tenantUnit.unit_image_url}\n                                    title=\"Unit Image\"\n                                />\n                                <CardContent>\n                                    <Typography gutterBottom variant=\"body2\">\n                                        Unit: {tenantUnit.ref}\n                                    </Typography>\n                                    <Typography gutterBottom variant=\"body2\">\n                                        Unit Type: {tenantUnit.unit_type}\n                                    </Typography>\n                                    <Typography gutterBottom variant=\"body2\">\n                                        Beds: {tenantUnit.beds}\n                                    </Typography>\n                                    <Typography gutterBottom variant=\"body2\">\n                                        Baths: {tenantUnit.baths}\n                                    </Typography>\n                                    <Typography gutterBottom variant=\"body2\">\n                                        Unit Sqft: {tenantUnit.sqft}\n                                    </Typography>\n                                    <Typography gutterBottom variant=\"body2\">\n                                        Rent Amount: {tenantUnit.rent_amount}\n                                    </Typography>\n                                    <Typography gutterBottom variant=\"body2\">\n                                        Rent Cycle: {tenantUnit.rent_cycle}\n                                    </Typography>\n                                </CardContent>\n                            </Card>\n                        </Grid>\n                    </Grid>\n                    <Grid container direction=\"row\" item alignItems=\"stretch\" spacing={2}>\n                        <Grid item xs={12} md>\n                            <Card className={classes.fullHeightWidthContainer} variant=\"outlined\" elevation={1}>\n                                <CardContent>\n                                    <Typography gutterBottom align=\"center\" variant=\"subtitle1\" component=\"h2\">\n                                        Recent Charges History\n                                    </Typography>\n                                    <div style={{ height: 400, width: '100%' }}>\n                                        <DataGridTable rows={currentMonthCharges} headCells={chargesColumns} pageSize={5} />\n                                    </div>\n                                </CardContent>\n                            </Card>\n                        </Grid>\n                        <Grid item xs={12} md>\n                            <Card className={classes.fullHeightWidthContainer} variant=\"outlined\" elevation={1}>\n                                <CardContent>\n                                    <Typography gutterBottom align=\"center\" variant=\"subtitle1\" component=\"h2\">\n                                        Recent Payments History\n                                    </Typography>\n                                    <div style={{ height: 400, width: '100%' }}>\n                                        <DataGridTable rows={currentMonthPayments} headCells={paymentsColumns} pageSize={5} />\n                                    </div>\n                                </CardContent>\n                            </Card>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </TabPanel>\n        </Layout>\n    );\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const currentTenantActiveLease = state.leases.filter(({ terminated }) => terminated !== true)\n        .find(({ tenants }) => Array.isArray(tenants) ? tenants.includes(ownProps.match.params.contactId) : false) || {}\n    const unitInLease = state.propertyUnits.find(({ id }) => id === currentTenantActiveLease.unit_id) || {}\n    return {\n        rentalCharges: state.rentalCharges\n            .filter((charge) => charge.tenant_id === ownProps.match.params.contactId).sort((charge1, charge2) => charge2.charge_date > charge1.charge_date)\n            .map((charge) => {\n                const chargeDetails = {}\n                //get payments with this charge id\n                const chargePayments = state.rentalPayments.filter((payment) => payment.charge_id === charge.id)\n                chargeDetails.payed_status = chargePayments.length ? true : false;\n                const payed_amount = chargePayments.reduce((total, currentValue) => {\n                    return total + parseFloat(currentValue.payment_amount) || 0\n                }, 0)\n                chargeDetails.payed_amount = payed_amount\n                chargeDetails.balance = parseFloat(charge.charge_amount) - payed_amount\n                return Object.assign({}, charge, chargeDetails);\n            })\n            .sort((charge1, charge2) => parse(charge2.charge_date, 'yyyy-MM-dd', new Date()) -\n                parse(charge1.charge_date, 'yyyy-MM-dd', new Date())),\n        tenantUnit: Object.assign({}, unitInLease, currentTenantActiveLease),\n        rentalPayments: state.rentalPayments.filter((payment) => payment.tenant_id === ownProps.match.params.contactId),\n        tenantDetails: state.contacts.find(({ id }) => id === ownProps.match.params.contactId) || {}\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleItemDelete: (itemId, url) => dispatch(handleDelete(itemId, url)),\n    };\n};\n\nTenantDetailsPage = connect(mapStateToProps, mapDispatchToProps)(TenantDetailsPage);\n\nexport default withRouter(TenantDetailsPage);\n"]},"metadata":{},"sourceType":"module"}