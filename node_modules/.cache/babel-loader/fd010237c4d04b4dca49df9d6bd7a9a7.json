{"ast":null,"code":"import * as actionTypes from \"../assets/actionTypes\";\nexport function rentalCharges(state = [], action) {\n  switch (action.type) {\n    case actionTypes.TRANSACTION_CHARGES_FETCH_DATA_SUCCESS:\n      return action.rentalCharges;\n\n    case actionTypes.EDIT_TRANSACTION_CHARGE:\n      return state.map(transactionCharge => transactionCharge.id === action.transactionCharge.id ? Object.assign({}, transactionCharge, action.transactionCharge) : transactionCharge);\n\n    case actionTypes.ADD_TRANSACTION_CHARGE:\n      return [...state, action.transactionCharge];\n\n    case actionTypes.DELETE_TRANSACTION_CHARGE:\n      return state.filter(transactionCharge => transactionCharge.id !== action.transactionChargeId);\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/brianmuciri/Projects/farm-ledger-ld/src/reducers/rentalCharges.js"],"names":["actionTypes","rentalCharges","state","action","type","TRANSACTION_CHARGES_FETCH_DATA_SUCCESS","EDIT_TRANSACTION_CHARGE","map","transactionCharge","id","Object","assign","ADD_TRANSACTION_CHARGE","DELETE_TRANSACTION_CHARGE","filter","transactionChargeId"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,uBAA7B;AAEA,OAAO,SAASC,aAAT,CAAuBC,KAAK,GAAG,EAA/B,EAAmCC,MAAnC,EAA2C;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKJ,WAAW,CAACK,sCAAjB;AACI,aAAOF,MAAM,CAACF,aAAd;;AAEJ,SAAKD,WAAW,CAACM,uBAAjB;AACI,aAAOJ,KAAK,CAACK,GAAN,CAAWC,iBAAD,IACbA,iBAAiB,CAACC,EAAlB,KAAyBN,MAAM,CAACK,iBAAP,CAAyBC,EAAlD,GACMC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,iBAAlB,EAAqCL,MAAM,CAACK,iBAA5C,CADN,GAEMA,iBAHH,CAAP;;AAMJ,SAAKR,WAAW,CAACY,sBAAjB;AACI,aAAO,CAAC,GAAGV,KAAJ,EAAWC,MAAM,CAACK,iBAAlB,CAAP;;AAEJ,SAAKR,WAAW,CAACa,yBAAjB;AACI,aAAOX,KAAK,CAACY,MAAN,CACFN,iBAAD,IAAuBA,iBAAiB,CAACC,EAAlB,KAAyBN,MAAM,CAACY,mBADpD,CAAP;;AAIJ;AACI,aAAOb,KAAP;AApBR;AAsBH","sourcesContent":["import * as actionTypes from \"../assets/actionTypes\";\n\nexport function rentalCharges(state = [], action) {\n    switch (action.type) {\n        case actionTypes.TRANSACTION_CHARGES_FETCH_DATA_SUCCESS:\n            return action.rentalCharges;\n\n        case actionTypes.EDIT_TRANSACTION_CHARGE:\n            return state.map((transactionCharge) =>\n                transactionCharge.id === action.transactionCharge.id\n                    ? Object.assign({}, transactionCharge, action.transactionCharge)\n                    : transactionCharge\n            );\n\n        case actionTypes.ADD_TRANSACTION_CHARGE:\n            return [...state, action.transactionCharge];\n\n        case actionTypes.DELETE_TRANSACTION_CHARGE:\n            return state.filter(\n                (transactionCharge) => transactionCharge.id !== action.transactionChargeId\n            );\n\n        default:\n            return state;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}