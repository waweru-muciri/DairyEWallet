{"ast":null,"code":"var _jsxFileName = \"/home/brianmuciri/Projects/farm-ledger-ld/src/Routes/TenantDetailsPage.js\";\nimport React from \"react\";\nimport Layout from \"../components/PrivateLayout\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Tab from '@material-ui/core/Tab';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport { handleDelete } from \"../actions/actions\";\nimport IndividualTenantChargesStatement from \"./IndividualTenantChargesStatement\";\nimport TabPanel from \"../components/TabPanel\";\nimport DataGridTable from '../components/DataGridTable';\nimport TenantInfoDisplayCard from \"../components/TenantInfoDisplayCard\";\nimport { commonStyles } from '../components/commonStyles';\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { startOfToday, startOfMonth, endOfMonth, parse, isWithinInterval } from \"date-fns\";\nconst chargesColumns = [{\n  field: 'charge_label',\n  headerName: 'Charge Type',\n  width: 200\n}, {\n  field: 'charge_date',\n  headerName: 'Date Charged',\n  width: 200\n}, {\n  field: 'charge_amount',\n  headerName: 'Amount',\n  type: \"number\",\n  width: 90\n}];\nconst salesColumns = [{\n  field: 'sale_label',\n  headerName: 'Payment For',\n  width: 200\n}, {\n  field: 'sale_date',\n  headerName: 'Date Made',\n  width: 200\n}, {\n  field: 'sale_amount',\n  headerName: 'Amount',\n  type: \"number\",\n  width: 90\n}];\n\nlet TenantDetailsPage = ({\n  sales,\n  rentalCharges,\n  tenantUnit,\n  tenantDetails,\n  handleItemDelete\n}) => {\n  const classes = commonStyles();\n  const [tabValue, setTabValue] = React.useState(0);\n\n  const handleTabChange = (event, newValue) => {\n    setTabValue(newValue);\n  };\n\n  const currentMonthCharges = rentalCharges.filter(chargeItem => {\n    const chargeItemDate = parse(chargeItem.charge_date, 'yyyy-MM-dd', new Date());\n    return isWithinInterval(chargeItemDate, {\n      start: startOfMonth(startOfToday()),\n      end: endOfMonth(startOfToday())\n    });\n  });\n  const currentMonthPayments = sales.filter(saleItem => {\n    const saleItemDate = parse(saleItem.sale_date, 'yyyy-MM-dd', new Date());\n    return isWithinInterval(saleItemDate, {\n      start: startOfMonth(startOfToday()),\n      end: endOfMonth(startOfToday())\n    });\n  });\n  return /*#__PURE__*/React.createElement(Layout, {\n    pageTitle: \"Customer Summary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Tabs, {\n    value: tabValue,\n    onChange: handleTabChange,\n    \"aria-label\": \"simple tabs example\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Tab, {\n    label: \"Customer Details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Tab, {\n    label: \"Customer Wallet & Charges\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(TabPanel, {\n    value: tabValue,\n    index: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IndividualTenantChargesStatement, {\n    tenantSaleCharges: rentalCharges,\n    tenantDetails: tenantDetails,\n    handleItemDelete: handleItemDelete,\n    classes: classes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(TabPanel, {\n    value: tabValue,\n    index: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    direction: \"column\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    key: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }, \"Customer Details\")), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    item: true,\n    alignItems: \"stretch\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TenantInfoDisplayCard, {\n    title: \"Customer Details\",\n    subheader: \"Personal Info\",\n    avatarSrc: tenantDetails.contact_avatar_url,\n    cardContent: [{\n      name: 'Name',\n      value: `${tenantDetails.title} ${tenantDetails.first_name} ${tenantDetails.last_name}`\n    }, {\n      name: 'ID Number',\n      value: tenantDetails.id_number || '-'\n    }, {\n      name: 'Personal Phone Number',\n      value: tenantDetails.phone_number || tenantUnit.address || '-'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    item: true,\n    alignItems: \"stretch\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.fullHeightWidthContainer,\n    variant: \"outlined\",\n    elevation: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    align: \"center\",\n    variant: \"subtitle1\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 37\n    }\n  }, \"Recent Charges History\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: 400,\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(DataGridTable, {\n    rows: currentMonthCharges,\n    headCells: chargesColumns,\n    pageSize: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 41\n    }\n  }))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.fullHeightWidthContainer,\n    variant: \"outlined\",\n    elevation: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    align: \"center\",\n    variant: \"subtitle1\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 37\n    }\n  }, \"Recent Payments History\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: 400,\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(DataGridTable, {\n    rows: currentMonthPayments,\n    headCells: salesColumns,\n    pageSize: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 41\n    }\n  })))))))));\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const currentTenantActiveLease = state.leases.filter(({\n    terminated\n  }) => terminated !== true).find(({\n    tenants\n  }) => Array.isArray(tenants) ? tenants.includes(ownProps.match.params.contactId) : false) || {};\n  const unitInLease = state.propertyUnits.find(({\n    id\n  }) => id === currentTenantActiveLease.unit_id) || {};\n  return {\n    rentalCharges: state.rentalCharges.filter(charge => charge.tenant_id === ownProps.match.params.contactId).sort((charge1, charge2) => charge2.charge_date > charge1.charge_date).map(charge => {\n      const chargeDetails = {}; //get sales with this charge id\n\n      const chargePayments = state.sales.filter(sale => sale.charge_id === charge.id);\n      chargeDetails.payed_status = chargePayments.length ? true : false;\n      const payed_amount = chargePayments.reduce((total, currentValue) => {\n        return total + parseFloat(currentValue.sale_amount) || 0;\n      }, 0);\n      chargeDetails.payed_amount = payed_amount;\n      chargeDetails.balance = parseFloat(charge.charge_amount) - payed_amount;\n      return Object.assign({}, charge, chargeDetails);\n    }).sort((charge1, charge2) => parse(charge2.charge_date, 'yyyy-MM-dd', new Date()) - parse(charge1.charge_date, 'yyyy-MM-dd', new Date())),\n    tenantUnit: Object.assign({}, unitInLease, currentTenantActiveLease),\n    sales: state.sales.filter(sale => sale.tenant_id === ownProps.match.params.contactId),\n    tenantDetails: state.contacts.find(({\n      id\n    }) => id === ownProps.match.params.contactId) || {}\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleItemDelete: (itemId, url) => dispatch(handleDelete(itemId, url))\n  };\n};\n\nTenantDetailsPage = connect(mapStateToProps, mapDispatchToProps)(TenantDetailsPage);\nexport default withRouter(TenantDetailsPage);","map":{"version":3,"sources":["/home/brianmuciri/Projects/farm-ledger-ld/src/Routes/TenantDetailsPage.js"],"names":["React","Layout","Typography","Grid","Card","CardContent","Tab","AppBar","Tabs","handleDelete","IndividualTenantChargesStatement","TabPanel","DataGridTable","TenantInfoDisplayCard","commonStyles","connect","withRouter","startOfToday","startOfMonth","endOfMonth","parse","isWithinInterval","chargesColumns","field","headerName","width","type","salesColumns","TenantDetailsPage","sales","rentalCharges","tenantUnit","tenantDetails","handleItemDelete","classes","tabValue","setTabValue","useState","handleTabChange","event","newValue","currentMonthCharges","filter","chargeItem","chargeItemDate","charge_date","Date","start","end","currentMonthPayments","saleItem","saleItemDate","sale_date","contact_avatar_url","name","value","title","first_name","last_name","id_number","phone_number","address","fullHeightWidthContainer","height","mapStateToProps","state","ownProps","currentTenantActiveLease","leases","terminated","find","tenants","Array","isArray","includes","match","params","contactId","unitInLease","propertyUnits","id","unit_id","charge","tenant_id","sort","charge1","charge2","map","chargeDetails","chargePayments","sale","charge_id","payed_status","length","payed_amount","reduce","total","currentValue","parseFloat","sale_amount","balance","charge_amount","Object","assign","contacts","mapDispatchToProps","dispatch","itemId","url"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Layout from \"../components/PrivateLayout\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Tab from '@material-ui/core/Tab';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport { handleDelete } from \"../actions/actions\";\nimport IndividualTenantChargesStatement from \"./IndividualTenantChargesStatement\";\nimport TabPanel from \"../components/TabPanel\";\nimport DataGridTable from '../components/DataGridTable'\nimport TenantInfoDisplayCard from \"../components/TenantInfoDisplayCard\";\nimport { commonStyles } from '../components/commonStyles'\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { startOfToday, startOfMonth, endOfMonth, parse, isWithinInterval } from \"date-fns\";\n\nconst chargesColumns = [\n    { field: 'charge_label', headerName: 'Charge Type', width: 200 },\n    { field: 'charge_date', headerName: 'Date Charged', width: 200 },\n    { field: 'charge_amount', headerName: 'Amount', type: \"number\", width: 90 },\n]\n\nconst salesColumns = [\n    { field: 'sale_label', headerName: 'Payment For', width: 200 },\n    { field: 'sale_date', headerName: 'Date Made', width: 200 },\n    { field: 'sale_amount', headerName: 'Amount', type: \"number\", width: 90 },\n]\n\nlet TenantDetailsPage = ({\n    sales,\n    rentalCharges,\n    tenantUnit,\n    tenantDetails,\n    handleItemDelete,\n}) => {\n    const classes = commonStyles()\n\n    const [tabValue, setTabValue] = React.useState(0);\n\n    const handleTabChange = (event, newValue) => {\n        setTabValue(newValue);\n    };\n\n    const currentMonthCharges = rentalCharges.filter((chargeItem) => {\n        const chargeItemDate = parse(chargeItem.charge_date, 'yyyy-MM-dd', new Date())\n        return isWithinInterval(chargeItemDate, { start: startOfMonth(startOfToday()), end: endOfMonth(startOfToday()) })\n    })\n    const currentMonthPayments = sales.filter((saleItem) => {\n        const saleItemDate = parse(saleItem.sale_date, 'yyyy-MM-dd', new Date())\n        return isWithinInterval(saleItemDate, { start: startOfMonth(startOfToday()), end: endOfMonth(startOfToday()) })\n    })\n\n    return (\n        <Layout pageTitle=\"Customer Summary\">\n            <AppBar position=\"static\">\n                <Tabs value={tabValue} onChange={handleTabChange} aria-label=\"simple tabs example\">\n                    <Tab label=\"Customer Details\" />\n                    <Tab label=\"Customer Wallet &amp; Charges\" />\n                </Tabs>\n            </AppBar>\n            <TabPanel value={tabValue} index={1}>\n                <IndividualTenantChargesStatement tenantSaleCharges={rentalCharges}\n                    tenantDetails={tenantDetails} handleItemDelete={handleItemDelete} classes={classes} />\n            </TabPanel>\n            <TabPanel value={tabValue} index={0}>\n                <Grid container justify=\"center\" direction=\"column\" spacing={2}>\n                    <Grid item key={0}>\n                        <Typography variant=\"h6\">Customer Details</Typography>\n                    </Grid>\n                    <Grid\n                        container\n                        direction=\"row\"\n                        item\n                        alignItems=\"stretch\"\n                        spacing={2}\n                    >\n                        <Grid item xs={12} md>\n                            <TenantInfoDisplayCard title=\"Customer Details\"\n                                subheader=\"Personal Info\"\n                                avatarSrc={tenantDetails.contact_avatar_url}\n                                cardContent={[\n                                    { name: 'Name', value: `${tenantDetails.title} ${tenantDetails.first_name} ${tenantDetails.last_name}` },\n                                    { name: 'ID Number', value: tenantDetails.id_number || '-' },\n                                    { name: 'Personal Phone Number', value: tenantDetails.phone_number || tenantUnit.address || '-' },\n                                ]}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Grid container direction=\"row\" item alignItems=\"stretch\" spacing={2}>\n                        <Grid item xs={12} md>\n                            <Card className={classes.fullHeightWidthContainer} variant=\"outlined\" elevation={1}>\n                                <CardContent>\n                                    <Typography gutterBottom align=\"center\" variant=\"subtitle1\" component=\"h2\">\n                                        Recent Charges History\n                                    </Typography>\n                                    <div style={{ height: 400, width: '100%' }}>\n                                        <DataGridTable rows={currentMonthCharges} headCells={chargesColumns} pageSize={5} />\n                                    </div>\n                                </CardContent>\n                            </Card>\n                        </Grid>\n                        <Grid item xs={12} md>\n                            <Card className={classes.fullHeightWidthContainer} variant=\"outlined\" elevation={1}>\n                                <CardContent>\n                                    <Typography gutterBottom align=\"center\" variant=\"subtitle1\" component=\"h2\">\n                                        Recent Payments History\n                                    </Typography>\n                                    <div style={{ height: 400, width: '100%' }}>\n                                        <DataGridTable rows={currentMonthPayments} headCells={salesColumns} pageSize={5} />\n                                    </div>\n                                </CardContent>\n                            </Card>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </TabPanel>\n        </Layout>\n    );\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const currentTenantActiveLease = state.leases.filter(({ terminated }) => terminated !== true)\n        .find(({ tenants }) => Array.isArray(tenants) ? tenants.includes(ownProps.match.params.contactId) : false) || {}\n    const unitInLease = state.propertyUnits.find(({ id }) => id === currentTenantActiveLease.unit_id) || {}\n    return {\n        rentalCharges: state.rentalCharges\n            .filter((charge) => charge.tenant_id === ownProps.match.params.contactId).sort((charge1, charge2) => charge2.charge_date > charge1.charge_date)\n            .map((charge) => {\n                const chargeDetails = {}\n                //get sales with this charge id\n                const chargePayments = state.sales.filter((sale) => sale.charge_id === charge.id)\n                chargeDetails.payed_status = chargePayments.length ? true : false;\n                const payed_amount = chargePayments.reduce((total, currentValue) => {\n                    return total + parseFloat(currentValue.sale_amount) || 0\n                }, 0)\n                chargeDetails.payed_amount = payed_amount\n                chargeDetails.balance = parseFloat(charge.charge_amount) - payed_amount\n                return Object.assign({}, charge, chargeDetails);\n            })\n            .sort((charge1, charge2) => parse(charge2.charge_date, 'yyyy-MM-dd', new Date()) -\n                parse(charge1.charge_date, 'yyyy-MM-dd', new Date())),\n        tenantUnit: Object.assign({}, unitInLease, currentTenantActiveLease),\n        sales: state.sales.filter((sale) => sale.tenant_id === ownProps.match.params.contactId),\n        tenantDetails: state.contacts.find(({ id }) => id === ownProps.match.params.contactId) || {}\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleItemDelete: (itemId, url) => dispatch(handleDelete(itemId, url)),\n    };\n};\n\nTenantDetailsPage = connect(mapStateToProps, mapDispatchToProps)(TenantDetailsPage);\n\nexport default withRouter(TenantDetailsPage);\n"]},"metadata":{},"sourceType":"module"}