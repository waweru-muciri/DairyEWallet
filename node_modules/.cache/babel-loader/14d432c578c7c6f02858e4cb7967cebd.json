{"ast":null,"code":"var _jsxFileName = \"/home/brianmuciri/Projects/farm-ledger-ld/src/components/table/commonTable.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Box from '@material-ui/core/Box';\nimport IconButton from '@material-ui/core/IconButton';\nimport TableBody from '@material-ui/core/TableBody';\nimport Table from '@material-ui/core/Table';\nimport TableRow from '@material-ui/core/TableRow';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableCell from '@material-ui/core/TableCell';\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DetailsIcon from \"@material-ui/icons/Details\";\nimport { withRouter } from \"react-router-dom\";\nimport EnhancedTableHead from \"./EnhancedTableHead\";\nimport useStyles from \"./tableStyles\";\nimport { stableSort, getSorting } from \"./tablesSortingFunctions\";\nimport ConfirmDeleteDialog from \"../ConfirmDeleteDialog\";\n\nfunction CommonTable(props) {\n  const {\n    rows,\n    headCells,\n    selected,\n    setSelected,\n    deleteUrl,\n    handleDelete,\n    noEditCol,\n    noDeleteCol,\n    noDetailsCol,\n    optionalEditHandler\n  } = props;\n  const {\n    match\n  } = props;\n  const classes = useStyles();\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"Beds\");\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(100);\n  const [deleteConfirmOpen, setDeleteConfirmOpen] = React.useState(false);\n  const [idToDelete, setIdToDelete] = React.useState();\n\n  const handleRequestSort = (event, property) => {\n    const isDesc = orderBy === property && order === \"desc\";\n    setOrder(isDesc ? \"asc\" : \"desc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map(n => n.id);\n      setSelected(newSelecteds);\n      return;\n    }\n\n    setSelected([]);\n  };\n\n  const handleClick = (event, id) => {\n    event.stopPropagation();\n    const selectedIndex = selected.indexOf(id);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = id => selected.indexOf(id) !== -1;\n\n  const customEditFunctionPresent = optionalEditHandler && typeof optionalEditHandler === 'function';\n  return /*#__PURE__*/React.createElement(Box, {\n    border: 1,\n    borderRadius: \"borderRadius\",\n    borderColor: \"grey.400\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    stickyHeader: true,\n    className: classes.table,\n    \"aria-labelledby\": \"tableTitle\",\n    size: \"medium\",\n    \"aria-label\": \"enhanced table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(EnhancedTableHead, {\n    classes: classes,\n    numSelected: selected.length,\n    order: order,\n    orderBy: orderBy,\n    onSelectAllClick: handleSelectAllClick,\n    headCells: headCells,\n    onRequestSort: handleRequestSort,\n    rowCount: rows.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }, stableSort(rows, getSorting(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n    const isItemSelected = isSelected(row.id);\n    const labelId = `enhanced-table-checkbox-${index}`;\n    return /*#__PURE__*/React.createElement(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      \"aria-checked\": isItemSelected,\n      tabIndex: -1,\n      key: row.id,\n      selected: isItemSelected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      padding: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      onClick: event => handleClick(event, row.id),\n      checked: isItemSelected,\n      inputProps: {\n        \"aria-labelledby\": labelId\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 45\n      }\n    })), headCells.map((headCell, tableCellIndex) => {\n      const tableCellData = row[headCell.id];\n      return headCell.id === 'edit' ? noEditCol ? null : /*#__PURE__*/React.createElement(TableCell, {\n        key: `edit${tableCellIndex}`,\n        component: \"th\",\n        scope: \"row\",\n        sortDirection: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"Edit\",\n        placement: \"bottom\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, Object.assign({\n        color: \"primary\",\n        size: \"small\"\n      }, customEditFunctionPresent ? {\n        onClick: () => optionalEditHandler(row.id)\n      } : {\n        to: `${match.url}/${row.id}/edit`,\n        component: Link\n      }, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 73\n        }\n      }), /*#__PURE__*/React.createElement(EditIcon, {\n        fontSize: \"default\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 77\n        }\n      })))) : headCell.id === 'delete' ? noDeleteCol ? null : /*#__PURE__*/React.createElement(TableCell, {\n        key: `delete${tableCellIndex}`,\n        component: \"th\",\n        scope: \"row\",\n        sortDirection: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"Delete\",\n        placement: \"bottom\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        onClick: event => {\n          setIdToDelete(row.id);\n          setDeleteConfirmOpen(!deleteConfirmOpen);\n        },\n        color: \"primary\",\n        size: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 77\n        }\n      }, /*#__PURE__*/React.createElement(DeleteIcon, {\n        fontSize: \"default\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 81\n        }\n      })))) : headCell.id === 'details' ? !noDetailsCol ? null : /*#__PURE__*/React.createElement(TableCell, {\n        key: `details${tableCellIndex}`,\n        component: \"th\",\n        scope: \"row\",\n        sortDirection: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"Details\",\n        placement: \"bottom\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 77\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        color: \"primary\",\n        size: \"small\",\n        component: Link,\n        to: `${match.url}/${row.id}/details`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 81\n        }\n      }, /*#__PURE__*/React.createElement(DetailsIcon, {\n        fontSize: \"default\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 85\n        }\n      })))) : /*#__PURE__*/React.createElement(TableCell, {\n        key: tableCellIndex,\n        component: \"th\",\n        id: labelId,\n        scope: \"row\",\n        align: \"center\",\n        padding: \"none\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 65\n        }\n      }, typeof tableCellData === \"boolean\" ? tableCellData ? \"Yes\" : \"No\" : tableCellData);\n    }));\n  })))), /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [50, 100, 200, 300],\n    component: \"div\",\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ConfirmDeleteDialog, {\n    open: deleteConfirmOpen,\n    setDeleteConfirmOpen: setDeleteConfirmOpen,\n    onConfirm: () => {\n      handleDelete(idToDelete, deleteUrl);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default withRouter(CommonTable);","map":{"version":3,"sources":["/home/brianmuciri/Projects/farm-ledger-ld/src/components/table/commonTable.js"],"names":["React","Link","Box","IconButton","TableBody","Table","TableRow","Tooltip","TablePagination","Checkbox","TableContainer","TableCell","DeleteIcon","EditIcon","DetailsIcon","withRouter","EnhancedTableHead","useStyles","stableSort","getSorting","ConfirmDeleteDialog","CommonTable","props","rows","headCells","selected","setSelected","deleteUrl","handleDelete","noEditCol","noDeleteCol","noDetailsCol","optionalEditHandler","match","classes","order","setOrder","useState","orderBy","setOrderBy","page","setPage","rowsPerPage","setRowsPerPage","deleteConfirmOpen","setDeleteConfirmOpen","idToDelete","setIdToDelete","handleRequestSort","event","property","isDesc","handleSelectAllClick","target","checked","newSelecteds","map","n","id","handleClick","stopPropagation","selectedIndex","indexOf","newSelected","concat","slice","length","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","value","isSelected","customEditFunctionPresent","table","row","index","isItemSelected","labelId","headCell","tableCellIndex","tableCellData","onClick","to","url","component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Box from '@material-ui/core/Box';\nimport IconButton from '@material-ui/core/IconButton';\nimport TableBody from '@material-ui/core/TableBody';\nimport Table from '@material-ui/core/Table';\nimport TableRow from '@material-ui/core/TableRow';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableCell from '@material-ui/core/TableCell';\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DetailsIcon from \"@material-ui/icons/Details\";\nimport { withRouter } from \"react-router-dom\";\nimport EnhancedTableHead from \"./EnhancedTableHead\";\nimport useStyles from \"./tableStyles\";\nimport { stableSort, getSorting } from \"./tablesSortingFunctions\";\nimport ConfirmDeleteDialog from \"../ConfirmDeleteDialog\";\n\nfunction CommonTable(props) {\n    const {\n        rows,\n        headCells,\n        selected,\n        setSelected,\n        deleteUrl,\n        handleDelete,\n        noEditCol,\n        noDeleteCol,\n        noDetailsCol,\n        optionalEditHandler\n    } = props;\n    const { match } = props;\n    const classes = useStyles();\n    const [order, setOrder] = React.useState(\"asc\");\n    const [orderBy, setOrderBy] = React.useState(\"Beds\");\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(100);\n    const [deleteConfirmOpen, setDeleteConfirmOpen] = React.useState(false);\n    const [idToDelete, setIdToDelete] = React.useState();\n\n    const handleRequestSort = (event, property) => {\n        const isDesc = orderBy === property && order === \"desc\";\n        setOrder(isDesc ? \"asc\" : \"desc\");\n        setOrderBy(property);\n    };\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = rows.map((n) => n.id);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, id) => {\n        event.stopPropagation();\n        const selectedIndex = selected.indexOf(id);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, id);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const isSelected = (id) => selected.indexOf(id) !== -1;\n    const customEditFunctionPresent = optionalEditHandler && typeof optionalEditHandler === 'function';\n\n    return (\n        <Box border={1} borderRadius=\"borderRadius\" borderColor=\"grey.400\">\n            <TableContainer>\n                <Table\n                    stickyHeader\n                    className={classes.table}\n                    aria-labelledby=\"tableTitle\"\n                    size={\"medium\"}\n                    aria-label=\"enhanced table\"\n                >\n                    <EnhancedTableHead\n                        classes={classes}\n                        numSelected={selected.length}\n                        order={order}\n                        orderBy={orderBy}\n                        onSelectAllClick={handleSelectAllClick}\n                        headCells={headCells}\n                        onRequestSort={handleRequestSort}\n                        rowCount={rows.length}\n                    />\n                    <TableBody>\n                        {stableSort(rows, getSorting(order, orderBy))\n                            .slice(\n                                page * rowsPerPage,\n                                page * rowsPerPage + rowsPerPage\n                            )\n                            .map((row, index) => {\n                                const isItemSelected = isSelected(row.id);\n                                const labelId = `enhanced-table-checkbox-${index}`;\n\n                                return (\n                                    <TableRow\n                                        hover\n                                        role=\"checkbox\"\n                                        aria-checked={isItemSelected}\n                                        tabIndex={-1}\n                                        key={row.id}\n                                        selected={isItemSelected}\n                                    >\n                                        <TableCell padding=\"checkbox\">\n                                            <Checkbox\n                                                onClick={(event) =>\n                                                    handleClick(event, row.id)\n                                                }\n                                                checked={isItemSelected}\n                                                inputProps={{\n                                                    \"aria-labelledby\": labelId,\n                                                }}\n                                            />\n                                        </TableCell>\n                                        {headCells.map(\n                                            (headCell, tableCellIndex) => {\n                                                const tableCellData =\n                                                    row[headCell.id];\n\n                                                return (\n                                                    headCell.id === 'edit' ?\n                                                        (\n                                                            noEditCol ? null : (\n                                                                <TableCell\n                                                                    key={`edit${tableCellIndex}`}\n                                                                    component=\"th\"\n                                                                    scope=\"row\"\n                                                                    sortDirection={false}\n                                                                >\n                                                                    <Tooltip\n                                                                        title=\"Edit\"\n                                                                        placement=\"bottom\"\n                                                                    >\n                                                                        <IconButton\n                                                                            color=\"primary\"\n                                                                            size=\"small\"\n                                                                            {...(customEditFunctionPresent ?\n                                                                                { onClick: () => optionalEditHandler(row.id) } :\n                                                                                { to: `${match.url}/${row.id}/edit`, component: Link, })}\n                                                                        >\n                                                                            <EditIcon fontSize=\"default\" />\n                                                                        </IconButton>\n                                                                    </Tooltip>\n                                                                </TableCell>\n                                                            )\n                                                        )\n                                                        : headCell.id === 'delete' ?\n                                                            (\n                                                                noDeleteCol ? null : (\n                                                                    <TableCell\n                                                                        key={`delete${tableCellIndex}`}\n                                                                        component=\"th\"\n                                                                        scope=\"row\"\n                                                                        sortDirection={false}\n                                                                    >\n                                                                        <Tooltip\n                                                                            title=\"Delete\"\n                                                                            placement=\"bottom\"\n                                                                        >\n                                                                            <IconButton\n                                                                                onClick={(event) => {\n                                                                                    setIdToDelete(row.id);\n                                                                                    setDeleteConfirmOpen(!deleteConfirmOpen);\n                                                                                }}\n                                                                                color=\"primary\"\n                                                                                size=\"small\"\n                                                                            >\n                                                                                <DeleteIcon fontSize=\"default\" />\n                                                                            </IconButton>\n                                                                        </Tooltip>\n                                                                    </TableCell>\n                                                                )\n                                                            )\n                                                            : headCell.id === 'details' ?\n                                                                (\n                                                                    !noDetailsCol ? null : (\n                                                                        <TableCell\n                                                                            key={`details${tableCellIndex}`}\n                                                                            component=\"th\"\n                                                                            scope=\"row\"\n                                                                            sortDirection={false}\n                                                                        >\n                                                                            <Tooltip\n                                                                                title=\"Details\"\n                                                                                placement=\"bottom\"\n                                                                            >\n                                                                                <IconButton\n                                                                                    color=\"primary\"\n                                                                                    size=\"small\"\n                                                                                    component={Link}\n                                                                                    to={`${match.url}/${row.id}/details`}\n                                                                                >\n                                                                                    <DetailsIcon fontSize=\"default\" />\n                                                                                </IconButton>\n                                                                            </Tooltip>\n                                                                        </TableCell>\n                                                                    )\n                                                                )\n                                                                :\n                                                                <TableCell\n                                                                    key={tableCellIndex}\n                                                                    component=\"th\"\n                                                                    id={labelId}\n                                                                    scope=\"row\"\n                                                                    align=\"center\"\n                                                                    padding=\"none\"\n                                                                >\n                                                                    {typeof tableCellData ===\n                                                                        \"boolean\"\n                                                                        ? tableCellData\n                                                                            ? \"Yes\"\n                                                                            : \"No\"\n                                                                        : tableCellData}\n                                                                </TableCell>\n                                                );\n                                            }\n                                        )}\n                                    </TableRow>\n                                );\n                            })}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <TablePagination\n                rowsPerPageOptions={[50, 100, 200, 300]}\n                component=\"div\"\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n            />\n            <ConfirmDeleteDialog open={deleteConfirmOpen} setDeleteConfirmOpen={setDeleteConfirmOpen} onConfirm={() => {\n                handleDelete(\n                    idToDelete,\n                    deleteUrl\n                );\n            }} />\n        </Box>\n    );\n}\n\n\nexport default withRouter(CommonTable);\n"]},"metadata":{},"sourceType":"module"}