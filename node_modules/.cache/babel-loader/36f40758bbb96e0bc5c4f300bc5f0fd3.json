{"ast":null,"code":"var _jsxFileName = \"/home/brianmuciri/Projects/farm-ledger-ld/src/components/meterReadings/MeterReadingInputForm.js\";\nimport React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport Button from '@mui/material/Button';\nimport TextField from \"@mui/material/TextField\";\nimport CustomSnackbar from './CustomSnackBar';\nimport { Formik } from \"formik\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport * as Yup from \"yup\";\nimport CustomCircularProgress from \"./CustomCircularProgress\";\nimport { format, startOfToday } from \"date-fns\";\nimport CancelButton from \"./CancelButton\";\nconst defaultDate = format(startOfToday(), 'yyyy-MM-dd');\nconst ProductSchema = Yup.object().shape({\n  product_name: Yup.string().trim().required(\"product Type is required\"),\n  product_quantity: Yup.number().required(\"Quantity is required\").min(0, \"Amount must be greater than 0\"),\n  product_purchase_price: Yup.number().min(0, \"Amount must be greater than 0\"),\n  purchase_date: Yup.date().required(\"Date Required\")\n});\n\nconst ProductInputForm = ({\n  history,\n  ProductToEdit,\n  handleItemSubmit\n}) => {\n  const ProductValues = {\n    id: ProductToEdit.id,\n    purchase_date: ProductToEdit.purchase_date || defaultDate,\n    product_name: ProductToEdit.product_name || '',\n    product_quantity: ProductToEdit.product_quantity || '',\n    product_purchase_price: ProductToEdit.product_purchase_price || ''\n  };\n  return /*#__PURE__*/React.createElement(Formik, {\n    initialValues: ProductValues,\n    enableReinitialize: true,\n    validationSchema: ProductSchema,\n    onSubmit: async (values, {\n      resetForm,\n      setStatus\n    }) => {\n      try {\n        const Product = {\n          id: values.id,\n          product_name: values.product_name,\n          product_quantity: values.product_quantity,\n          product_purchase_price: values.product_purchase_price,\n          purchase_date: values.purchase_date\n        };\n        await handleItemSubmit(Product, \"products\");\n        resetForm({});\n\n        if (values.id) {\n          history.goBack();\n        }\n\n        setStatus({\n          sent: true,\n          msg: \"Product Saved.\"\n        });\n      } catch (error) {\n        setStatus({\n          sent: false,\n          msg: `Error! ${error}.`\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, ({\n    values,\n    status,\n    handleSubmit,\n    errors,\n    touched,\n    handleChange,\n    handleBlur,\n    isSubmitting\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    method: \"post\",\n    id: \"productInputForm\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"center\",\n    alignItems: \"stretch\",\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, status && status.msg && /*#__PURE__*/React.createElement(CustomSnackbar, {\n    variant: status.sent ? \"success\" : \"error\",\n    message: status.msg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }), isSubmitting && /*#__PURE__*/React.createElement(CustomCircularProgress, {\n    open: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 32\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    type: \"date\",\n    InputLabelProps: {\n      shrink: true\n    },\n    variant: \"outlined\",\n    id: \"purchase_date\",\n    name: \"purchase_date\",\n    label: \"Purchase Date\",\n    value: values.purchase_date,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    error: errors.purchase_date && touched.purchase_date,\n    helperText: touched.purchase_date && errors.purchase_date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    id: \"product_name\",\n    name: \"product_name\",\n    label: \"Product Name\",\n    value: values.product_name,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    error: errors.product_name && touched.product_name,\n    helperText: touched.product_name && errors.product_name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    id: \"product_quantity\",\n    name: \"product_quantity\",\n    label: \"Product Quantity\",\n    value: values.product_quantity,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    error: errors.product_quantity && touched.product_quantity,\n    helperText: touched.product_quantity && errors.product_quantity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    id: \"product_purchase_price\",\n    name: \"product_purchase_price\",\n    label: \"Purchase Price\",\n    value: values.product_purchase_price,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    error: errors.product_purchase_price && touched.product_purchase_price,\n    helperText: touched.product_purchase_price && errors.product_purchase_price,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"row\",\n    className: classes.buttonBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    variant: \"contained\",\n    size: \"medium\",\n    startIcon: /*#__PURE__*/React.createElement(CancelIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 32\n      }\n    }),\n    onClick: () => history.goBack(),\n    disableElevation: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 19\n    }\n  }, \"Cancel\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"medium\",\n    startIcon: /*#__PURE__*/React.createElement(SaveIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 32\n      }\n    }),\n    form: \"productInputForm\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 19\n    }\n  }, \"Save\")))))));\n};\n\nexport default ProductInputForm;","map":{"version":3,"sources":["/home/brianmuciri/Projects/farm-ledger-ld/src/components/meterReadings/MeterReadingInputForm.js"],"names":["React","Grid","Button","TextField","CustomSnackbar","Formik","SaveIcon","Yup","CustomCircularProgress","format","startOfToday","CancelButton","defaultDate","ProductSchema","object","shape","product_name","string","trim","required","product_quantity","number","min","product_purchase_price","purchase_date","date","ProductInputForm","history","ProductToEdit","handleItemSubmit","ProductValues","id","values","resetForm","setStatus","Product","goBack","sent","msg","error","status","handleSubmit","errors","touched","handleChange","handleBlur","isSubmitting","shrink","classes","buttonBox"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport Button from '@mui/material/Button';\nimport TextField from \"@mui/material/TextField\";\nimport CustomSnackbar from './CustomSnackBar';\nimport { Formik } from \"formik\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport * as Yup from \"yup\";\nimport CustomCircularProgress from \"./CustomCircularProgress\";\nimport { format, startOfToday } from \"date-fns\";\nimport CancelButton from \"./CancelButton\";\n\nconst defaultDate = format(startOfToday(), 'yyyy-MM-dd')\n\n\nconst ProductSchema = Yup.object().shape({\n  product_name: Yup.string().trim().required(\"product Type is required\"),\n  product_quantity: Yup.number().required(\"Quantity is required\").min(0, \"Amount must be greater than 0\"),\n  product_purchase_price: Yup.number().min(0, \"Amount must be greater than 0\"),\n  purchase_date: Yup.date().required(\"Date Required\"),\n});\n\n\nconst ProductInputForm = ({ history, ProductToEdit, handleItemSubmit }) => {\n\n  const ProductValues = {\n    id: ProductToEdit.id,\n    purchase_date: ProductToEdit.purchase_date || defaultDate,\n    product_name: ProductToEdit.product_name || '',\n    product_quantity: ProductToEdit.product_quantity || '',\n    product_purchase_price: ProductToEdit.product_purchase_price || '',\n  }\n\n  return (\n    <Formik\n      initialValues={ProductValues}\n      enableReinitialize\n      validationSchema={ProductSchema}\n      onSubmit={async (values, { resetForm, setStatus }) => {\n        try {\n          const Product = {\n            id: values.id,\n            product_name: values.product_name,\n            product_quantity: values.product_quantity,\n            product_purchase_price: values.product_purchase_price,\n            purchase_date: values.purchase_date,\n          };\n          await handleItemSubmit(Product, \"products\")\n          resetForm({})\n          if (values.id) {\n            history.goBack();\n          }\n          setStatus({ sent: true, msg: \"Product Saved.\" })\n        } catch (error) {\n          setStatus({ sent: false, msg: `Error! ${error}.` })\n        }\n      }}\n    >\n      {({\n        values,\n        status,\n        handleSubmit,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        isSubmitting,\n      }) => (\n        <form\n          method=\"post\"\n          id=\"productInputForm\"\n          onSubmit={handleSubmit}\n        >\n          <Grid\n            container\n            spacing={2}\n            justify=\"center\"\n            alignItems=\"stretch\"\n            direction=\"column\"\n          >\n            {\n              status && status.msg && (\n                <CustomSnackbar\n                  variant={status.sent ? \"success\" : \"error\"}\n                  message={status.msg}\n                />\n              )\n            }\n            {\n              isSubmitting && (<CustomCircularProgress open={true} />)\n            }\n            <Grid item container spacing={2}>\n              <Grid item>\n                <TextField\n                  fullWidth\n                  type=\"date\"\n                  InputLabelProps={{ shrink: true }}\n                  variant=\"outlined\"\n                  id=\"purchase_date\"\n                  name=\"purchase_date\"\n                  label=\"Purchase Date\"\n                  value={values.purchase_date}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  error={errors.purchase_date && touched.purchase_date}\n                  helperText={touched.purchase_date && errors.purchase_date}\n\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  fullWidth\n                  variant=\"outlined\"\n                  id=\"product_name\"\n                  name=\"product_name\"\n                  label=\"Product Name\"\n                  value={values.product_name}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  error={errors.product_name && touched.product_name}\n                  helperText={touched.product_name && errors.product_name}\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  fullWidth\n                  variant=\"outlined\"\n                  id=\"product_quantity\"\n                  name=\"product_quantity\"\n                  label=\"Product Quantity\"\n                  value={values.product_quantity}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  error={errors.product_quantity && touched.product_quantity}\n                  helperText={touched.product_quantity && errors.product_quantity}\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  fullWidth\n                  variant=\"outlined\"\n                  id=\"product_purchase_price\"\n                  name=\"product_purchase_price\"\n                  label=\"Purchase Price\"\n                  value={values.product_purchase_price}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  error={errors.product_purchase_price && touched.product_purchase_price}\n                  helperText={touched.product_purchase_price && errors.product_purchase_price}\n                />\n              </Grid>\n              < Grid\n                item\n                container\n                direction=\"row\"\n                className={classes.buttonBox}\n              >\n                <Grid item>\n                  <Button\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    size=\"medium\"\n                    startIcon={<CancelIcon />}\n                    onClick={() => history.goBack()}\n                    disableElevation\n                  >\n                    Cancel\n                  </Button>\n                </Grid>\n                <Grid item>\n                  <Button\n                    type=\"submit\"\n                    color=\"primary\"\n                    variant=\"contained\"\n                    size=\"medium\"\n                    startIcon={<SaveIcon />}\n                    form=\"productInputForm\"\n                    disabled={isSubmitting}\n                  >\n                    Save\n                  </Button>\n                </Grid>\n              </Grid >\n            </Grid>\n          </Grid>\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nexport default ProductInputForm;\n\n"]},"metadata":{},"sourceType":"module"}