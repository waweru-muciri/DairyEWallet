{"ast":null,"code":"var _jsxFileName = \"/home/brianmuciri/Projects/farm-ledger-ld/src/Routes/TenantsStatements.js\";\nimport React, { lazy } from \"react\";\nimport Layout from \"../components/PrivateLayout\";\nimport Tab from '@material-ui/core/Tab';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport TabPanel from \"../components/TabPanel\";\nimport { commonStyles } from '../components/commonStyles';\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport TenantsChargesStatement from \"./TenantsChargesStatement\";\nimport { parse } from \"date-fns\";\nconst TenantsPaymentsStatement = lazy(() => import('./TenantsPaymentsStatement'));\n\nlet TenantStatementsPage = ({\n  rentalPayments,\n  rentalCharges,\n  contacts,\n  properties\n}) => {\n  const classes = commonStyles();\n  const [tabValue, setTabValue] = React.useState(0);\n\n  const handleTabChange = (event, newValue) => {\n    setTabValue(newValue);\n  };\n\n  return /*#__PURE__*/React.createElement(Layout, {\n    pageTitle: \"Tenants Statements\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Tabs, {\n    value: tabValue,\n    onChange: handleTabChange,\n    \"aria-label\": \"simple tabs example\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Tab, {\n    label: \"Tenants Charges Statement\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Tab, {\n    label: \"Tenants Payments Statement\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(TabPanel, {\n    value: tabValue,\n    index: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TenantsChargesStatement, {\n    contacts: contacts,\n    rentalCharges: rentalCharges,\n    properties: properties,\n    classes: classes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(TabPanel, {\n    value: tabValue,\n    index: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TenantsPaymentsStatement, {\n    contacts: contacts,\n    rentalPayments: rentalPayments,\n    properties: properties,\n    classes: classes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  })));\n};\n\nconst mapStateToProps = state => {\n  return {\n    rentalCharges: state.rentalCharges.map(charge => {\n      const tenant = state.contacts.find(contact => contact.id === charge.tenant_id) || {};\n      const tenantUnit = state.propertyUnits.find(({\n        id\n      }) => id === charge.unit_id) || {};\n      return Object.assign({}, charge, {\n        tenant_name: `${tenant.first_name} ${tenant.last_name}`,\n        tenant_id_number: tenant.id_number,\n        unit_ref: tenantUnit.ref\n      });\n    }).sort((charge1, charge2) => parse(charge2.charge_date, 'yyyy-MM-dd', new Date()) - parse(charge1.charge_date, 'yyyy-MM-dd', new Date())),\n    rentalPayments: state.rentalPayments.map(transaction => {\n      const tenant = state.contacts.find(({\n        id\n      }) => id === transaction.tenant_id) || {};\n      const tenantUnit = state.propertyUnits.find(({\n        id\n      }) => id === transaction.unit_id) || {};\n      return Object.assign({}, transaction, {\n        tenant_name: `${tenant.first_name} ${tenant.last_name}`,\n        tenant_id_number: tenant.id_number,\n        unit_ref: tenantUnit.ref\n      });\n    }).sort((sale1, sale2) => parse(sale2.sale_date, 'yyyy-MM-dd', new Date()) - parse(sale1.sale_date, 'yyyy-MM-dd', new Date())),\n    contacts: state.contacts,\n    properties: state.properties\n  };\n};\n\nTenantStatementsPage = connect(mapStateToProps)(TenantStatementsPage);\nexport default withRouter(TenantStatementsPage);","map":{"version":3,"sources":["/home/brianmuciri/Projects/farm-ledger-ld/src/Routes/TenantsStatements.js"],"names":["React","lazy","Layout","Tab","AppBar","Tabs","TabPanel","commonStyles","connect","withRouter","TenantsChargesStatement","parse","TenantsPaymentsStatement","TenantStatementsPage","rentalPayments","rentalCharges","contacts","properties","classes","tabValue","setTabValue","useState","handleTabChange","event","newValue","mapStateToProps","state","map","charge","tenant","find","contact","id","tenant_id","tenantUnit","propertyUnits","unit_id","Object","assign","tenant_name","first_name","last_name","tenant_id_number","id_number","unit_ref","ref","sort","charge1","charge2","charge_date","Date","transaction","sale1","sale2","sale_date"],"mappings":"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","sourcesContent":["import React, { lazy } from \"react\";\nimport Layout from \"../components/PrivateLayout\";\nimport Tab from '@material-ui/core/Tab';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport TabPanel from \"../components/TabPanel\";\nimport { commonStyles } from '../components/commonStyles'\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport TenantsChargesStatement from \"./TenantsChargesStatement\";\nimport { parse } from \"date-fns\";\nconst TenantsPaymentsStatement = lazy(() => import('./TenantsPaymentsStatement'));\n\nlet TenantStatementsPage = ({\n    rentalPayments,\n    rentalCharges,\n    contacts,\n    properties,\n}) => {\n    const classes = commonStyles()\n    const [tabValue, setTabValue] = React.useState(0);\n\n    const handleTabChange = (event, newValue) => {\n        setTabValue(newValue);\n    };\n\n    return (\n        <Layout pageTitle=\"Tenants Statements\">\n            <AppBar position=\"static\">\n                <Tabs value={tabValue} onChange={handleTabChange} aria-label=\"simple tabs example\">\n                    <Tab label=\"Tenants Charges Statement\" />\n                    <Tab label=\"Tenants Payments Statement\" />\n                </Tabs>\n            </AppBar>\n            <TabPanel value={tabValue} index={0}>\n                <TenantsChargesStatement contacts={contacts} rentalCharges={rentalCharges} properties={properties} classes={classes} />\n            </TabPanel>\n            <TabPanel value={tabValue} index={1}>\n                <TenantsPaymentsStatement contacts={contacts} rentalPayments={rentalPayments} properties={properties} classes={classes} />\n            </TabPanel>\n        </Layout>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        rentalCharges: state.rentalCharges\n            .map(charge => {\n                const tenant = state.contacts.find((contact) => contact.id === charge.tenant_id) || {};\n                const tenantUnit = state.propertyUnits.find(({ id }) => id === charge.unit_id) || {};\n                return Object.assign({}, charge, {\n                    tenant_name: `${tenant.first_name} ${tenant.last_name}`,\n                    tenant_id_number: tenant.id_number,\n                    unit_ref: tenantUnit.ref\n                })\n            })\n            .sort((charge1, charge2) => parse(charge2.charge_date, 'yyyy-MM-dd', new Date()) -\n                parse(charge1.charge_date, 'yyyy-MM-dd', new Date())),\n        rentalPayments: state.rentalPayments\n            .map(transaction => {\n                const tenant = state.contacts.find(({ id }) => id === transaction.tenant_id) || {};\n                const tenantUnit = state.propertyUnits.find(({ id }) => id === transaction.unit_id) || {};\n                return Object.assign({}, transaction, {\n                    tenant_name: `${tenant.first_name} ${tenant.last_name}`,\n                    tenant_id_number: tenant.id_number,\n                    unit_ref: tenantUnit.ref\n                })\n            })\n            .sort((sale1, sale2) => parse(sale2.sale_date, 'yyyy-MM-dd', new Date()) -\n                parse(sale1.sale_date, 'yyyy-MM-dd', new Date())),\n        contacts: state.contacts,\n        properties: state.properties,\n    };\n};\n\nTenantStatementsPage = connect(mapStateToProps)(TenantStatementsPage);\n\nexport default withRouter(TenantStatementsPage);\n"]},"metadata":{},"sourceType":"module"}