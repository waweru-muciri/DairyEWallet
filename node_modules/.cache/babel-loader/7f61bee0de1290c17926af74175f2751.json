{"ast":null,"code":"var _jsxFileName = \"/home/brianmuciri/Projects/farm-ledger-ld/src/Routes/IndividualTenantChargesStatement.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Box from \"@material-ui/core/Box\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport ExportToExcelBtn from \"../components/ExportToExcelBtn\";\nimport PrintArrayToPdf from \"../components/PrintArrayToPdfBtn\";\nimport CommonTable from \"../components/table/commonTable\";\nimport { getSalesFilterOptions, currencyFormatter, getStartEndDatesForPeriod } from \"../assets/commonAssets\";\nimport { parse, isWithinInterval } from \"date-fns\";\nconst TRANSACTIONS_FILTER_OPTIONS = getSalesFilterOptions();\nconst headCells = [{\n  id: \"charge_label\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Charge Type\"\n}, {\n  id: \"charge_date\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Charge Date\"\n}, {\n  id: \"due_date\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Due Date\"\n}, {\n  id: \"charge_amount\",\n  numeric: true,\n  disablePadding: true,\n  label: \"Charge Amount\"\n}, {\n  id: \"payed_status\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Payments Made\"\n}, {\n  id: \"payed_amount\",\n  numeric: true,\n  disablePadding: true,\n  label: \"Total Amounts Paid\"\n}, {\n  id: \"balance\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Balance\"\n}];\n\nlet TenantChargesStatementPage = ({\n  contactDetails,\n  tenantSaleCharges,\n  handleItemDelete,\n  classes\n}) => {\n  let [tenantChargesItems, setTenantChargesItems] = useState([]);\n  let [filteredChargeItems, setFilteredChargeItems] = useState([]);\n  let [chargeType, setChargeTypeFilter] = useState(\"\");\n  let [periodFilter, setPeriodFilter] = useState(\"month-to-date\");\n  const [selected, setSelected] = useState([]);\n  const CHARGE_TYPES = Array.from(new Set(tenantChargesItems.map(chargeItem => JSON.stringify({\n    label: chargeItem.charge_label,\n    value: chargeItem.charge_type\n  })))).map(chargeType => JSON.parse(chargeType));\n  const totalRentCharges = filteredChargeItems.filter(charge => charge.charge_type === 'rent').reduce((total, currentValue) => {\n    return total + parseFloat(currentValue.charge_amount) || 0;\n  }, 0);\n  const totalOtherCharges = filteredChargeItems.filter(charge => charge.charge_type !== 'rent').reduce((total, currentValue) => {\n    return total + parseFloat(currentValue.charge_amount) || 0;\n  }, 0);\n  const totalRentPayments = filteredChargeItems.filter(sale => sale.charge_type === 'rent').reduce((total, currentValue) => {\n    return total + parseFloat(currentValue.payed_amount) || 0;\n  }, 0);\n  const totalOtherPayments = filteredChargeItems.filter(sale => sale.charge_type !== 'rent').reduce((total, currentValue) => {\n    return total + parseFloat(currentValue.payed_amount) || 0;\n  }, 0);\n  useEffect(() => {\n    setTenantChargesItems(tenantSaleCharges);\n    setFilteredChargeItems(filterChargesByCriteria(tenantSaleCharges));\n  }, [tenantSaleCharges]);\n\n  const filterChargesByCriteria = chargesToFilter => {\n    let filteredStatements = chargesToFilter;\n\n    if (periodFilter) {\n      const {\n        startDate,\n        endDate\n      } = getStartEndDatesForPeriod(periodFilter);\n      filteredStatements = filteredStatements.filter(chargeItem => {\n        const chargeItemDate = parse(chargeItem.charge_date, 'yyyy-MM-dd', new Date());\n        return isWithinInterval(chargeItemDate, {\n          start: startDate,\n          end: endDate\n        });\n      });\n    }\n\n    filteredStatements = filteredStatements.filter(({\n      charge_type\n    }) => !chargeType ? true : charge_type === chargeType);\n    return filteredStatements;\n  };\n\n  const handleSearchFormSubmit = event => {\n    event.preventDefault(); //filter the tenantSaleCharges according to the search criteria here\n\n    setFilteredChargeItems(filterChargesByCriteria(tenantChargesItems));\n  };\n\n  const resetSearchForm = event => {\n    event.preventDefault();\n    setChargeTypeFilter(\"\");\n    setPeriodFilter(\"month-to-date\");\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"center\",\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, \"Records Statement - \", contactDetails.first_name, \" \", contactDetails.last_name, \" \")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    spacing: 2,\n    alignItems: \"center\",\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ExportToExcelBtn, {\n    disabled: !selected.length,\n    reportName: `${contactDetails.first_name} ${contactDetails.last_name} Charges Record`,\n    reportTitle: 'Records Data',\n    headCells: headCells,\n    dataToPrint: tenantChargesItems.filter(({\n      id\n    }) => selected.includes(id)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PrintArrayToPdf, {\n    disabled: !selected.length,\n    reportName: 'Records Data',\n    reportTitle: `${contactDetails.first_name} ${contactDetails.last_name} Charges Record`,\n    headCells: headCells,\n    dataToPrint: tenantChargesItems.filter(({\n      id\n    }) => selected.includes(id)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    border: 1,\n    borderRadius: \"borderRadius\",\n    borderColor: \"grey.400\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    id: \"contactSearchForm\",\n    onSubmit: handleSearchFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    spacing: 2,\n    justify: \"center\",\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    select: true,\n    id: \"period_filter\",\n    name: \"period_filter\",\n    label: \"Period\",\n    value: periodFilter,\n    onChange: event => {\n      setPeriodFilter(event.target.value);\n    },\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 41\n    }\n  }, TRANSACTIONS_FILTER_OPTIONS.map((filterOption, index) => /*#__PURE__*/React.createElement(MenuItem, {\n    key: index,\n    value: filterOption.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 49\n    }\n  }, filterOption.text)))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    select: true,\n    variant: \"outlined\",\n    name: \"chargeType\",\n    label: \"Charge Type\",\n    id: \"chargeType\",\n    onChange: event => {\n      setChargeTypeFilter(event.target.value);\n    },\n    value: chargeType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 41\n    }\n  }, CHARGE_TYPES.map((charge_type, index) => /*#__PURE__*/React.createElement(MenuItem, {\n    key: index,\n    value: charge_type.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 53\n    }\n  }, charge_type.label))))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    item: true,\n    justify: \"flex-end\",\n    alignItems: \"center\",\n    direction: \"row\",\n    key: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: event => handleSearchFormSubmit(event),\n    type: \"submit\",\n    form: \"contactSearchForm\",\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"medium\",\n    startIcon: /*#__PURE__*/React.createElement(SearchIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 56\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 41\n    }\n  }, \"SEARCH\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: event => resetSearchForm(event),\n    type: \"reset\",\n    form: \"contactSearchForm\",\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"medium\",\n    startIcon: /*#__PURE__*/React.createElement(UndoIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 56\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 41\n    }\n  }, \"RESET\")))))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    border: 1,\n    borderRadius: \"borderRadius\",\n    borderColor: \"grey.400\",\n    className: classes.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    md: 4,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 37\n    }\n  }, \"Total Rent Charges: \", currencyFormatter.format(totalRentCharges))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 37\n    }\n  }, \"Total Other Charges: \", currencyFormatter.format(totalOtherCharges)))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    md: 4,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 37\n    }\n  }, \"Total Rent Payments: \", currencyFormatter.format(totalRentPayments))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 37\n    }\n  }, \"Total Other Payments: \", currencyFormatter.format(totalOtherPayments)))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    md: 4,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 37\n    }\n  }, \"Outstanding Rent Balances: \", currencyFormatter.format(totalRentCharges - totalRentPayments))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 37\n    }\n  }, \"Other Charges Outstanding Balances: \", currencyFormatter.format(totalOtherPayments - totalOtherPayments)))))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CommonTable, {\n    selected: selected,\n    setSelected: setSelected,\n    rows: filteredChargeItems,\n    headCells: headCells,\n    noEditCol: true,\n    noDeleteCol: true,\n    deleteUrl: 'transactions-charges',\n    handleDelete: handleItemDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default TenantChargesStatementPage;","map":{"version":3,"sources":["/home/brianmuciri/Projects/farm-ledger-ld/src/Routes/IndividualTenantChargesStatement.js"],"names":["React","useEffect","useState","Typography","Grid","MenuItem","Button","TextField","Box","SearchIcon","UndoIcon","ExportToExcelBtn","PrintArrayToPdf","CommonTable","getSalesFilterOptions","currencyFormatter","getStartEndDatesForPeriod","parse","isWithinInterval","TRANSACTIONS_FILTER_OPTIONS","headCells","id","numeric","disablePadding","label","TenantChargesStatementPage","contactDetails","tenantSaleCharges","handleItemDelete","classes","tenantChargesItems","setTenantChargesItems","filteredChargeItems","setFilteredChargeItems","chargeType","setChargeTypeFilter","periodFilter","setPeriodFilter","selected","setSelected","CHARGE_TYPES","Array","from","Set","map","chargeItem","JSON","stringify","charge_label","value","charge_type","totalRentCharges","filter","charge","reduce","total","currentValue","parseFloat","charge_amount","totalOtherCharges","totalRentPayments","sale","payed_amount","totalOtherPayments","filterChargesByCriteria","chargesToFilter","filteredStatements","startDate","endDate","chargeItemDate","charge_date","Date","start","end","handleSearchFormSubmit","event","preventDefault","resetSearchForm","first_name","last_name","length","includes","form","target","shrink","filterOption","index","text","format"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Box from \"@material-ui/core/Box\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport ExportToExcelBtn from \"../components/ExportToExcelBtn\";\nimport PrintArrayToPdf from \"../components/PrintArrayToPdfBtn\";\nimport CommonTable from \"../components/table/commonTable\";\nimport {getSalesFilterOptions, currencyFormatter, getStartEndDatesForPeriod } from \"../assets/commonAssets\";\nimport { parse, isWithinInterval } from \"date-fns\";\n\nconst TRANSACTIONS_FILTER_OPTIONS = getSalesFilterOptions()\n\nconst headCells = [\n    { id: \"charge_label\", numeric: false, disablePadding: true, label: \"Charge Type\" },\n    { id: \"charge_date\", numeric: false, disablePadding: true, label: \"Charge Date\", },\n    { id: \"due_date\", numeric: false, disablePadding: true, label: \"Due Date\", },\n    { id: \"charge_amount\", numeric: true, disablePadding: true, label: \"Charge Amount\", },\n    { id: \"payed_status\", numeric: false, disablePadding: true, label: \"Payments Made\" },\n    { id: \"payed_amount\", numeric: true, disablePadding: true, label: \"Total Amounts Paid\" },\n    { id: \"balance\", numeric: false, disablePadding: true, label: \"Balance\" },\n];\n\nlet TenantChargesStatementPage = ({\n    contactDetails,\n    tenantSaleCharges,\n    handleItemDelete,\n    classes,\n}) => {\n    let [tenantChargesItems, setTenantChargesItems] = useState([]);\n    let [filteredChargeItems, setFilteredChargeItems] = useState([]);\n    let [chargeType, setChargeTypeFilter] = useState(\"\");\n    let [periodFilter, setPeriodFilter] = useState(\"month-to-date\");\n    const [selected, setSelected] = useState([]);\n    const CHARGE_TYPES = Array.from(new Set(tenantChargesItems\n        .map((chargeItem) => (JSON.stringify({ label: chargeItem.charge_label, value: chargeItem.charge_type })))))\n        .map(chargeType => JSON.parse(chargeType))\n\n    const totalRentCharges = filteredChargeItems.filter(charge => charge.charge_type === 'rent')\n        .reduce((total, currentValue) => {\n            return total + parseFloat(currentValue.charge_amount) || 0\n        }, 0)\n\n    const totalOtherCharges = filteredChargeItems.filter(charge => charge.charge_type !== 'rent')\n        .reduce((total, currentValue) => {\n            return total + parseFloat(currentValue.charge_amount) || 0\n        }, 0)\n\n    const totalRentPayments = filteredChargeItems.filter(sale => sale.charge_type === 'rent')\n        .reduce((total, currentValue) => {\n            return total + parseFloat(currentValue.payed_amount) || 0\n        }, 0)\n\n    const totalOtherPayments = filteredChargeItems.filter(sale => sale.charge_type !== 'rent')\n        .reduce((total, currentValue) => {\n            return total + parseFloat(currentValue.payed_amount) || 0\n        }, 0)\n\n    useEffect(() => {\n        setTenantChargesItems(tenantSaleCharges);\n        setFilteredChargeItems(filterChargesByCriteria(tenantSaleCharges));\n    }, [tenantSaleCharges]);\n\n    const filterChargesByCriteria = (chargesToFilter) => {\n        let filteredStatements = chargesToFilter\n        if (periodFilter) {\n            const { startDate, endDate } = getStartEndDatesForPeriod(periodFilter)\n            filteredStatements = filteredStatements.filter((chargeItem) => {\n                const chargeItemDate = parse(chargeItem.charge_date, 'yyyy-MM-dd', new Date())\n                return isWithinInterval(chargeItemDate, { start: startDate, end: endDate })\n            })\n        }\n        filteredStatements = filteredStatements.filter(({ charge_type }) =>\n            !chargeType ? true : charge_type === chargeType\n        )\n        return filteredStatements;\n    }\n\n    const handleSearchFormSubmit = (event) => {\n        event.preventDefault();\n        //filter the tenantSaleCharges according to the search criteria here\n        setFilteredChargeItems(filterChargesByCriteria(tenantChargesItems));\n    };\n\n    const resetSearchForm = (event) => {\n        event.preventDefault();\n        setChargeTypeFilter(\"\");\n        setPeriodFilter(\"month-to-date\");\n    };\n\n    return (\n        <Grid container spacing={2} justify=\"center\" direction=\"column\">\n            <Grid item sm={12}>\n                <Typography variant=\"h6\">Records Statement - {contactDetails.first_name} {contactDetails.last_name} </Typography>\n            </Grid>\n            <Grid item container spacing={2} alignItems=\"center\" direction=\"row\">\n                <Grid item>\n                    <ExportToExcelBtn\n                        disabled={!selected.length}\n                        reportName={`${contactDetails.first_name} ${contactDetails.last_name} Charges Record`}\n                        reportTitle={'Records Data'}\n                        headCells={headCells}\n                        dataToPrint={tenantChargesItems.filter(({ id }) => selected.includes(id))}\n                    />\n                </Grid>\n                <Grid item>\n                    <PrintArrayToPdf\n                        disabled={!selected.length}\n                        reportName={'Records Data'}\n                        reportTitle={`${contactDetails.first_name} ${contactDetails.last_name} Charges Record`}\n                        headCells={headCells}\n                        dataToPrint={tenantChargesItems.filter(({ id }) => selected.includes(id))}\n                    />\n                </Grid>\n            </Grid>\n            <Grid item container>\n                <Grid item sm={12}>\n                    <Box border={1} borderRadius=\"borderRadius\" borderColor=\"grey.400\">\n                        <form\n                            className={classes.form}\n                            id=\"contactSearchForm\"\n                            onSubmit={handleSearchFormSubmit}\n                        >\n                            <Grid\n                                container\n                                justify=\"center\"\n                                direction=\"column\"\n                            >\n                                <Grid item container spacing={2} justify=\"center\" direction=\"row\">\n                                    <Grid item md={6} xs={12}>\n                                        <TextField\n                                            fullWidth\n                                            variant=\"outlined\"\n                                            select\n                                            id=\"period_filter\"\n                                            name=\"period_filter\"\n                                            label=\"Period\"\n                                            value={periodFilter}\n                                            onChange={(event) => {\n                                                setPeriodFilter(\n                                                    event.target.value\n                                                );\n                                            }}\n                                            InputLabelProps={{ shrink: true }}\n                                        >\n                                            {TRANSACTIONS_FILTER_OPTIONS.map((filterOption, index) => (\n                                                <MenuItem\n                                                    key={index}\n                                                    value={filterOption.id}\n                                                >\n                                                    {filterOption.text}\n                                                </MenuItem>\n                                            ))}\n                                        </TextField>\n                                    </Grid>\n                                    <Grid item md={6} xs={12}>\n                                        <TextField\n                                            fullWidth\n                                            select\n                                            variant=\"outlined\"\n                                            name=\"chargeType\"\n                                            label=\"Charge Type\"\n                                            id=\"chargeType\"\n                                            onChange={(event) => {\n                                                setChargeTypeFilter(\n                                                    event.target.value\n                                                );\n                                            }}\n                                            value={chargeType}\n                                        >\n                                            {CHARGE_TYPES.map(\n                                                (charge_type, index) => (\n                                                    <MenuItem\n                                                        key={index}\n                                                        value={charge_type.value}\n                                                    >\n                                                        {charge_type.label}\n                                                    </MenuItem>\n                                                )\n                                            )}\n                                        </TextField>\n                                    </Grid>\n                                </Grid>\n                                <Grid\n                                    container\n                                    spacing={2}\n                                    item\n                                    justify=\"flex-end\"\n                                    alignItems=\"center\"\n                                    direction=\"row\"\n                                    key={1}\n                                >\n                                    <Grid item>\n                                        <Button\n                                            onClick={(event) => handleSearchFormSubmit(event)}\n                                            type=\"submit\"\n                                            form=\"contactSearchForm\"\n                                            color=\"primary\"\n                                            variant=\"contained\"\n                                            size=\"medium\"\n                                            startIcon={<SearchIcon />}\n                                        >\n                                            SEARCH\n                                    </Button>\n                                    </Grid>\n                                    <Grid item>\n                                        <Button\n                                            onClick={(event) => resetSearchForm(event)}\n                                            type=\"reset\"\n                                            form=\"contactSearchForm\"\n                                            color=\"primary\"\n                                            variant=\"contained\"\n                                            size=\"medium\"\n                                            startIcon={<UndoIcon />}\n                                        >\n                                            RESET\n                                    </Button>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </form>\n                    </Box>\n                </Grid>\n            </Grid>\n            <Grid item container>\n                <Grid item sm={12}>\n                    <Box border={1} borderRadius=\"borderRadius\" borderColor=\"grey.400\" className={classes.form}>\n                        <Grid container direction=\"row\" spacing={1}>\n                            <Grid item container md={4} sm={12}>\n                                <Grid item sm={12}>\n                                    <Typography variant=\"subtitle1\" align=\"center\">\n                                        Total Rent Charges: {currencyFormatter.format(totalRentCharges)}\n                                    </Typography>\n                                </Grid>\n                                <Grid item sm={12}>\n                                    <Typography variant=\"subtitle1\" align=\"center\">\n                                        Total Other Charges: {currencyFormatter.format(totalOtherCharges)}\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                            <Grid item container md={4} sm={12}>\n                                <Grid item sm={12}>\n                                    <Typography variant=\"subtitle1\" align=\"center\">\n                                        Total Rent Payments: {currencyFormatter.format(totalRentPayments)}\n                                    </Typography>\n                                </Grid>\n                                <Grid item sm={12}>\n                                    <Typography variant=\"subtitle1\" align=\"center\">\n                                        Total Other Payments: {currencyFormatter.format(totalOtherPayments)}\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                            <Grid item container md={4} sm={12}>\n                                <Grid item sm={12}>\n                                    <Typography variant=\"subtitle1\" align=\"center\">\n                                        Outstanding Rent Balances: {currencyFormatter.format((totalRentCharges - totalRentPayments))}\n                                    </Typography>\n                                </Grid>\n                                <Grid item sm={12}>\n                                    <Typography variant=\"subtitle1\" align=\"center\">\n                                        Other Charges Outstanding Balances: {currencyFormatter.format((totalOtherPayments - totalOtherPayments))}\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                </Grid>\n            </Grid>\n            <Grid item container xs={12}>\n                <Grid item xs={12}>\n                    <CommonTable\n                        selected={selected}\n                        setSelected={setSelected}\n                        rows={filteredChargeItems}\n                        headCells={headCells}\n                        noEditCol\n                        noDeleteCol\n                        deleteUrl={'transactions-charges'}\n                        handleDelete={handleItemDelete}\n                    />\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default TenantChargesStatementPage;\n"]},"metadata":{},"sourceType":"module"}