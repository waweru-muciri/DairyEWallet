{"ast":null,"code":"var _jsxFileName = \"/home/brianmuciri/Projects/farm-ledger-ld/src/Routes/Expenses.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { Grid, TextField, Button, MenuItem, Box } from \"@material-ui/core\";\nimport { handleDelete } from \"../actions/actions\";\nimport CommonTable from \"../components/table/commonTable\";\nimport { withRouter } from \"react-router-dom\";\nimport { commonStyles } from \"../components/commonStyles\";\nimport { connect } from \"react-redux\";\nimport ExportToExcelBtn from \"../components/ExportToExcelBtn\";\nimport Layout from \"../components/PrivateLayout\";\nimport PageHeading from \"../components/PageHeading\";\nimport PrintArrayToPdf from \"../components/PrintArrayToPdfBtn\";\nimport { parse } from \"date-fns\";\nimport { getExpensesCategories } from \"../assets/commonAssets\";\nconst EXPENSES_CATEGORIES = getExpensesCategories();\nconst expensesTableHeadCells = [{\n  id: \"expense_date\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Date\"\n}, {\n  id: \"property_ref\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Property\"\n}, {\n  id: \"unit_ref\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Unit Ref/Number\"\n}, {\n  id: \"expense_name\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Expenditure Type\"\n}, {\n  id: \"amount\",\n  numeric: true,\n  disablePadding: true,\n  label: \"Expenditure Amount(Ksh)\"\n}, {\n  id: \"edit\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Edit\"\n}, {\n  id: \"delete\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Delete\"\n}];\n\nlet ExpensesPage = ({\n  expenses,\n  handleItemDelete,\n  properties,\n  match\n}) => {\n  const classes = commonStyles();\n  const [expenseItems, setExpenseItems] = useState([]);\n  const [filteredExpenseItems, setFilteredExpenseItems] = useState([]);\n  const [fromDateFilter, setFromDateFilter] = useState(\"\");\n  const [toDateFilter, setToDateFilter] = useState(\"\");\n  const [propertyFilter, setPropertyFilter] = useState(\"all\");\n  const [selected, setSelected] = useState([]);\n  useEffect(() => {\n    setExpenseItems(expenses);\n    setFilteredExpenseItems(expenses);\n  }, [expenses]);\n\n  const handleSearchFormSubmit = event => {\n    event.preventDefault(); //filter the expenses here according to search criteria\n\n    const filteredExpenses = expenseItems.filter(({\n      expense_date,\n      property_id\n    }) => (!fromDateFilter ? true : expense_date >= fromDateFilter) && (!toDateFilter ? true : expense_date <= toDateFilter) && (propertyFilter === \"all\" ? true : property_id === propertyFilter));\n    setFilteredExpenseItems(filteredExpenses);\n  };\n\n  const resetSearchForm = event => {\n    event.preventDefault();\n    setFromDateFilter(\"\");\n    setToDateFilter(\"\");\n    setPropertyFilter(\"all\");\n  };\n\n  return /*#__PURE__*/React.createElement(Layout, {\n    pageTitle: \"Property Expenses\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PageHeading, {\n    text: \"Property Expenses\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    item: true,\n    alignItems: \"center\",\n    direction: \"row\",\n    key: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"medium\",\n    startIcon: /*#__PURE__*/React.createElement(AddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 40\n      }\n    }),\n    component: Link,\n    to: `${match.url}/new`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }, \"NEW\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"medium\",\n    startIcon: /*#__PURE__*/React.createElement(EditIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 40\n      }\n    }),\n    disabled: !selected.length,\n    component: Link,\n    to: `${match.url}/${selected[0]}/edit`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }\n  }, \"Edit\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(PrintArrayToPdf, {\n    disabled: !selected.length,\n    reportName: 'Expenses Records',\n    reportTitle: 'Expenses Data',\n    headCells: expensesTableHeadCells,\n    dataToPrint: expenseItems.filter(({\n      id\n    }) => selected.includes(id)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ExportToExcelBtn, {\n    disabled: !selected.length,\n    reportName: 'Expenses Records',\n    reportTitle: 'Expenses Data',\n    headCells: expensesTableHeadCells,\n    dataToPrint: expenseItems.filter(({\n      id\n    }) => selected.includes(id)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    border: 1,\n    borderRadius: \"borderRadius\",\n    borderColor: \"grey.400\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    id: \"contactSearchForm\",\n    onSubmit: handleSearchFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"center\",\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    md: 6,\n    spacing: 1,\n    justify: \"center\",\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    type: \"date\",\n    id: \"from_date_filter\",\n    name: \"from_date_filter\",\n    label: \"From Date\",\n    value: fromDateFilter,\n    onChange: event => {\n      setFromDateFilter(event.target.value);\n    },\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    type: \"date\",\n    name: \"to_date_filter\",\n    label: \"To Date\",\n    id: \"to_date_filter\",\n    onChange: event => {\n      setToDateFilter(event.target.value);\n    },\n    value: toDateFilter,\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    select: true,\n    variant: \"outlined\",\n    name: \"property_filter\",\n    label: \"Property\",\n    id: \"property_filter\",\n    onChange: event => {\n      setPropertyFilter(event.target.value);\n    },\n    value: propertyFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    key: \"all\",\n    value: \"all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 41\n    }\n  }, \"All\"), properties.map((property, index) => /*#__PURE__*/React.createElement(MenuItem, {\n    key: index,\n    value: property.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 49\n    }\n  }, property.ref))))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    item: true,\n    justify: \"flex-end\",\n    alignItems: \"center\",\n    direction: \"row\",\n    key: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: event => handleSearchFormSubmit(event),\n    type: \"submit\",\n    form: \"contactSearchForm\",\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"medium\",\n    startIcon: /*#__PURE__*/React.createElement(SearchIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 52\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 37\n    }\n  }, \"SEARCH\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: event => resetSearchForm(event),\n    type: \"reset\",\n    form: \"propertySearchForm\",\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"medium\",\n    startIcon: /*#__PURE__*/React.createElement(UndoIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 52\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 37\n    }\n  }, \"RESET\")))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CommonTable, {\n    selected: selected,\n    setSelected: setSelected,\n    rows: filteredExpenseItems,\n    headCells: expensesTableHeadCells,\n    handleDelete: handleItemDelete,\n    deleteUrl: \"expenses\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 21\n    }\n  }))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    expenses: state.expenses.map(expense => {\n      const unitWithExpense = state.propertyUnits.find(({\n        id\n      }) => id === expense.unit_id) || {};\n      const propertyWithUnit = state.properties.find(({\n        id\n      }) => id === expense.property_id) || {};\n      const expenseDetails = EXPENSES_CATEGORIES.find(({\n        id\n      }) => id === expense.type) || {};\n      return Object.assign({}, expense, {\n        expense_name: expenseDetails.displayValue\n      }, {\n        unit_ref: unitWithExpense.ref,\n        property_ref: propertyWithUnit.ref\n      });\n    }).sort((expense1, expense2) => parse(expense2.expense_date, 'yyyy-MM-dd', new Date()) - parse(expense1.expense_date, 'yyyy-MM-dd', new Date())),\n    properties: state.properties\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleItemDelete: (itemId, url) => dispatch(handleDelete(itemId, url))\n  };\n};\n\nExpensesPage = connect(mapStateToProps, mapDispatchToProps)(ExpensesPage);\nexport default withRouter(ExpensesPage);","map":{"version":3,"sources":["/home/brianmuciri/Projects/farm-ledger-ld/src/Routes/Expenses.js"],"names":["React","useEffect","useState","Link","EditIcon","SearchIcon","UndoIcon","AddIcon","Grid","TextField","Button","MenuItem","Box","handleDelete","CommonTable","withRouter","commonStyles","connect","ExportToExcelBtn","Layout","PageHeading","PrintArrayToPdf","parse","getExpensesCategories","EXPENSES_CATEGORIES","expensesTableHeadCells","id","numeric","disablePadding","label","ExpensesPage","expenses","handleItemDelete","properties","match","classes","expenseItems","setExpenseItems","filteredExpenseItems","setFilteredExpenseItems","fromDateFilter","setFromDateFilter","toDateFilter","setToDateFilter","propertyFilter","setPropertyFilter","selected","setSelected","handleSearchFormSubmit","event","preventDefault","filteredExpenses","filter","expense_date","property_id","resetSearchForm","url","length","includes","form","target","value","shrink","map","property","index","ref","mapStateToProps","state","expense","unitWithExpense","propertyUnits","find","unit_id","propertyWithUnit","expenseDetails","type","Object","assign","expense_name","displayValue","unit_ref","property_ref","sort","expense1","expense2","Date","mapDispatchToProps","dispatch","itemId"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { Grid, TextField, Button, MenuItem, Box } from \"@material-ui/core\";\nimport { handleDelete } from \"../actions/actions\";\nimport CommonTable from \"../components/table/commonTable\";\nimport { withRouter } from \"react-router-dom\";\nimport { commonStyles } from \"../components/commonStyles\";\nimport { connect } from \"react-redux\";\nimport ExportToExcelBtn from \"../components/ExportToExcelBtn\";\nimport Layout from \"../components/PrivateLayout\";\nimport PageHeading from \"../components/PageHeading\";\nimport PrintArrayToPdf from \"../components/PrintArrayToPdfBtn\";\nimport { parse } from \"date-fns\";\nimport { getExpensesCategories } from \"../assets/commonAssets\";\n\n\nconst EXPENSES_CATEGORIES = getExpensesCategories();\n\nconst expensesTableHeadCells = [\n    { id: \"expense_date\", numeric: false, disablePadding: true, label: \"Date\", },\n    { id: \"property_ref\", numeric: false, disablePadding: true, label: \"Property\" },\n    { id: \"unit_ref\", numeric: false, disablePadding: true, label: \"Unit Ref/Number\" },\n    { id: \"expense_name\", numeric: false, disablePadding: true, label: \"Expenditure Type\" },\n    { id: \"amount\", numeric: true, disablePadding: true, label: \"Expenditure Amount(Ksh)\" },\n    { id: \"edit\", numeric: false, disablePadding: true, label: \"Edit\" },\n    { id: \"delete\", numeric: false, disablePadding: true, label: \"Delete\" },\n\n];\n\nlet ExpensesPage = ({\n    expenses,\n    handleItemDelete,\n    properties,\n    match,\n}) => {\n    const classes = commonStyles();\n    const [expenseItems, setExpenseItems] = useState([]);\n    const [filteredExpenseItems, setFilteredExpenseItems] = useState([]);\n    const [fromDateFilter, setFromDateFilter] = useState(\"\");\n    const [toDateFilter, setToDateFilter] = useState(\"\");\n    const [propertyFilter, setPropertyFilter] = useState(\"all\");\n    const [selected, setSelected] = useState([]);\n\n\n    useEffect(() => {\n        setExpenseItems(expenses);\n        setFilteredExpenseItems(expenses);\n    }, [expenses]);\n\n    const handleSearchFormSubmit = (event) => {\n        event.preventDefault();\n        //filter the expenses here according to search criteria\n        const filteredExpenses = expenseItems\n            .filter(({ expense_date, property_id }) =>\n                (!fromDateFilter ? true : expense_date >= fromDateFilter)\n                && (!toDateFilter ? true : expense_date <= toDateFilter)\n                && (propertyFilter === \"all\" ? true : property_id === propertyFilter)\n            )\n        setFilteredExpenseItems(filteredExpenses);\n    };\n\n    const resetSearchForm = (event) => {\n        event.preventDefault();\n        setFromDateFilter(\"\");\n        setToDateFilter(\"\");\n        setPropertyFilter(\"all\");\n    };\n\n    return (\n        <Layout pageTitle=\"Property Expenses\">\n            <Grid\n                container\n                spacing={3}\n                alignItems=\"center\"\n            >\n                <Grid item lg={12}>\n                    <PageHeading text=\"Property Expenses\" />\n                </Grid>\n                <Grid\n                    container\n                    spacing={2}\n                    item\n                    alignItems=\"center\"\n                    direction=\"row\"\n                    key={1}\n                >\n                    <Grid item>\n                        <Button\n                            type=\"button\"\n                            color=\"primary\"\n                            variant=\"contained\"\n                            size=\"medium\"\n                            startIcon={<AddIcon />}\n                            component={Link}\n                            to={`${match.url}/new`}\n                        >\n                            NEW\n                        </Button>\n                    </Grid>\n                    <Grid item>\n                        <Button\n                            type=\"button\"\n                            color=\"primary\"\n                            variant=\"contained\"\n                            size=\"medium\"\n                            startIcon={<EditIcon />}\n                            disabled={!selected.length}\n                            component={Link}\n                            to={`${match.url}/${selected[0]}/edit`}\n                        >\n                            Edit\n                        </Button>\n                    </Grid>\n                    <Grid item>\n                        <PrintArrayToPdf\n                            disabled={!selected.length}\n                            reportName={'Expenses Records'}\n                            reportTitle={'Expenses Data'}\n                            headCells={expensesTableHeadCells}\n                            dataToPrint={expenseItems.filter(({ id }) => selected.includes(id))}\n                        />\n                    </Grid>\n                    <Grid item>\n                        <ExportToExcelBtn\n                            disabled={!selected.length}\n                            reportName={'Expenses Records'}\n                            reportTitle={'Expenses Data'}\n                            headCells={expensesTableHeadCells}\n                            dataToPrint={expenseItems.filter(({ id }) => selected.includes(id))}\n                        />\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    <Box\n                        border={1}\n                        borderRadius=\"borderRadius\"\n                        borderColor=\"grey.400\"\n                    >\n                        <form\n                            className={classes.form}\n                            id=\"contactSearchForm\"\n                            onSubmit={handleSearchFormSubmit}\n                        >\n                            <Grid\n                                container\n                                spacing={2}\n                                justify=\"center\"\n                                direction=\"row\"\n                            >\n                                <Grid\n                                    container\n                                    item\n                                    xs={12} md={6}\n                                    spacing={1}\n                                    justify=\"center\"\n                                    direction=\"row\"\n                                >\n                                    <Grid item xs={12} md={6}>\n                                        <TextField\n                                            fullWidth\n                                            variant=\"outlined\"\n                                            type=\"date\"\n                                            id=\"from_date_filter\"\n                                            name=\"from_date_filter\"\n                                            label=\"From Date\"\n                                            value={fromDateFilter}\n                                            onChange={(event) => {\n                                                setFromDateFilter(\n                                                    event.target.value\n                                                );\n                                            }}\n                                            InputLabelProps={{ shrink: true }}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} md={6}>\n                                        <TextField\n                                            fullWidth\n                                            variant=\"outlined\"\n                                            type=\"date\"\n                                            name=\"to_date_filter\"\n                                            label=\"To Date\"\n                                            id=\"to_date_filter\"\n                                            onChange={(event) => {\n                                                setToDateFilter(event.target.value);\n                                            }}\n                                            value={toDateFilter}\n                                            InputLabelProps={{ shrink: true }}\n                                        />\n                                    </Grid>\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        fullWidth\n                                        select\n                                        variant=\"outlined\"\n                                        name=\"property_filter\"\n                                        label=\"Property\"\n                                        id=\"property_filter\"\n                                        onChange={(event) => {\n                                            setPropertyFilter(\n                                                event.target.value\n                                            );\n                                        }}\n                                        value={propertyFilter}\n                                    >\n                                        <MenuItem key={\"all\"} value={\"all\"}>All</MenuItem>\n                                        {properties.map(\n                                            (property, index) => (\n                                                <MenuItem\n                                                    key={index}\n                                                    value={property.id}\n                                                >\n                                                    {property.ref}\n                                                </MenuItem>\n                                            )\n                                        )}\n                                    </TextField>\n                                </Grid>\n                            </Grid>\n                            <Grid\n                                container\n                                spacing={2}\n                                item\n                                justify=\"flex-end\"\n                                alignItems=\"center\"\n                                direction=\"row\"\n                                key={1}\n                            >\n                                <Grid item>\n                                    <Button\n                                        onClick={(event) => handleSearchFormSubmit(event)}\n                                        type=\"submit\"\n                                        form=\"contactSearchForm\"\n                                        color=\"primary\"\n                                        variant=\"contained\"\n                                        size=\"medium\"\n                                        startIcon={<SearchIcon />}\n                                    >\n                                        SEARCH\n                                    </Button>\n                                </Grid>\n                                <Grid item>\n                                    <Button\n                                        onClick={(event) =>\n                                            resetSearchForm(event)\n                                        }\n                                        type=\"reset\"\n                                        form=\"propertySearchForm\"\n                                        color=\"primary\"\n                                        variant=\"contained\"\n                                        size=\"medium\"\n                                        startIcon={<UndoIcon />}\n                                    >\n                                        RESET\n                                    </Button>\n                                </Grid>\n                            </Grid>\n                        </form>\n                    </Box>\n                </Grid>\n                <Grid item xs={12}>\n                    <CommonTable\n                        selected={selected}\n                        setSelected={setSelected}\n                        rows={filteredExpenseItems}\n                        headCells={expensesTableHeadCells}\n                        handleDelete={handleItemDelete}\n                        deleteUrl={\"expenses\"}\n                    />\n                </Grid>\n            </Grid>\n        </Layout>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        expenses: state.expenses\n            .map(expense => {\n                const unitWithExpense = state.propertyUnits.find(({ id }) => id === expense.unit_id) || {}\n                const propertyWithUnit = state.properties.find(({ id }) => id === expense.property_id) || {}\n                const expenseDetails = EXPENSES_CATEGORIES.find(({ id }) => id === expense.type) || {}\n                return Object.assign({}, expense, { expense_name: expenseDetails.displayValue },\n                    { unit_ref: unitWithExpense.ref, property_ref: propertyWithUnit.ref })\n            })\n            .sort((expense1, expense2) => parse(expense2.expense_date, 'yyyy-MM-dd', new Date()) -\n                parse(expense1.expense_date, 'yyyy-MM-dd', new Date())),\n        properties: state.properties,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleItemDelete: (itemId, url) => dispatch(handleDelete(itemId, url)),\n    };\n};\n\nExpensesPage = connect(mapStateToProps, mapDispatchToProps)(ExpensesPage);\n\nexport default withRouter(ExpensesPage);\n"]},"metadata":{},"sourceType":"module"}