{"ast":null,"code":"var _jsxFileName = \"/home/brianmuciri/Projects/farm-ledger-ld/src/Routes/SignUp.js\";\nimport React from \"react\";\nimport Layout from \"../components/GeneralLayout\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Box from \"@material-ui/core/Box\";\nimport { connect } from \"react-redux\";\nimport { Formik } from \"formik\";\nimport { signUpWithEmailAndPassword } from \"../actions/actions\";\nimport { commonStyles } from \"../components/commonStyles\";\nimport * as Yup from \"yup\";\nconst SignUpSchema = Yup.object().shape({\n  password: Yup.string().min(6, \"Too Short!\").max(50, \"We prefer an insecure system, try a shorter password.\").required(\"Pasword is Required\"),\n  email: Yup.string().email(\"Invalid email\").required(\"Email is Required\"),\n  confirmPassword: Yup.string().required(\"Confirm Password Required\").test(\"passwords-match\", \"Passwords must match\", function (value) {\n    return this.parent.password === value;\n  }),\n  first_name: Yup.string().trim().min(4, \"Too Short!\").required(\"First Name is Required\"),\n  last_name: Yup.string().trim().min(4, \"Too Short!\").required(\"Last Name is Required\"),\n  phone_number: Yup.string().trim().min(10, \"Too Short!\").required(\"Phone Number is Required\")\n});\n\nconst SignUpLayout = () => {\n  const classes = commonStyles();\n  let loginValues = {\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    first_name: '',\n    last_name: '',\n    phone_number: ''\n  };\n  return /*#__PURE__*/React.createElement(Layout, {\n    maxWidth: \"md\",\n    pageTitle: \"Sign Up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    align: \"center\",\n    variant: \"h5\",\n    gutterBottom: true,\n    paragraph: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"Sign Up\"), /*#__PURE__*/React.createElement(Box, {\n    border: 1,\n    borderRadius: \"borderRadius\",\n    borderColor: \"grey.400\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: loginValues,\n    validationSchema: SignUpSchema,\n    onSubmit: async (values, {\n      resetForm,\n      setStatus,\n      setSubmitting\n    }) => {\n      const userDetails = {\n        email: values.email,\n        password: values.password,\n        phone_number: values.phone_number,\n        first_name: values.first_name,\n        last_name: values.last_name,\n        primary_email: values.email\n      };\n\n      try {\n        await signUpWithEmailAndPassword(userDetails);\n        resetForm({});\n        setStatus({\n          success: \"Successfully added user\"\n        });\n      } catch (error) {\n        setSubmitting(false);\n        setStatus({\n          error: error.message\n        });\n        console.log(\"Error message => \", error);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, ({\n    values,\n    handleSubmit,\n    touched,\n    status,\n    errors,\n    handleChange,\n    handleBlur,\n    isSubmitting\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    method: \"post\",\n    id: \"signUpForm\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    direction: \"column\",\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, status && status.error && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    severity: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, status.error)), status && status.success && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    severity: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, \"Account created successfully. Please verify your email address. A link to verify your email has been sent to the email provided. \"), /*#__PURE__*/React.createElement(Alert, {\n    severity: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, \"If you do not receive the confirmation message within a few minutes, please check your spam folder just in case the confirmation email got delivered there instead of your inbox. If so, select the confirmation message and click Not Spam, which will allow future messages to get through.\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    justify: \"center\",\n    direction: \"row\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    id: \"first_name\",\n    label: \"First Name\",\n    type: \"first_name\",\n    value: values.first_name,\n    onBlur: handleBlur,\n    onChange: handleChange,\n    helperText: touched.first_name && errors.first_name,\n    error: errors.first_name && touched.first_name,\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    id: \"last_name\",\n    label: \"Last Name\",\n    type: \"last_name\",\n    value: values.last_name,\n    onBlur: handleBlur,\n    onChange: handleChange,\n    helperText: touched.last_name && errors.last_name,\n    error: errors.last_name && touched.last_name,\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    justify: \"center\",\n    direction: \"row\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    id: \"phone_number\",\n    label: \"Phone Number\",\n    type: \"text\",\n    value: values.phone_number,\n    onBlur: handleBlur,\n    onChange: handleChange,\n    helperText: touched.phone_number && errors.phone_number,\n    error: errors.phone_number && touched.phone_number,\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    id: \"email\",\n    label: \"Email Address\",\n    value: values.email,\n    onBlur: handleBlur,\n    onChange: handleChange,\n    helperText: touched.email && errors.email,\n    error: errors.email && touched.email,\n    type: \"email\",\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    justify: \"center\",\n    direction: \"row\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    id: \"password\",\n    label: \"Password\",\n    type: \"password\",\n    value: values.password,\n    onBlur: handleBlur,\n    onChange: handleChange,\n    helperText: touched.password && errors.password,\n    error: errors.password && touched.password,\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    id: \"confirmPassword\",\n    label: \"Confirm Password\",\n    type: \"password\",\n    value: values.confirmPassword,\n    onBlur: handleBlur,\n    onChange: handleChange,\n    helperText: touched.confirmPassword && errors.confirmPassword,\n    error: errors.confirmPassword && touched.confirmPassword,\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    disabled: isSubmitting,\n    type: \"submit\",\n    variant: \"outlined\",\n    color: \"primary\",\n    form: \"signUpForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 19\n    }\n  }, \"Sign Up\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"row\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 21\n    }\n  }, \"Have an account?\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    disabled: isSubmitting,\n    color: \"primary\",\n    component: RouterLink,\n    to: \"/app/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 21\n    }\n  }, \"Sign In\"))))))));\n};\n\nexport default connect(null)(SignUpLayout);","map":{"version":3,"sources":["/home/brianmuciri/Projects/farm-ledger-ld/src/Routes/SignUp.js"],"names":["React","Layout","Link","RouterLink","Typography","TextField","Button","Grid","Alert","Box","connect","Formik","signUpWithEmailAndPassword","commonStyles","Yup","SignUpSchema","object","shape","password","string","min","max","required","email","confirmPassword","test","value","parent","first_name","trim","last_name","phone_number","SignUpLayout","classes","loginValues","values","resetForm","setStatus","setSubmitting","userDetails","primary_email","success","error","message","console","log","handleSubmit","touched","status","errors","handleChange","handleBlur","isSubmitting","form","shrink"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Layout from \"../components/GeneralLayout\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Typography from \"@material-ui/core/Typography\"\nimport TextField from \"@material-ui/core/TextField\"\nimport Button from \"@material-ui/core/Button\"\nimport Grid from \"@material-ui/core/Grid\"\nimport Alert from \"@material-ui/lab/Alert\"\nimport Box from \"@material-ui/core/Box\"\nimport { connect } from \"react-redux\";\nimport { Formik } from \"formik\";\nimport { signUpWithEmailAndPassword } from \"../actions/actions\";\nimport { commonStyles } from \"../components/commonStyles\";\nimport * as Yup from \"yup\";\n\nconst SignUpSchema = Yup.object().shape({\n  password: Yup.string().min(6, \"Too Short!\")\n    .max(50, \"We prefer an insecure system, try a shorter password.\")\n    .required(\"Pasword is Required\"),\n  email: Yup.string().email(\"Invalid email\").required(\"Email is Required\"),\n  confirmPassword: Yup.string().required(\"Confirm Password Required\")\n    .test(\"passwords-match\", \"Passwords must match\", function (value) {\n      return this.parent.password === value;\n    }),\n  first_name: Yup.string().trim().min(4, \"Too Short!\").required(\"First Name is Required\"),\n  last_name: Yup.string().trim().min(4, \"Too Short!\").required(\"Last Name is Required\"),\n  phone_number: Yup.string().trim().min(10, \"Too Short!\").required(\"Phone Number is Required\"),\n});\n\nconst SignUpLayout = () => {\n\n  const classes = commonStyles();\n\n  let loginValues = { email: \"\", password: \"\", confirmPassword: \"\", first_name: '', last_name: '', phone_number: '' };\n\n  return (\n    <Layout maxWidth=\"md\" pageTitle=\"Sign Up\">\n      <Typography align=\"center\" variant=\"h5\" gutterBottom paragraph>Sign Up</Typography>\n      <Box border={1} borderRadius=\"borderRadius\" borderColor=\"grey.400\">\n        <Formik\n          initialValues={loginValues}\n          validationSchema={SignUpSchema}\n          onSubmit={async (values, { resetForm, setStatus, setSubmitting }) => {\n            const userDetails = {\n              email: values.email,\n              password: values.password,\n              phone_number: values.phone_number,\n              first_name: values.first_name,\n              last_name: values.last_name,\n              primary_email: values.email\n            }\n            try {\n              await signUpWithEmailAndPassword(userDetails);\n              resetForm({});\n              setStatus({ success: \"Successfully added user\" })\n            } catch (error) {\n              setSubmitting(false);\n              setStatus({ error: error.message });\n              console.log(\"Error message => \", error);\n            }\n          }}>\n          {({\n            values,\n            handleSubmit,\n            touched,\n            status,\n            errors,\n            handleChange,\n            handleBlur,\n            isSubmitting,\n          }) => (\n            <form\n              className={classes.form}\n              method=\"post\"\n              id=\"signUpForm\"\n              onSubmit={handleSubmit}\n            >\n              <Grid container justify=\"center\" direction=\"column\" spacing={3}>\n                {status && status.error && (\n                  <Grid item xs={12}>\n                    <Alert severity=\"error\">{status.error}</Alert>\n                  </Grid>\n                )}\n                {status && status.success && (\n                  <Grid item>\n                    <Alert severity=\"success\">Account created successfully.\n                    Please verify your email address. A link to verify your email has been sent to the\n                    email provided. </Alert>\n                    <Alert severity=\"success\">If you do not receive the confirmation message within a\n                    few minutes, please check your spam folder just in case\n                    the confirmation email got delivered there instead of your inbox.\n                    If so, select the confirmation message and click Not Spam,\n                    which will allow future messages to get through.\n                    </Alert>\n                  </Grid>\n                )}\n                <Grid item container justify=\"center\" direction=\"row\" spacing={2}>\n                  <Grid item xs={12} md={6}>\n                    <TextField\n                      fullWidth\n                      variant=\"outlined\"\n                      id=\"first_name\"\n                      label=\"First Name\"\n                      type=\"first_name\"\n                      value={values.first_name}\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      helperText={touched.first_name && errors.first_name}\n                      error={errors.first_name && touched.first_name}\n                      InputLabelProps={{ shrink: true }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <TextField\n                      fullWidth\n                      variant=\"outlined\"\n                      id=\"last_name\"\n                      label=\"Last Name\"\n                      type=\"last_name\"\n                      value={values.last_name}\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      helperText={touched.last_name && errors.last_name}\n                      error={errors.last_name && touched.last_name}\n                      InputLabelProps={{ shrink: true }}\n                    />\n                  </Grid>\n                </Grid>\n                <Grid item container justify=\"center\" direction=\"row\" spacing={2}>\n                  <Grid item xs={12} md={6}>\n                    <TextField\n                      fullWidth\n                      variant=\"outlined\"\n                      id=\"phone_number\"\n                      label=\"Phone Number\"\n                      type=\"text\"\n                      value={values.phone_number}\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      helperText={\n                        touched.phone_number && errors.phone_number\n                      }\n                      error={errors.phone_number && touched.phone_number}\n                      InputLabelProps={{ shrink: true }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md>\n                    <TextField\n                      fullWidth\n                      variant=\"outlined\"\n                      id=\"email\"\n                      label=\"Email Address\"\n                      value={values.email}\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      helperText={touched.email && errors.email}\n                      error={errors.email && touched.email}\n                      type=\"email\"\n                      InputLabelProps={{ shrink: true }}\n                    />\n                  </Grid>\n                </Grid>\n                <Grid item container justify=\"center\" direction=\"row\" spacing={2}>\n                  <Grid item xs={12} md>\n                    <TextField\n                      fullWidth\n                      variant=\"outlined\"\n                      id=\"password\"\n                      label=\"Password\"\n                      type=\"password\"\n                      value={values.password}\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      helperText={touched.password && errors.password}\n                      error={errors.password && touched.password}\n                      InputLabelProps={{ shrink: true }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md>\n                    <TextField\n                      fullWidth\n                      variant=\"outlined\"\n                      id=\"confirmPassword\"\n                      label=\"Confirm Password\"\n                      type=\"password\"\n                      value={values.confirmPassword}\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      helperText={\n                        touched.confirmPassword && errors.confirmPassword\n                      }\n                      error={errors.confirmPassword && touched.confirmPassword}\n                      InputLabelProps={{ shrink: true }}\n                    />\n                  </Grid>\n                </Grid>\n                <Grid item>\n                  <Button\n                    disabled={isSubmitting}\n                    type=\"submit\"\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    form=\"signUpForm\"\n                  >\n                    Sign Up\n                  </Button>\n                </Grid>\n                <Grid item container direction=\"row\" alignItems=\"center\">\n                  <Grid item>\n                    <Typography variant=\"subtitle1\">\n                      Have an account?\n                    </Typography>\n                  </Grid>\n                  <Grid item>\n                    <Button\n                      disabled={isSubmitting}\n                      color=\"primary\"\n                      component={RouterLink}\n                      to={\"/app/login\"}\n                    >\n                      Sign In\n                    </Button>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </form>\n          )}\n        </Formik>\n      </Box>\n    </Layout>\n  );\n};\n\n\nexport default connect(null)(SignUpLayout);\n"]},"metadata":{},"sourceType":"module"}