{"ast":null,"code":"var _jsxFileName = \"/home/brianmuciri/Projects/farm-ledger-ld/src/Routes/NoticePage.js\";\nimport React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport PageHeading from \"../components/PageHeading\";\nimport Layout from \"../components/PrivateLayout\";\nimport { connect } from \"react-redux\";\nimport NoticeInputForm from \"../components/notices/NoticeInputForm\";\nimport { withRouter } from \"react-router-dom\";\nimport { handleItemFormSubmit } from '../actions/actions';\nimport queryString from 'query-string';\n\nlet NoticePage = props => {\n  const {\n    noticeToEdit,\n    history,\n    activeMappedLeases,\n    submitForm\n  } = props;\n  const params = queryString.parse(props.location.search);\n  var leaseToEnd = params.lease;\n\n  if (leaseToEnd) {\n    noticeToEdit.lease_id = leaseToEnd;\n  }\n\n  let pageTitle = noticeToEdit.id ? \"Edit Intent To Move Out\" : \"Record Intent To Move Out\";\n  return /*#__PURE__*/React.createElement(Layout, {\n    pageTitle: \"Notice Details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    key: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PageHeading, {\n    text: pageTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    key: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(NoticeInputForm, {\n    history: history,\n    submitForm: submitForm,\n    activeLeases: activeMappedLeases,\n    noticeToEdit: noticeToEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }))));\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    noticeToEdit: state.notices.find(({\n      id\n    }) => id === ownProps.match.params.noticeId) || {},\n    activeMappedLeases: state.leases.map(lease => {\n      const tenantDetails = state.contacts.find(({\n        id\n      }) => Array.isArray(lease.tenants) ? lease.tenants.includes(id) : false) || {};\n      const unitDetails = state.propertyUnits.find(({\n        id\n      }) => lease.unit_id === id) || {};\n      return Object.assign({}, lease, {\n        tenant_name: `${tenantDetails.first_name} ${tenantDetails.last_name}`\n      }, {\n        unit_ref: `${unitDetails.ref}`\n      });\n    }).sort((unit1, unit2) => unit1.unit_ref < unit2.unit_ref ? -1 : unit1.unit_ref > unit2.unit_ref ? 1 : 0)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    submitForm: (item, itemUrl) => dispatch(handleItemFormSubmit(item, itemUrl))\n  };\n};\n\nNoticePage = connect(mapStateToProps, mapDispatchToProps)(NoticePage);\nexport default withRouter(NoticePage);","map":{"version":3,"sources":["/home/brianmuciri/Projects/farm-ledger-ld/src/Routes/NoticePage.js"],"names":["React","Grid","PageHeading","Layout","connect","NoticeInputForm","withRouter","handleItemFormSubmit","queryString","NoticePage","props","noticeToEdit","history","activeMappedLeases","submitForm","params","parse","location","search","leaseToEnd","lease","lease_id","pageTitle","id","mapStateToProps","state","ownProps","notices","find","match","noticeId","leases","map","tenantDetails","contacts","Array","isArray","tenants","includes","unitDetails","propertyUnits","unit_id","Object","assign","tenant_name","first_name","last_name","unit_ref","ref","sort","unit1","unit2","mapDispatchToProps","dispatch","item","itemUrl"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport PageHeading from \"../components/PageHeading\";\nimport Layout from \"../components/PrivateLayout\";\nimport { connect } from \"react-redux\";\nimport NoticeInputForm from \"../components/notices/NoticeInputForm\";\nimport { withRouter } from \"react-router-dom\";\nimport { handleItemFormSubmit } from '../actions/actions'\nimport queryString from 'query-string';\n\nlet NoticePage = (props) => {\n    const { noticeToEdit, history, activeMappedLeases, submitForm } = props;\n    const params = queryString.parse(props.location.search)\n    var leaseToEnd = params.lease;\n    if (leaseToEnd) {\n        noticeToEdit.lease_id = leaseToEnd\n    }\n    let pageTitle = noticeToEdit.id ? \"Edit Intent To Move Out\" : \"Record Intent To Move Out\";\n\n    return (\n        <Layout pageTitle=\"Notice Details\">\n            <Grid container justify=\"center\" direction=\"column\">\n                <Grid item key={1}>\n                    <PageHeading  text={pageTitle} />\n                </Grid>\n                <Grid item key={2}>\n                    <NoticeInputForm\n                        history={history}\n                        submitForm={submitForm}\n                        activeLeases={activeMappedLeases}\n                        noticeToEdit={noticeToEdit}\n                    />\n                </Grid>\n            </Grid>\n        </Layout>\n    );\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        noticeToEdit: state.notices.find(({ id }) => id === ownProps.match.params.noticeId) || {},\n        activeMappedLeases: state.leases\n        .map((lease) => {\n            const tenantDetails = state.contacts.find(({ id }) => Array.isArray(lease.tenants) ? lease.tenants.includes(id) : false) || {}\n            const unitDetails = state.propertyUnits.find(({ id }) => lease.unit_id === id) || {}\n            return Object.assign({}, lease, \n                {tenant_name: `${tenantDetails.first_name} ${tenantDetails.last_name}`},\n                {unit_ref: `${unitDetails.ref}`})\n        }).sort((unit1, unit2) => unit1.unit_ref < unit2.unit_ref ? -1 : unit1.unit_ref > unit2.unit_ref ? 1 : 0),\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        submitForm: (item, itemUrl) => dispatch(handleItemFormSubmit(item, itemUrl)),\n    };\n};\n\nNoticePage = connect(mapStateToProps, mapDispatchToProps)(NoticePage);\n\nexport default withRouter(NoticePage);\n"]},"metadata":{},"sourceType":"module"}