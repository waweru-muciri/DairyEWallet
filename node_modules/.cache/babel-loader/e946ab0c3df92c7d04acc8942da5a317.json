{"ast":null,"code":"var _jsxFileName = \"/home/brianmuciri/Projects/farm-ledger-ld/src/components/property/PropertyInputForm.js\";\nimport React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Box from \"@material-ui/core/Box\";\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\nimport CustomCircularProgress from \"../CustomCircularProgress\";\nimport CustomSnackbar from '../CustomSnackbar';\nimport { connect } from \"react-redux\";\nimport { Formik, FieldArray } from \"formik\";\nimport { handleItemFormSubmit, handleDelete, uploadFilesToFirebase, deleteUploadedFileByUrl } from \"../../actions/actions\";\nimport { commonStyles } from \"../../components/commonStyles\";\nimport ImageCropper from '../ImageCropper';\nimport { withRouter } from \"react-router-dom\";\nimport { getPropertyBeds, getPropertyBaths, getUnitTypes } from \"../../assets/commonAssets.js\";\nimport * as Yup from \"yup\";\nconst PropertySchema = Yup.object().shape({\n  ref: Yup.string().trim().required(\"Property Name/Ref/Number is Required\"),\n  assigned_to: Yup.string().trim().required(\"Who will be the primary manager for this property\"),\n  address: Yup.string().trim().required('Property Address is Required'),\n  postal_code: Yup.string().trim().default(''),\n  city: Yup.string().default(''),\n  property_units: Yup.array().of(Yup.object().shape({\n    unit_type: Yup.string().trim().required(\"Unit Type is required\"),\n    beds: Yup.string().trim().required(\"Beds is required\").default(''),\n    ref: Yup.string().trim().required(\"Unit Ref/Number is required\"),\n    baths: Yup.string().trim().default(''),\n    sqm: Yup.number().typeError('Square Footage must be a number').integer().min(0)\n  }))\n});\nconst UNIT_TYPES = getUnitTypes();\nconst PROPERTY_BEDS = getPropertyBeds();\nconst PROPERTY_BATHS = getPropertyBaths();\n\nlet PropertyInputForm = props => {\n  const classes = commonStyles();\n  const {\n    history,\n    users,\n    handleItemSubmit\n  } = props;\n  let propertyToEdit = props.propertyToEdit || {};\n  const propertyValues = {\n    id: propertyToEdit.id,\n    assigned_to: propertyToEdit.assigned_to || \"\",\n    city: propertyToEdit.city || \"\",\n    postal_code: propertyToEdit.postal_code || \"\",\n    address: propertyToEdit.address || \"\",\n    ref: propertyToEdit.ref || \"\",\n    property_units: [],\n    owner: propertyToEdit.owner || \"\",\n    property_image_url: propertyToEdit.property_image_url || \"\"\n  };\n\n  const UnitInputComponent = ({\n    remove,\n    push,\n    replace,\n    form\n  }) => {\n    const {\n      errors,\n      touched,\n      values,\n      handleChange,\n      handleBlur\n    } = form;\n    const propertyUnitErrors = errors['property_units'];\n    const propertyUnitTouched = touched['property_units'];\n    const layout = values.property_units.map((property_unit, propertyUnitIndex) => {\n      const indexInErrors = propertyUnitErrors && propertyUnitErrors[propertyUnitIndex];\n      const indexInTouched = propertyUnitTouched && propertyUnitTouched[propertyUnitIndex];\n      return /*#__PURE__*/React.createElement(Grid, {\n        key: `property_unit-${propertyUnitIndex}`,\n        container: true,\n        item: true,\n        direction: \"row\",\n        alignItems: \"center\",\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        xs: true,\n        item: true,\n        key: `property_units[${propertyUnitIndex}].ref`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        label: \"Unit Number/Ref\",\n        variant: \"outlined\",\n        type: \"text\",\n        value: property_unit.ref,\n        name: `property_units.${propertyUnitIndex}.ref`,\n        onChange: handleChange,\n        onBlur: handleBlur,\n        error: indexInErrors && 'ref' in indexInErrors && indexInTouched && indexInTouched.ref,\n        helperText: indexInTouched && indexInTouched.ref && indexInErrors && indexInErrors.ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 7\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        xs: true,\n        item: true,\n        key: `property_units[${propertyUnitIndex}].unit_type`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        fullWidth: true,\n        label: \"Unit Type\",\n        defaultValue: \"\",\n        variant: \"outlined\",\n        select: true,\n        value: property_unit.unit_type,\n        name: `property_units.${propertyUnitIndex}.unit_type`,\n        onChange: handleChange,\n        onBlur: handleBlur,\n        error: indexInErrors && 'unit_type' in indexInErrors && indexInTouched && indexInTouched.unit_type,\n        helperText: indexInTouched && indexInTouched.unit_type && indexInErrors && indexInErrors.unit_type,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 7\n        }\n      }, UNIT_TYPES.map((unit_type, unitTypeIndex) => /*#__PURE__*/React.createElement(MenuItem, {\n        key: unitTypeIndex,\n        value: unit_type.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }\n      }, unit_type.displayValue)))), /*#__PURE__*/React.createElement(Grid, {\n        xs: true,\n        item: true,\n        key: `property_units[${propertyUnitIndex}].beds`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        fullWidth: true,\n        label: \"Beds/Rooms\",\n        variant: \"outlined\",\n        defaultValue: \"\",\n        select: true,\n        value: property_unit.beds,\n        name: `property_units.${propertyUnitIndex}.beds`,\n        onChange: handleChange,\n        onBlur: handleBlur,\n        error: indexInErrors && 'beds' in indexInErrors && indexInTouched && indexInTouched.beds,\n        helperText: indexInTouched && indexInTouched.beds && indexInErrors && indexInErrors.beds,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 7\n        }\n      }, PROPERTY_BEDS.map((property_bed, bedNumberIndex) => /*#__PURE__*/React.createElement(MenuItem, {\n        key: bedNumberIndex,\n        value: property_bed,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }\n      }, property_bed)))), /*#__PURE__*/React.createElement(Grid, {\n        xs: true,\n        item: true,\n        key: `property_units[${propertyUnitIndex}].baths`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        fullWidth: true,\n        label: \"Baths\",\n        variant: \"outlined\",\n        defaultValue: \"\",\n        select: true,\n        value: property_unit.baths,\n        name: `property_units.${propertyUnitIndex}.baths`,\n        onChange: handleChange,\n        onBlur: handleBlur,\n        error: indexInErrors && 'baths' in indexInErrors && indexInTouched && indexInTouched.baths,\n        helperText: indexInTouched && indexInTouched.baths && indexInErrors && indexInErrors.baths,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 7\n        }\n      }, PROPERTY_BATHS.map((property_bath, bathNumberIndex) => /*#__PURE__*/React.createElement(MenuItem, {\n        key: bathNumberIndex,\n        value: property_bath,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 9\n        }\n      }, property_bath)))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        key: `property_units[${propertyUnitIndex}].image`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 6\n        }\n      }, property_unit.file_to_load_url && /*#__PURE__*/React.createElement(ImageCropper, {\n        open: true,\n        selectedFile: property_unit.file_to_load_url,\n        setCroppedImageData: croppedImage => {\n          replace(propertyUnitIndex, Object.assign({}, property_unit, {\n            file_to_load_url: '',\n            image: croppedImage\n          }));\n        },\n        cropHeight: 200,\n        cropWidth: 300,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 8\n        }\n      }), /*#__PURE__*/React.createElement(Box, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        onChange: event => {\n          const selectedFile = event.currentTarget.files[0]; //remove the object then push a copy of it with added image object\n\n          replace(propertyUnitIndex, Object.assign({}, property_unit, {\n            file_to_load_url: selectedFile\n          }));\n        },\n        accept: \"image/*\",\n        className: classes.fileInputDisplayNone,\n        id: `icon-button-file-${propertyUnitIndex}`,\n        type: \"file\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 8\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: `icon-button-file-${propertyUnitIndex}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        color: \"primary\",\n        \"aria-label\": \"upload picture\",\n        component: \"span\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(PhotoCamera, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 10\n        }\n      }))), /*#__PURE__*/React.createElement(Box, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 8\n        }\n      }, property_unit.image ? property_unit.image.name : \"No Image\"))), /*#__PURE__*/React.createElement(Grid, {\n        xs: true,\n        item: true,\n        key: `property_units[${propertyUnitIndex}].sqm`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        label: \"Sqm\",\n        variant: \"outlined\",\n        type: \"text\",\n        value: property_unit.sqm,\n        name: `property_units.${propertyUnitIndex}.sqm`,\n        onChange: handleChange,\n        onBlur: handleBlur,\n        error: indexInErrors && 'sqm' in indexInErrors && indexInTouched && indexInTouched.sqm,\n        helperText: indexInTouched && indexInTouched.sqm && indexInErrors && indexInErrors.sqm,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 7\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        key: `property_units[${propertyUnitIndex}].delete`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        \"aria-label\": \"delete\",\n        onClick: () => {\n          remove(propertyUnitIndex);\n        },\n        size: \"medium\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(DeleteIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 8\n        }\n      }))));\n    });\n    return /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      container: true,\n      spacing: 4,\n      direction: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 10\n      }\n    }, layout, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      size: \"medium\",\n      onClick: () => push({\n        ref: '',\n        unit_type: '',\n        beds: '',\n        baths: '',\n        sqm: '',\n        image: ''\n      }),\n      disableElevation: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 5\n      }\n    }, \"Add Unit\")));\n  };\n\n  return /*#__PURE__*/React.createElement(Formik, {\n    initialValues: propertyValues,\n    enableReinitialize: true,\n    validationSchema: PropertySchema,\n    onSubmit: async (values, {\n      resetForm,\n      setStatus\n    }) => {\n      try {\n        let property = {\n          id: values.id,\n          assigned_to: values.assigned_to,\n          city: values.city,\n          postal_code: values.postal_code,\n          address: values.address,\n          ref: values.ref,\n          owner: values.owner\n        }; //first upload the image to firebase\n\n        if (values.property_image && values.property_image.data) {\n          //if the user had previously uploaded an image\n          // then delete it here and replace the url with new uploaded image\n          if (values.property_image_url) {\n            //delete file from storage\n            await deleteUploadedFileByUrl(values.property_image_url);\n          } //upload the first and only image in the contact images array\n\n\n          var fileDownloadUrl = await uploadFilesToFirebase(values.property_image);\n          property.property_image_url = fileDownloadUrl;\n        }\n\n        const propertyId = await handleItemSubmit(property, \"properties\"); //create some property settings if first time property being created\n\n        if (!values.id) {\n          await handleItemSubmit({\n            property_id: propertyId,\n            grace_period: 0,\n            late_fees_charges_activated: false,\n            automatically_end_agreement_on_move_out_date: true,\n            management_fee_type: \"flat_fee\",\n            management_fee_flat_fee: 0\n          }, \"property-settings\");\n        }\n\n        values.property_units.forEach(async property_unit => {\n          //check if the unit has an image to upload\n          if (property_unit.image && property_unit.image.data) {\n            //upload the file to the database and assign the resulting file \n            // upload path to property_unit\n            const fileUploadPath = await uploadFilesToFirebase(property_unit.image);\n            property_unit.unit_image_url = fileUploadPath;\n            delete property_unit.image;\n          }\n\n          const propertyUnitToSave = Object.assign({}, property_unit, {\n            property_id: propertyId,\n            property_ref: values.ref,\n            assigned_to: values.assigned_to\n          });\n          await handleItemSubmit(propertyUnitToSave, 'property_units');\n        });\n        resetForm({});\n\n        if (values.id) {\n          history.goBack();\n        }\n\n        setStatus({\n          sent: true,\n          msg: \"Details saved successfully.\"\n        });\n      } catch (error) {\n        setStatus({\n          sent: false,\n          msg: `Error! ${error}.`\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 3\n    }\n  }, ({\n    values,\n    status,\n    handleSubmit,\n    touched,\n    errors,\n    handleChange,\n    handleBlur,\n    isSubmitting,\n    setFieldValue\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    method: \"post\",\n    id: \"propertyInputForm\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 6\n    }\n  }, status && status.msg && /*#__PURE__*/React.createElement(CustomSnackbar, {\n    variant: status.sent ? \"success\" : \"error\",\n    message: status.msg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 9\n    }\n  }), isSubmitting && /*#__PURE__*/React.createElement(CustomCircularProgress, {\n    open: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    type: \"text\",\n    name: \"ref\",\n    label: \"Property Name/Ref\",\n    id: \"ref\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    value: values.ref,\n    error: errors.ref && touched.ref,\n    helperText: touched.ref && errors.ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 8\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 8\n    }\n  }, \"Street Address\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    label: \"Address\",\n    id: \"address\",\n    type: \"text\",\n    name: \"address\",\n    value: values.address,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    error: errors.address && touched.address,\n    helperText: touched.address && errors.address,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 8\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    id: \"city\",\n    type: \"text\",\n    name: \"city\",\n    label: \"City\",\n    value: values.city,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 8\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    label: \"Postal Code\",\n    variant: \"outlined\",\n    id: \"postal_code\",\n    type: \"text\",\n    name: \"postal_code\",\n    value: values.postal_code,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    error: errors.postal_code && touched.postal_code,\n    helperText: touched.postal_code && errors.postal_code,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 8\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    select: true,\n    variant: \"outlined\",\n    id: \"owner\",\n    name: \"owner\",\n    label: \"Property Owner\",\n    value: values.owner,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    helperText: \"Who is the Property Owner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 8\n    }\n  }, users.map((user, index) => /*#__PURE__*/React.createElement(MenuItem, {\n    key: index,\n    value: user.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 10\n    }\n  }, user.first_name, \" \", user.last_name)))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    select: true,\n    variant: \"outlined\",\n    name: \"assigned_to\",\n    id: \"assigned_to\",\n    label: \"Landlord\",\n    value: values.assigned_to,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    error: errors.assigned_to && touched.assigned_to,\n    helperText: touched.assigned_to && errors.assigned_to,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 8\n    }\n  }, users.map((user, index) => /*#__PURE__*/React.createElement(MenuItem, {\n    key: index,\n    value: user.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 10\n    }\n  }, user.first_name, \" \", user.last_name)))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"row\",\n    justify: \"flex-start\",\n    spacing: 4,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    key: 1,\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 8\n    }\n  }, values.file_to_load_url && /*#__PURE__*/React.createElement(ImageCropper, {\n    open: true,\n    selectedFile: values.file_to_load_url,\n    setCroppedImageData: croppedImage => {\n      setFieldValue('file_to_load_url', '');\n      setFieldValue('property_image', croppedImage);\n    },\n    cropHeight: 200,\n    cropWidth: 300,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 9\n    }\n  }, values.property_image ? values.property_image.name : \"No Image\")), /*#__PURE__*/React.createElement(Grid, {\n    key: 2,\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: event => {\n      const selectedFile = event.currentTarget.files[0]; //remove the object then push a copy of it with added image object\n\n      setFieldValue(\"file_to_load_url\", selectedFile);\n    },\n    accept: \"image/*\",\n    className: classes.fileInputDisplayNone,\n    id: \"property-image-input\",\n    type: \"file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"property-image-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    size: \"medium\",\n    color: \"primary\",\n    \"aria-label\": \"upload picture\",\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(PhotoCamera, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 12\n    }\n  }))), values.property_image_url ? /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: async () => {\n      await deleteUploadedFileByUrl(values.property_image_url);\n      setFieldValue('property_image_url', '');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 39\n    }\n  }, \"Delete Image\") : null))), values.id ? null : /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    paragraph: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 10\n    }\n  }, \"Add Rental Units\"), /*#__PURE__*/React.createElement(FieldArray, {\n    name: \"property_units\",\n    component: UnitInputComponent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 10\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    justify: \"flex-start\",\n    direction: \"row\",\n    className: classes.buttonBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    variant: \"contained\",\n    size: \"medium\",\n    startIcon: /*#__PURE__*/React.createElement(CancelIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 21\n      }\n    }),\n    onClick: () => history.goBack(),\n    disableElevation: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 9\n    }\n  }, \"Cancel\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"medium\",\n    startIcon: /*#__PURE__*/React.createElement(SaveIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 21\n      }\n    }),\n    form: \"propertyInputForm\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 9\n    }\n  }, values.id ? \"Save Details\" : \"Create Property\"))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    properties: state.properties,\n    propertiesMediaFiles: state.mediaFiles,\n    error: state.error,\n    // contacts: state.contacts.filter(({ id }) => !state.properties.find((property) => property.tenants.includes(id))),\n    currentUser: state.currentUser,\n    users: state.users\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleItemDelete: (itemId, url) => dispatch(handleDelete(itemId, url)),\n    handleItemSubmit: (item, url) => dispatch(handleItemFormSubmit(item, url))\n  };\n};\n\nPropertyInputForm = connect(mapStateToProps, mapDispatchToProps)(PropertyInputForm);\nexport default withRouter(PropertyInputForm);","map":{"version":3,"sources":["/home/brianmuciri/Projects/farm-ledger-ld/src/components/property/PropertyInputForm.js"],"names":["React","Typography","Grid","MenuItem","TextField","Button","SaveIcon","CancelIcon","DeleteIcon","IconButton","Box","PhotoCamera","CustomCircularProgress","CustomSnackbar","connect","Formik","FieldArray","handleItemFormSubmit","handleDelete","uploadFilesToFirebase","deleteUploadedFileByUrl","commonStyles","ImageCropper","withRouter","getPropertyBeds","getPropertyBaths","getUnitTypes","Yup","PropertySchema","object","shape","ref","string","trim","required","assigned_to","address","postal_code","default","city","property_units","array","of","unit_type","beds","baths","sqm","number","typeError","integer","min","UNIT_TYPES","PROPERTY_BEDS","PROPERTY_BATHS","PropertyInputForm","props","classes","history","users","handleItemSubmit","propertyToEdit","propertyValues","id","owner","property_image_url","UnitInputComponent","remove","push","replace","form","errors","touched","values","handleChange","handleBlur","propertyUnitErrors","propertyUnitTouched","layout","map","property_unit","propertyUnitIndex","indexInErrors","indexInTouched","unitTypeIndex","displayValue","property_bed","bedNumberIndex","property_bath","bathNumberIndex","file_to_load_url","croppedImage","Object","assign","image","event","selectedFile","currentTarget","files","fileInputDisplayNone","name","resetForm","setStatus","property","property_image","data","fileDownloadUrl","propertyId","property_id","grace_period","late_fees_charges_activated","automatically_end_agreement_on_move_out_date","management_fee_type","management_fee_flat_fee","forEach","fileUploadPath","unit_image_url","propertyUnitToSave","property_ref","goBack","sent","msg","error","status","handleSubmit","isSubmitting","setFieldValue","user","index","first_name","last_name","buttonBox","mapStateToProps","state","properties","propertiesMediaFiles","mediaFiles","currentUser","mapDispatchToProps","dispatch","handleItemDelete","itemId","url","item"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Box from \"@material-ui/core/Box\";\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\nimport CustomCircularProgress from \"../CustomCircularProgress\";\nimport CustomSnackbar from '../CustomSnackbar'\nimport { connect } from \"react-redux\";\nimport { Formik, FieldArray } from \"formik\";\nimport {\n\thandleItemFormSubmit,\n\thandleDelete, uploadFilesToFirebase, deleteUploadedFileByUrl\n} from \"../../actions/actions\";\nimport { commonStyles } from \"../../components/commonStyles\";\nimport ImageCropper from '../ImageCropper';\nimport { withRouter } from \"react-router-dom\";\nimport {\n\tgetPropertyBeds,\n\tgetPropertyBaths, getUnitTypes\n} from \"../../assets/commonAssets.js\";\nimport * as Yup from \"yup\";\n\nconst PropertySchema = Yup.object().shape({\n\tref: Yup.string().trim().required(\"Property Name/Ref/Number is Required\"),\n\tassigned_to: Yup.string().trim().required(\"Who will be the primary manager for this property\"),\n\taddress: Yup.string().trim().required('Property Address is Required'),\n\tpostal_code: Yup.string().trim().default(''),\n\tcity: Yup.string().default(''),\n\tproperty_units: Yup.array().of(Yup.object().shape({\n\t\tunit_type: Yup.string().trim().required(\"Unit Type is required\"),\n\t\tbeds: Yup.string().trim().required(\"Beds is required\").default(''),\n\t\tref: Yup.string().trim().required(\"Unit Ref/Number is required\"),\n\t\tbaths: Yup.string().trim().default(''),\n\t\tsqm: Yup.number().typeError('Square Footage must be a number').integer().min(0),\n\t}))\n});\n\nconst UNIT_TYPES = getUnitTypes();\nconst PROPERTY_BEDS = getPropertyBeds();\nconst PROPERTY_BATHS = getPropertyBaths();\n\nlet PropertyInputForm = (props) => {\n\tconst classes = commonStyles();\n\tconst { history, users, handleItemSubmit } = props\n\tlet propertyToEdit = props.propertyToEdit || {};\n\tconst propertyValues = {\n\t\tid: propertyToEdit.id,\n\t\tassigned_to: propertyToEdit.assigned_to || \"\",\n\t\tcity: propertyToEdit.city || \"\",\n\t\tpostal_code: propertyToEdit.postal_code || \"\",\n\t\taddress: propertyToEdit.address || \"\",\n\t\tref: propertyToEdit.ref || \"\",\n\t\tproperty_units: [],\n\t\towner: propertyToEdit.owner || \"\",\n\t\tproperty_image_url: propertyToEdit.property_image_url || \"\",\n\t};\n\tconst UnitInputComponent = ({ remove, push, replace, form }) => {\n\t\tconst { errors, touched, values, handleChange, handleBlur } = form\n\t\tconst propertyUnitErrors = errors['property_units']\n\t\tconst propertyUnitTouched = touched['property_units']\n\t\tconst layout = values.property_units.map((property_unit, propertyUnitIndex) => {\n\t\t\tconst indexInErrors = propertyUnitErrors && propertyUnitErrors[propertyUnitIndex];\n\t\t\tconst indexInTouched = propertyUnitTouched && propertyUnitTouched[propertyUnitIndex];\n\t\t\treturn (\n\t\t\t\t<Grid key={`property_unit-${propertyUnitIndex}`} container item direction=\"row\" alignItems=\"center\" spacing={2}>\n\t\t\t\t\t<Grid xs item key={`property_units[${propertyUnitIndex}].ref`}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tlabel=\"Unit Number/Ref\"\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tvalue={property_unit.ref}\n\t\t\t\t\t\t\tname={`property_units.${propertyUnitIndex}.ref`}\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\terror={(indexInErrors && 'ref' in indexInErrors) && (indexInTouched && indexInTouched.ref)}\n\t\t\t\t\t\t\thelperText={(indexInTouched && indexInTouched.ref) && (indexInErrors && indexInErrors.ref)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid xs item key={`property_units[${propertyUnitIndex}].unit_type`}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tlabel=\"Unit Type\"\n\t\t\t\t\t\t\tdefaultValue=\"\"\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tselect\n\t\t\t\t\t\t\tvalue={property_unit.unit_type}\n\t\t\t\t\t\t\tname={`property_units.${propertyUnitIndex}.unit_type`}\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\terror={(indexInErrors && 'unit_type' in indexInErrors) && (indexInTouched && indexInTouched.unit_type)}\n\t\t\t\t\t\t\thelperText={(indexInTouched && indexInTouched.unit_type) && (indexInErrors && indexInErrors.unit_type)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{UNIT_TYPES.map((unit_type, unitTypeIndex) => (\n\t\t\t\t\t\t\t\t<MenuItem key={unitTypeIndex} value={unit_type.id}>\n\t\t\t\t\t\t\t\t\t{unit_type.displayValue}\n\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</TextField>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid xs item key={`property_units[${propertyUnitIndex}].beds`}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tlabel=\"Beds/Rooms\"\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tdefaultValue=\"\"\n\t\t\t\t\t\t\tselect\n\t\t\t\t\t\t\tvalue={property_unit.beds}\n\t\t\t\t\t\t\tname={`property_units.${propertyUnitIndex}.beds`}\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\terror={(indexInErrors && 'beds' in indexInErrors) && (indexInTouched && indexInTouched.beds)}\n\t\t\t\t\t\t\thelperText={(indexInTouched && indexInTouched.beds) && (indexInErrors && indexInErrors.beds)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{PROPERTY_BEDS.map((property_bed, bedNumberIndex) => (\n\t\t\t\t\t\t\t\t<MenuItem key={bedNumberIndex} value={property_bed}>\n\t\t\t\t\t\t\t\t\t{property_bed}\n\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</TextField>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid xs item key={`property_units[${propertyUnitIndex}].baths`}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tlabel=\"Baths\"\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tdefaultValue=\"\"\n\t\t\t\t\t\t\tselect\n\t\t\t\t\t\t\tvalue={property_unit.baths}\n\t\t\t\t\t\t\tname={`property_units.${propertyUnitIndex}.baths`}\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\terror={(indexInErrors && 'baths' in indexInErrors) && (indexInTouched && indexInTouched.baths)}\n\t\t\t\t\t\t\thelperText={(indexInTouched && indexInTouched.baths) && (indexInErrors && indexInErrors.baths)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{PROPERTY_BATHS.map((property_bath, bathNumberIndex) => (\n\t\t\t\t\t\t\t\t<MenuItem key={bathNumberIndex} value={property_bath}>\n\t\t\t\t\t\t\t\t\t{property_bath}\n\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</TextField>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item key={`property_units[${propertyUnitIndex}].image`}>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tproperty_unit.file_to_load_url &&\n\t\t\t\t\t\t\t<ImageCropper open={true} selectedFile={property_unit.file_to_load_url}\n\t\t\t\t\t\t\t\tsetCroppedImageData={(croppedImage) => {\n\t\t\t\t\t\t\t\t\treplace(propertyUnitIndex, Object.assign({}, property_unit, { file_to_load_url: '', image: croppedImage }));\n\t\t\t\t\t\t\t\t}} cropHeight={200} cropWidth={300} />\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t<input onChange={(event) => {\n\t\t\t\t\t\t\t\tconst selectedFile = event.currentTarget.files[0]\n\t\t\t\t\t\t\t\t//remove the object then push a copy of it with added image object\n\t\t\t\t\t\t\t\treplace(propertyUnitIndex, Object.assign({}, property_unit, { file_to_load_url: selectedFile }));\n\t\t\t\t\t\t\t}} accept=\"image/*\" className={classes.fileInputDisplayNone} id={`icon-button-file-${propertyUnitIndex}`} type=\"file\" />\n\t\t\t\t\t\t\t<label htmlFor={`icon-button-file-${propertyUnitIndex}`}>\n\t\t\t\t\t\t\t\t<IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n\t\t\t\t\t\t\t\t\t<PhotoCamera />\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<Box>{property_unit.image ? property_unit.image.name : \"No Image\"}</Box>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid xs item key={`property_units[${propertyUnitIndex}].sqm`}>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tlabel=\"Sqm\"\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tvalue={property_unit.sqm}\n\t\t\t\t\t\t\tname={`property_units.${propertyUnitIndex}.sqm`}\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\terror={(indexInErrors && 'sqm' in indexInErrors) && (indexInTouched && indexInTouched.sqm)}\n\t\t\t\t\t\t\thelperText={(indexInTouched && indexInTouched.sqm) && (indexInErrors && indexInErrors.sqm)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item key={`property_units[${propertyUnitIndex}].delete`}>\n\t\t\t\t\t\t<IconButton aria-label=\"delete\"\n\t\t\t\t\t\t\tonClick={() => { remove(propertyUnitIndex) }}\n\t\t\t\t\t\t\tsize=\"medium\">\n\t\t\t\t\t\t\t<DeleteIcon />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>)\n\n\t\t})\n\t\treturn <Grid item container spacing={4} direction=\"column\">\n\t\t\t{layout}\n\t\t\t<Grid item>\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\tonClick={() => push({ ref: '', unit_type: '', beds: '', baths: '', sqm: '', image: '' })}\n\t\t\t\t\tdisableElevation>\n\t\t\t\t\tAdd Unit\n\t\t\t</Button>\n\t\t\t</Grid>\n\t\t</Grid>\n\t}\n\n\n\treturn (\n\t\t<Formik\n\t\t\tinitialValues={propertyValues}\n\t\t\tenableReinitialize validationSchema={PropertySchema}\n\t\t\tonSubmit={async (values, { resetForm, setStatus }) => {\n\t\t\t\ttry {\n\t\t\t\t\tlet property = {\n\t\t\t\t\t\tid: values.id,\n\t\t\t\t\t\tassigned_to: values.assigned_to,\n\t\t\t\t\t\tcity: values.city,\n\t\t\t\t\t\tpostal_code: values.postal_code,\n\t\t\t\t\t\taddress: values.address,\n\t\t\t\t\t\tref: values.ref,\n\t\t\t\t\t\towner: values.owner,\n\t\t\t\t\t};\n\t\t\t\t\t//first upload the image to firebase\n\t\t\t\t\tif (values.property_image && values.property_image.data) {\n\t\t\t\t\t\t//if the user had previously uploaded an image\n\t\t\t\t\t\t// then delete it here and replace the url with new uploaded image\n\t\t\t\t\t\tif (values.property_image_url) {\n\t\t\t\t\t\t\t//delete file from storage\n\t\t\t\t\t\t\tawait deleteUploadedFileByUrl(values.property_image_url);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//upload the first and only image in the contact images array\n\t\t\t\t\t\tvar fileDownloadUrl = await uploadFilesToFirebase(values.property_image)\n\t\t\t\t\t\tproperty.property_image_url = fileDownloadUrl;\n\t\t\t\t\t}\n\t\t\t\t\tconst propertyId = await handleItemSubmit(property, \"properties\")\n\t\t\t\t\t//create some property settings if first time property being created\n\t\t\t\t\tif (!values.id) {\n\t\t\t\t\t\tawait handleItemSubmit(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tproperty_id: propertyId, grace_period: 0, late_fees_charges_activated: false,\n\t\t\t\t\t\t\t\tautomatically_end_agreement_on_move_out_date: true, management_fee_type: \"flat_fee\",\n\t\t\t\t\t\t\t\tmanagement_fee_flat_fee: 0\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"property-settings\")\n\t\t\t\t\t}\n\t\t\t\t\tvalues.property_units.forEach(async (property_unit) => {\n\t\t\t\t\t\t//check if the unit has an image to upload\n\t\t\t\t\t\tif (property_unit.image && property_unit.image.data) {\n\t\t\t\t\t\t\t//upload the file to the database and assign the resulting file \n\t\t\t\t\t\t\t// upload path to property_unit\n\t\t\t\t\t\t\tconst fileUploadPath = await uploadFilesToFirebase(property_unit.image)\n\t\t\t\t\t\t\tproperty_unit.unit_image_url = fileUploadPath\n\t\t\t\t\t\t\tdelete property_unit.image\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst propertyUnitToSave = Object.assign({}, property_unit, {\n\t\t\t\t\t\t\tproperty_id: propertyId,\n\t\t\t\t\t\t\tproperty_ref: values.ref,\n\t\t\t\t\t\t\tassigned_to: values.assigned_to\n\t\t\t\t\t\t})\n\t\t\t\t\t\tawait handleItemSubmit(propertyUnitToSave, 'property_units')\n\t\t\t\t\t})\n\t\t\t\t\tresetForm({});\n\t\t\t\t\tif (values.id) {\n\t\t\t\t\t\thistory.goBack()\n\t\t\t\t\t}\n\t\t\t\t\tsetStatus({ sent: true, msg: \"Details saved successfully.\" })\n\n\t\t\t\t} catch (error) {\n\t\t\t\t\tsetStatus({ sent: false, msg: `Error! ${error}.` })\n\t\t\t\t}\n\t\t\t}}\n\t\t>\n\t\t\t{({\n\t\t\t\tvalues,\n\t\t\t\tstatus,\n\t\t\t\thandleSubmit,\n\t\t\t\ttouched,\n\t\t\t\terrors,\n\t\t\t\thandleChange,\n\t\t\t\thandleBlur,\n\t\t\t\tisSubmitting,\n\t\t\t\tsetFieldValue\n\t\t\t}) => (\n\t\t\t\t<form\n\t\t\t\t\tclassName={classes.form}\n\t\t\t\t\tmethod=\"post\"\n\t\t\t\t\tid=\"propertyInputForm\"\n\t\t\t\t\tonSubmit={handleSubmit}\n\t\t\t\t>\n\t\t\t\t\t<Grid container spacing={2} direction=\"column\">\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstatus && status.msg && (\n\t\t\t\t\t\t\t\t<CustomSnackbar\n\t\t\t\t\t\t\t\t\tvariant={status.sent ? \"success\" : \"error\"}\n\t\t\t\t\t\t\t\t\tmessage={status.msg}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tisSubmitting && (<CustomCircularProgress open={true} />)\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname=\"ref\"\n\t\t\t\t\t\t\t\tlabel=\"Property Name/Ref\"\n\t\t\t\t\t\t\t\tid=\"ref\"\n\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\tvalue={values.ref}\n\t\t\t\t\t\t\t\terror={errors.ref && touched.ref}\n\t\t\t\t\t\t\t\thelperText={touched.ref && errors.ref}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Typography variant=\"subtitle1\">Street Address</Typography>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tlabel=\"Address\"\n\t\t\t\t\t\t\t\tid=\"address\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname=\"address\"\n\t\t\t\t\t\t\t\tvalue={values.address}\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\terror={errors.address && touched.address}\n\t\t\t\t\t\t\t\thelperText={touched.address && errors.address}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tid=\"city\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname=\"city\"\n\t\t\t\t\t\t\t\tlabel=\"City\"\n\t\t\t\t\t\t\t\tvalue={values.city}\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tlabel=\"Postal Code\"\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tid=\"postal_code\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname=\"postal_code\"\n\t\t\t\t\t\t\t\tvalue={values.postal_code}\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\terror={errors.postal_code && touched.postal_code}\n\t\t\t\t\t\t\t\thelperText={touched.postal_code && errors.postal_code}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tselect\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tid=\"owner\"\n\t\t\t\t\t\t\t\tname=\"owner\"\n\t\t\t\t\t\t\t\tlabel=\"Property Owner\"\n\t\t\t\t\t\t\t\tvalue={values.owner}\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\thelperText=\"Who is the Property Owner\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{users.map((user, index) => (\n\t\t\t\t\t\t\t\t\t<MenuItem key={index} value={user.id}>\n\t\t\t\t\t\t\t\t\t\t{user.first_name} {user.last_name}\n\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TextField>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tselect\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tname=\"assigned_to\"\n\t\t\t\t\t\t\t\tid=\"assigned_to\"\n\t\t\t\t\t\t\t\tlabel=\"Landlord\"\n\t\t\t\t\t\t\t\tvalue={values.assigned_to}\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\terror={errors.assigned_to && touched.assigned_to}\n\t\t\t\t\t\t\t\thelperText={touched.assigned_to && errors.assigned_to}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{users.map((user, index) => (\n\t\t\t\t\t\t\t\t\t<MenuItem key={index} value={user.id}>\n\t\t\t\t\t\t\t\t\t\t{user.first_name} {user.last_name}\n\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TextField>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\titem\n\t\t\t\t\t\t\tcontainer\n\t\t\t\t\t\t\tdirection=\"row\"\n\t\t\t\t\t\t\tjustify=\"flex-start\"\n\t\t\t\t\t\t\tspacing={4}\n\t\t\t\t\t\t\talignItems=\"center\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Grid key={1} item>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tvalues.file_to_load_url &&\n\t\t\t\t\t\t\t\t\t<ImageCropper open={true} selectedFile={values.file_to_load_url}\n\t\t\t\t\t\t\t\t\t\tsetCroppedImageData={(croppedImage) => {\n\t\t\t\t\t\t\t\t\t\t\tsetFieldValue('file_to_load_url', '');\n\t\t\t\t\t\t\t\t\t\t\tsetFieldValue('property_image', croppedImage);\n\t\t\t\t\t\t\t\t\t\t}} cropHeight={200} cropWidth={300} />\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t<Box>{values.property_image ? values.property_image.name : \"No Image\"}</Box>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid key={2} item>\n\t\t\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t\t\t<input onChange={(event) => {\n\t\t\t\t\t\t\t\t\t\tconst selectedFile = event.currentTarget.files[0]\n\t\t\t\t\t\t\t\t\t\t//remove the object then push a copy of it with added image object\n\t\t\t\t\t\t\t\t\t\tsetFieldValue(\"file_to_load_url\", selectedFile);\n\t\t\t\t\t\t\t\t\t}} accept=\"image/*\" className={classes.fileInputDisplayNone} id={\"property-image-input\"} type=\"file\" />\n\t\t\t\t\t\t\t\t\t<label htmlFor={\"property-image-input\"}>\n\t\t\t\t\t\t\t\t\t\t<IconButton size=\"medium\" color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n\t\t\t\t\t\t\t\t\t\t\t<PhotoCamera />\n\t\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tvalues.property_image_url ? <Button variant=\"contained\" onClick={async () => {\n\t\t\t\t\t\t\t\t\t\t\tawait deleteUploadedFileByUrl(values.property_image_url)\n\t\t\t\t\t\t\t\t\t\t\tsetFieldValue('property_image_url', '')\n\t\t\t\t\t\t\t\t\t\t}}>Delete Image</Button> : null\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvalues.id ? null : (\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<Typography variant=\"subtitle1\" paragraph>Add Rental Units</Typography>\n\t\t\t\t\t\t\t\t\t<FieldArray\n\t\t\t\t\t\t\t\t\t\tname=\"property_units\"\n\t\t\t\t\t\t\t\t\t\tcomponent={UnitInputComponent}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\titem\n\t\t\t\t\t\t\tcontainer\n\t\t\t\t\t\t\tjustify=\"flex-start\"\n\t\t\t\t\t\t\tdirection=\"row\"\n\t\t\t\t\t\t\tclassName={classes.buttonBox}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\t\t\tstartIcon={<CancelIcon />}\n\t\t\t\t\t\t\t\t\tonClick={() => history.goBack()}\n\t\t\t\t\t\t\t\t\tdisableElevation\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\t\t\tstartIcon={<SaveIcon />}\n\t\t\t\t\t\t\t\t\tform=\"propertyInputForm\"\n\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{values.id ? \"Save Details\" : \"Create Property\"}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</form>\n\t\t\t)}\n\t\t</Formik>\n\t);\n};\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tproperties: state.properties,\n\t\tpropertiesMediaFiles: state.mediaFiles,\n\t\terror: state.error,\n\t\t// contacts: state.contacts.filter(({ id }) => !state.properties.find((property) => property.tenants.includes(id))),\n\t\tcurrentUser: state.currentUser,\n\t\tusers: state.users,\n\t};\n};\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\thandleItemDelete: (itemId, url) => dispatch(handleDelete(itemId, url)),\n\t\thandleItemSubmit: (item, url) => dispatch(handleItemFormSubmit(item, url)),\n\t};\n};\n\nPropertyInputForm = connect(mapStateToProps, mapDispatchToProps)(PropertyInputForm);\n\nexport default withRouter(PropertyInputForm);\n"]},"metadata":{},"sourceType":"module"}