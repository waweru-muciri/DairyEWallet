{"ast":null,"code":"var _jsxFileName = \"/home/brianmuciri/Projects/farm-ledger-ld/src/Routes/LeasePage.js\";\nimport React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport PageHeading from \"../components/PageHeading\";\nimport Layout from \"../components/PrivateLayout\";\nimport { connect } from \"react-redux\";\nimport { handleItemFormSubmit, handleDelete } from \"../actions/actions\";\nimport UnitLeaseInputForm from \"../components/property/UnitLeaseInputForm\";\nimport { withRouter } from \"react-router-dom\";\n\nlet TransactionPage = ({\n  leaseToEdit,\n  tenantsToShow,\n  history,\n  properties,\n  propertyUnitsToShow,\n  leaseUnitCharges,\n  handleItemSubmit,\n  handleItemDelete\n}) => {\n  const pageTitle = leaseToEdit.id ? \"Edit Rental Agreement\" : \"Add Rental Agreement\";\n  return /*#__PURE__*/React.createElement(Layout, {\n    pageTitle: \"Rental Agreement Details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    key: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PageHeading, {\n    text: pageTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    justify: \"center\",\n    item: true,\n    key: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(UnitLeaseInputForm, {\n    contacts: tenantsToShow,\n    history: history,\n    properties: properties,\n    propertyUnits: propertyUnitsToShow,\n    leaseUnitCharges: leaseUnitCharges,\n    handleItemSubmit: handleItemSubmit,\n    handleItemDelete: handleItemDelete,\n    leaseToEdit: leaseToEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 6\n    }\n  }))));\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const leaseToEdit = state.leases.find(({\n    id\n  }) => id === ownProps.match.params.leaseId) || {}; //here we are editing this lease so we need to remove it from active leases\n  //add unit to units without active leases for it to be selected\n\n  const activeLeases = leaseToEdit.id ? state.leases.filter(({\n    terminated,\n    id\n  }) => terminated !== true && id !== leaseToEdit.id) : state.leases.filter(({\n    terminated\n  }) => terminated !== true);\n  const unitsWithActiveLeases = activeLeases.map(lease => lease.unit_id);\n  const contactsWithActiveLeases = [];\n  activeLeases.forEach(lease => {\n    contactsWithActiveLeases.push(...lease.tenants);\n  });\n  const propertyUnitsToShow = state.propertyUnits.filter(({\n    id\n  }) => !unitsWithActiveLeases.includes(id));\n  const tenantsToShow = state.contacts.filter(({\n    id\n  }) => !contactsWithActiveLeases.includes(id));\n  return {\n    leaseToEdit: state.leases.find(({\n      id\n    }) => id === ownProps.match.params.leaseId) || {},\n    properties: state.properties,\n    propertyUnitsToShow: propertyUnitsToShow.sort((unit1, unit2) => unit1.ref < unit2.ref ? -1 : unit1.ref > unit2.ref ? 1 : 0),\n    tenantsToShow: tenantsToShow,\n    leaseUnitCharges: state.propertyUnitCharges.filter(({\n      unit_id\n    }) => unit_id === leaseToEdit.unit_id)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleItemDelete: (itemId, url) => dispatch(handleDelete(itemId, url)),\n    handleItemSubmit: (item, url) => dispatch(handleItemFormSubmit(item, url))\n  };\n};\n\nTransactionPage = connect(mapStateToProps, mapDispatchToProps)(TransactionPage);\nexport default withRouter(TransactionPage);","map":{"version":3,"sources":["/home/brianmuciri/Projects/farm-ledger-ld/src/Routes/LeasePage.js"],"names":["React","Grid","PageHeading","Layout","connect","handleItemFormSubmit","handleDelete","UnitLeaseInputForm","withRouter","TransactionPage","leaseToEdit","tenantsToShow","history","properties","propertyUnitsToShow","leaseUnitCharges","handleItemSubmit","handleItemDelete","pageTitle","id","mapStateToProps","state","ownProps","leases","find","match","params","leaseId","activeLeases","filter","terminated","unitsWithActiveLeases","map","lease","unit_id","contactsWithActiveLeases","forEach","push","tenants","propertyUnits","includes","contacts","sort","unit1","unit2","ref","propertyUnitCharges","mapDispatchToProps","dispatch","itemId","url","item"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACCC,oBADD,EAECC,YAFD,QAGO,oBAHP;AAIA,OAAOC,kBAAP,MAA+B,2CAA/B;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,IAAIC,eAAe,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,aAAf;AAA8BC,EAAAA,OAA9B;AAAuCC,EAAAA,UAAvC;AAAmDC,EAAAA,mBAAnD;AACtBC,EAAAA,gBADsB;AACJC,EAAAA,gBADI;AACcC,EAAAA;AADd,CAAD,KACsC;AAE3D,QAAMC,SAAS,GAAGR,WAAW,CAACS,EAAZ,GAAiB,uBAAjB,GAA2C,sBAA7D;AAEA,sBACC,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,0BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAC,QAAxB;AAAiC,IAAA,SAAS,EAAC,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,GAAG,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAED,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADD,eAIC,oBAAC,IAAD;AACC,IAAA,SAAS,MADV;AAEC,IAAA,SAAS,EAAC,QAFX;AAGC,IAAA,OAAO,EAAC,QAHT;AAIC,IAAA,IAAI,MAJL;AAKC,IAAA,GAAG,EAAE,CALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOC,oBAAC,kBAAD;AACC,IAAA,QAAQ,EAAEP,aADX;AAC0B,IAAA,OAAO,EAAEC,OADnC;AAEC,IAAA,UAAU,EAAEC,UAFb;AAEyB,IAAA,aAAa,EAAEC,mBAFxC;AAGC,IAAA,gBAAgB,EAAEC,gBAHnB;AAIC,IAAA,gBAAgB,EAAEC,gBAJnB;AAKC,IAAA,gBAAgB,EAAEC,gBALnB;AAMC,IAAA,WAAW,EAAEP,WANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPD,CAJD,CADD,CADD;AAyBA,CA9BD;;AAgCA,MAAMU,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC5C,QAAMZ,WAAW,GAAGW,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkB,CAAC;AAAEL,IAAAA;AAAF,GAAD,KAAYA,EAAE,KAAKG,QAAQ,CAACG,KAAT,CAAeC,MAAf,CAAsBC,OAA3D,KAAuE,EAA3F,CAD4C,CAE5C;AACA;;AACA,QAAMC,YAAY,GAAGlB,WAAW,CAACS,EAAZ,GACpBE,KAAK,CAACE,MAAN,CAAaM,MAAb,CAAoB,CAAC;AAAEC,IAAAA,UAAF;AAAcX,IAAAA;AAAd,GAAD,KAAwBW,UAAU,KAAK,IAAf,IAAuBX,EAAE,KAAKT,WAAW,CAACS,EAAtF,CADoB,GAEpBE,KAAK,CAACE,MAAN,CAAaM,MAAb,CAAoB,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAoBA,UAAU,KAAK,IAAvD,CAFD;AAGA,QAAMC,qBAAqB,GAAGH,YAAY,CAACI,GAAb,CAAiBC,KAAK,IAAIA,KAAK,CAACC,OAAhC,CAA9B;AACA,QAAMC,wBAAwB,GAAG,EAAjC;AACAP,EAAAA,YAAY,CAACQ,OAAb,CAAqBH,KAAK,IAAI;AAC7BE,IAAAA,wBAAwB,CAACE,IAAzB,CAA8B,GAAGJ,KAAK,CAACK,OAAvC;AACA,GAFD;AAGA,QAAMxB,mBAAmB,GAAGO,KAAK,CAACkB,aAAN,CAAoBV,MAApB,CAA2B,CAAC;AAAEV,IAAAA;AAAF,GAAD,KAAY,CAACY,qBAAqB,CAACS,QAAtB,CAA+BrB,EAA/B,CAAxC,CAA5B;AACA,QAAMR,aAAa,GAAGU,KAAK,CAACoB,QAAN,CAAeZ,MAAf,CAAsB,CAAC;AAAEV,IAAAA;AAAF,GAAD,KAAY,CAACgB,wBAAwB,CAACK,QAAzB,CAAkCrB,EAAlC,CAAnC,CAAtB;AAEA,SAAO;AACNT,IAAAA,WAAW,EAAEW,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkB,CAAC;AAAEL,MAAAA;AAAF,KAAD,KAAYA,EAAE,KAAKG,QAAQ,CAACG,KAAT,CAAeC,MAAf,CAAsBC,OAA3D,KAAuE,EAD9E;AAENd,IAAAA,UAAU,EAAEQ,KAAK,CAACR,UAFZ;AAGNC,IAAAA,mBAAmB,EAAEA,mBAAmB,CAAC4B,IAApB,CAAyB,CAACC,KAAD,EAAQC,KAAR,KAAkBD,KAAK,CAACE,GAAN,GAAYD,KAAK,CAACC,GAAlB,GAAwB,CAAC,CAAzB,GAA6BF,KAAK,CAACE,GAAN,GAAYD,KAAK,CAACC,GAAlB,GAAwB,CAAxB,GAA4B,CAApG,CAHf;AAINlC,IAAAA,aAAa,EAAEA,aAJT;AAKNI,IAAAA,gBAAgB,EAAEM,KAAK,CAACyB,mBAAN,CAA0BjB,MAA1B,CAAiC,CAAC;AAAEK,MAAAA;AAAF,KAAD,KAAiBA,OAAO,KAAKxB,WAAW,CAACwB,OAA1E;AALZ,GAAP;AAOA,CAtBD;;AAuBA,MAAMa,kBAAkB,GAAIC,QAAD,IAAc;AACxC,SAAO;AACN/B,IAAAA,gBAAgB,EAAE,CAACgC,MAAD,EAASC,GAAT,KAAiBF,QAAQ,CAAC1C,YAAY,CAAC2C,MAAD,EAASC,GAAT,CAAb,CADrC;AAENlC,IAAAA,gBAAgB,EAAE,CAACmC,IAAD,EAAOD,GAAP,KAAeF,QAAQ,CAAC3C,oBAAoB,CAAC8C,IAAD,EAAOD,GAAP,CAArB;AAFnC,GAAP;AAIA,CALD;;AAOAzC,eAAe,GAAGL,OAAO,CAACgB,eAAD,EAAkB2B,kBAAlB,CAAP,CAA6CtC,eAA7C,CAAlB;AAEA,eAAeD,UAAU,CAACC,eAAD,CAAzB","sourcesContent":["import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport PageHeading from \"../components/PageHeading\";\nimport Layout from \"../components/PrivateLayout\";\nimport { connect } from \"react-redux\";\nimport {\n\thandleItemFormSubmit,\n\thandleDelete,\n} from \"../actions/actions\";\nimport UnitLeaseInputForm from \"../components/property/UnitLeaseInputForm\";\nimport { withRouter } from \"react-router-dom\";\n\nlet TransactionPage = ({ leaseToEdit, tenantsToShow, history, properties, propertyUnitsToShow,\n\tleaseUnitCharges, handleItemSubmit, handleItemDelete }) => {\n\n\tconst pageTitle = leaseToEdit.id ? \"Edit Rental Agreement\" : \"Add Rental Agreement\";\n\n\treturn (\n\t\t<Layout pageTitle=\"Rental Agreement Details\">\n\t\t\t<Grid container justify=\"center\" direction=\"column\">\n\t\t\t\t<Grid item key={2}>\n\t\t\t\t\t<PageHeading text={pageTitle} />\n\t\t\t\t</Grid>\n\t\t\t\t<Grid\n\t\t\t\t\tcontainer\n\t\t\t\t\tdirection=\"column\"\n\t\t\t\t\tjustify=\"center\"\n\t\t\t\t\titem\n\t\t\t\t\tkey={3}\n\t\t\t\t>\n\t\t\t\t\t<UnitLeaseInputForm\n\t\t\t\t\t\tcontacts={tenantsToShow} history={history}\n\t\t\t\t\t\tproperties={properties} propertyUnits={propertyUnitsToShow}\n\t\t\t\t\t\tleaseUnitCharges={leaseUnitCharges}\n\t\t\t\t\t\thandleItemSubmit={handleItemSubmit}\n\t\t\t\t\t\thandleItemDelete={handleItemDelete}\n\t\t\t\t\t\tleaseToEdit={leaseToEdit}\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Layout>\n\t);\n};\n\nconst mapStateToProps = (state, ownProps) => {\n\tconst leaseToEdit = state.leases.find(({ id }) => id === ownProps.match.params.leaseId) || {}\n\t//here we are editing this lease so we need to remove it from active leases\n\t//add unit to units without active leases for it to be selected\n\tconst activeLeases = leaseToEdit.id ?\n\t\tstate.leases.filter(({ terminated, id }) => terminated !== true && id !== leaseToEdit.id) :\n\t\tstate.leases.filter(({ terminated }) => terminated !== true)\n\tconst unitsWithActiveLeases = activeLeases.map(lease => lease.unit_id)\n\tconst contactsWithActiveLeases = []\n\tactiveLeases.forEach(lease => {\n\t\tcontactsWithActiveLeases.push(...lease.tenants)\n\t});\n\tconst propertyUnitsToShow = state.propertyUnits.filter(({ id }) => !unitsWithActiveLeases.includes(id))\n\tconst tenantsToShow = state.contacts.filter(({ id }) => !contactsWithActiveLeases.includes(id))\n\n\treturn {\n\t\tleaseToEdit: state.leases.find(({ id }) => id === ownProps.match.params.leaseId) || {},\n\t\tproperties: state.properties,\n\t\tpropertyUnitsToShow: propertyUnitsToShow.sort((unit1, unit2) => unit1.ref < unit2.ref ? -1 : unit1.ref > unit2.ref ? 1 : 0),\n\t\ttenantsToShow: tenantsToShow,\n\t\tleaseUnitCharges: state.propertyUnitCharges.filter(({ unit_id }) => unit_id === leaseToEdit.unit_id),\n\t};\n};\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\thandleItemDelete: (itemId, url) => dispatch(handleDelete(itemId, url)),\n\t\thandleItemSubmit: (item, url) => dispatch(handleItemFormSubmit(item, url)),\n\t};\n};\n\nTransactionPage = connect(mapStateToProps, mapDispatchToProps)(TransactionPage);\n\nexport default withRouter(TransactionPage);\n"]},"metadata":{},"sourceType":"module"}