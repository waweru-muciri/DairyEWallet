{"ast":null,"code":"var _jsxFileName = \"/home/brianmuciri/Projects/farm-ledger-ld/src/components/property/PropertyUnitInputForm.js\";\nimport React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport CustomSnackbar from '../CustomSnackbar';\nimport { Formik } from \"formik\";\nimport { uploadFilesToFirebase, deleteUploadedFileByUrl } from \"../../actions/actions\";\nimport { commonStyles } from \"../commonStyles\";\nimport { withRouter } from \"react-router-dom\";\nimport { getUnitTypes, getPropertyBeds, getPropertyBaths } from \"../../assets/commonAssets.js\";\nimport ImageCropper from '../ImageCropper';\nimport CustomCircularProgress from \"../CustomCircularProgress\";\nimport * as Yup from \"yup\";\nconst UNIT_TYPES = getUnitTypes();\nconst PROPERTY_BEDS = getPropertyBeds();\nconst PROPERTY_BATHS = getPropertyBaths();\nconst PropertyUnitSchema = Yup.object().shape({\n  property_id: Yup.string().trim().required(\"Property is Required\"),\n  unit_type: Yup.string().trim().required(\"Unit Type is Required\"),\n  baths: Yup.string().trim(),\n  beds: Yup.string().trim().required(\"Beds is required\"),\n  ref: Yup.string().trim().required(\"Unit Ref Required\"),\n  sqm: Yup.number().typeError('Square meters must be a number').min(0).default(0)\n});\n\nlet PropertyUnitInputForm = props => {\n  const classes = commonStyles();\n  const {\n    properties,\n    history,\n    handleItemSubmit\n  } = props;\n  let propertyUnitToEdit = props.propertyUnitToEdit || {}; //get both unit values and latest lease information\n\n  const propertyValues = {\n    id: propertyUnitToEdit.id,\n    ref: propertyUnitToEdit.ref || \"\",\n    property_id: propertyUnitToEdit.property_id || \"\",\n    address: propertyUnitToEdit.address || \"\",\n    unit_type: propertyUnitToEdit.unit_type || \"\",\n    beds: propertyUnitToEdit.beds || \"\",\n    baths: propertyUnitToEdit.baths || \"\",\n    sqm: propertyUnitToEdit.sqm || '',\n    unit_image_url: propertyUnitToEdit.unit_image_url || '',\n    file_to_load_url: ''\n  };\n  return /*#__PURE__*/React.createElement(Formik, {\n    initialValues: propertyValues,\n    enableReinitialize: true,\n    validationSchema: PropertyUnitSchema,\n    onSubmit: async (values, {\n      resetForm,\n      setStatus\n    }) => {\n      try {\n        let property_unit = {\n          id: values.id,\n          property_id: values.property_id,\n          ref: values.ref,\n          address: values.ref,\n          unit_type: values.unit_type,\n          beds: values.beds,\n          baths: values.baths,\n          sqm: values.sqm\n        }; //check if the unit has an image to upload\n\n        if (values.unit_image && values.unit_image.data) {\n          //if the user had previously uploaded an image for unit\n          // then delete it here and replace the url with new uploaded image\n          if (values.unit_image_url) {\n            //delete file from storage\n            await deleteUploadedFileByUrl(values.unit_image_url);\n          } //upload the file to the database and assign the resulting file \n          // upload path to property_unit\n\n\n          const fileUploadPath = await uploadFilesToFirebase(values.unit_image);\n          property_unit.unit_image_url = fileUploadPath;\n        } //save the unit details\n\n\n        await handleItemSubmit(property_unit, 'property_units');\n        resetForm({});\n        setStatus({\n          sent: true,\n          msg: \"Unit saved successfully.\"\n        });\n      } catch (error) {\n        setStatus({\n          sent: false,\n          msg: `Error! ${error}.`\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 3\n    }\n  }, ({\n    values,\n    status,\n    handleSubmit,\n    touched,\n    errors,\n    handleChange,\n    handleBlur,\n    setFieldValue,\n    isSubmitting\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    method: \"post\",\n    id: \"propertyUnitInputForm\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 6\n    }\n  }, status && status.msg && /*#__PURE__*/React.createElement(CustomSnackbar, {\n    variant: status.sent ? \"success\" : \"error\",\n    message: status.msg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }), isSubmitting && /*#__PURE__*/React.createElement(CustomCircularProgress, {\n    open: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    spacing: 2,\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, \"Unit Details\")), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    spacing: 2,\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    select: true,\n    name: \"property_id\",\n    label: \"Property With Unit\",\n    id: \"property_id\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    value: values.property_id,\n    error: errors.property_id && touched.property_id,\n    helperText: touched.property_id && errors.property_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 10\n    }\n  }, properties.map((property, index) => /*#__PURE__*/React.createElement(MenuItem, {\n    key: index,\n    value: property.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 12\n    }\n  }, property.ref)))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    type: \"text\",\n    name: \"ref\",\n    id: \"ref\",\n    label: \"Unit Ref\",\n    value: values.ref,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    error: errors.ref && touched.ref,\n    helperText: touched.ref && errors.ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 10\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    spacing: 2,\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    select: true,\n    name: \"unit_type\",\n    label: \"Unit Type\",\n    id: \"unit_type\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    value: values.unit_type,\n    error: errors.unit_type && touched.unit_type,\n    helperText: touched.unit_type && errors.unit_type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 10\n    }\n  }, UNIT_TYPES.map((unit_type, index) => /*#__PURE__*/React.createElement(MenuItem, {\n    key: index,\n    value: unit_type.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 12\n    }\n  }, unit_type.displayValue)))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    select: true,\n    name: \"beds\",\n    label: \"Beds\",\n    id: \"beds\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    value: values.beds,\n    error: errors.beds && touched.beds,\n    helperText: touched.beds && errors.beds,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 10\n    }\n  }, PROPERTY_BEDS.map((property_bed, index) => /*#__PURE__*/React.createElement(MenuItem, {\n    key: index,\n    value: property_bed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 12\n    }\n  }, property_bed))))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    spacing: 2,\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    select: true,\n    name: \"baths\",\n    label: \"Baths\",\n    id: \"baths\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    value: values.baths,\n    error: errors.baths && touched.baths,\n    helperText: \"Baths in Unit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 10\n    }\n  }, PROPERTY_BATHS.map((property_bath, index) => /*#__PURE__*/React.createElement(MenuItem, {\n    key: index,\n    value: property_bath,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 12\n    }\n  }, property_bath)))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    name: \"sqm\",\n    id: \"sqm\",\n    label: \"Square meters\",\n    value: values.sqm,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    error: errors.sqm && touched.sqm,\n    helperText: touched.sqm && errors.sqm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 10\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"row\",\n    justify: \"flex-start\",\n    spacing: 4,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    key: 1,\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 9\n    }\n  }, values.file_to_load_url && /*#__PURE__*/React.createElement(ImageCropper, {\n    open: true,\n    selectedFile: values.file_to_load_url,\n    setCroppedImageData: croppedImage => {\n      setFieldValue('file_to_load_url', '');\n      setFieldValue('unit_image', croppedImage);\n    },\n    cropHeight: 200,\n    cropWidth: 300,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Avatar, {\n    style: {\n      width: \"100%\",\n      height: '300px'\n    },\n    alt: \"Unit Image\",\n    src: values.unit_image ? values.unit_image.data : values.unit_image_url,\n    className: classes.largeAvatar,\n    variant: \"rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 10\n    }\n  }, \"Image\")), /*#__PURE__*/React.createElement(Grid, {\n    key: 2,\n    xs: 12,\n    item: true,\n    md: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: event => {\n      const selectedFile = event.currentTarget.files[0]; //remove the object then push a copy of it with added image object\n\n      setFieldValue(\"file_to_load_url\", selectedFile);\n    },\n    accept: \"image/*\",\n    className: classes.fileInputDisplayNone,\n    id: \"unit-image-input\",\n    type: \"file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"unit-image-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    color: \"primary\",\n    \"aria-label\": \"upload picture\",\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(PhotoCamera, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Box, {\n    marginBottom: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 11\n    }\n  }, values.unit_image_url || values.unit_image ? \"Change Image\" : \"Add Image\"), values.unit_image_url ? /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: async () => {\n      await deleteUploadedFileByUrl(values.unit_image_url);\n      setFieldValue('unit_image_url', '');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 36\n    }\n  }, \"Delete Image\") : null)))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"row\",\n    className: classes.buttonBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    variant: \"contained\",\n    size: \"medium\",\n    startIcon: /*#__PURE__*/React.createElement(CancelIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 21\n      }\n    }),\n    onClick: () => history.goBack(),\n    disableElevation: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 9\n    }\n  }, \"Cancel\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"medium\",\n    startIcon: /*#__PURE__*/React.createElement(SaveIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 21\n      }\n    }),\n    form: \"propertyUnitInputForm\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 9\n    }\n  }, \"Save\"))))));\n};\n\nexport default withRouter(PropertyUnitInputForm);","map":{"version":3,"sources":["/home/brianmuciri/Projects/farm-ledger-ld/src/components/property/PropertyUnitInputForm.js"],"names":["React","Typography","Grid","MenuItem","Box","TextField","Button","Avatar","IconButton","PhotoCamera","SaveIcon","CancelIcon","CustomSnackbar","Formik","uploadFilesToFirebase","deleteUploadedFileByUrl","commonStyles","withRouter","getUnitTypes","getPropertyBeds","getPropertyBaths","ImageCropper","CustomCircularProgress","Yup","UNIT_TYPES","PROPERTY_BEDS","PROPERTY_BATHS","PropertyUnitSchema","object","shape","property_id","string","trim","required","unit_type","baths","beds","ref","sqm","number","typeError","min","default","PropertyUnitInputForm","props","classes","properties","history","handleItemSubmit","propertyUnitToEdit","propertyValues","id","address","unit_image_url","file_to_load_url","values","resetForm","setStatus","property_unit","unit_image","data","fileUploadPath","sent","msg","error","status","handleSubmit","touched","errors","handleChange","handleBlur","setFieldValue","isSubmitting","form","map","property","index","displayValue","property_bed","property_bath","croppedImage","width","height","largeAvatar","event","selectedFile","currentTarget","files","fileInputDisplayNone","buttonBox","goBack"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport CustomSnackbar from '../CustomSnackbar'\nimport { Formik } from \"formik\";\nimport { uploadFilesToFirebase, deleteUploadedFileByUrl } from \"../../actions/actions\";\nimport { commonStyles } from \"../commonStyles\";\nimport { withRouter } from \"react-router-dom\";\nimport {\n\tgetUnitTypes,\n\tgetPropertyBeds,\n\tgetPropertyBaths,\n} from \"../../assets/commonAssets.js\";\nimport ImageCropper from '../ImageCropper';\nimport CustomCircularProgress from \"../CustomCircularProgress\";\nimport * as Yup from \"yup\";\n\nconst UNIT_TYPES = getUnitTypes();\nconst PROPERTY_BEDS = getPropertyBeds();\nconst PROPERTY_BATHS = getPropertyBaths();\n\nconst PropertyUnitSchema = Yup.object().shape({\n\tproperty_id: Yup.string().trim().required(\"Property is Required\"),\n\tunit_type: Yup.string().trim().required(\"Unit Type is Required\"),\n\tbaths: Yup.string().trim(),\n\tbeds: Yup.string().trim().required(\"Beds is required\"),\n\tref: Yup.string().trim().required(\"Unit Ref Required\"),\n\tsqm: Yup.number().typeError('Square meters must be a number').min(0).default(0),\n});\n\n\nlet PropertyUnitInputForm = (props) => {\n\tconst classes = commonStyles();\n\tconst { properties, history, handleItemSubmit } = props\n\tlet propertyUnitToEdit = props.propertyUnitToEdit || {};\n\t//get both unit values and latest lease information\n\tconst propertyValues = {\n\t\tid: propertyUnitToEdit.id,\n\t\tref: propertyUnitToEdit.ref || \"\",\n\t\tproperty_id: propertyUnitToEdit.property_id || \"\",\n\t\taddress: propertyUnitToEdit.address || \"\",\n\t\tunit_type: propertyUnitToEdit.unit_type || \"\",\n\t\tbeds: propertyUnitToEdit.beds || \"\",\n\t\tbaths: propertyUnitToEdit.baths || \"\",\n\t\tsqm: propertyUnitToEdit.sqm || '',\n\t\tunit_image_url: propertyUnitToEdit.unit_image_url || '',\n\t\tfile_to_load_url: '',\n\t};\n\n\treturn (\n\t\t<Formik\n\t\t\tinitialValues={propertyValues}\n\t\t\tenableReinitialize validationSchema={PropertyUnitSchema}\n\t\t\tonSubmit={async (values, { resetForm, setStatus }) => {\n\t\t\t\ttry {\n\t\t\t\t\tlet property_unit = {\n\t\t\t\t\t\tid: values.id,\n\t\t\t\t\t\tproperty_id: values.property_id,\n\t\t\t\t\t\tref: values.ref,\n\t\t\t\t\t\taddress: values.ref,\n\t\t\t\t\t\tunit_type: values.unit_type,\n\t\t\t\t\t\tbeds: values.beds,\n\t\t\t\t\t\tbaths: values.baths,\n\t\t\t\t\t\tsqm: values.sqm,\n\t\t\t\t\t};\n\t\t\t\t\t//check if the unit has an image to upload\n\t\t\t\t\tif (values.unit_image && values.unit_image.data) {\n\t\t\t\t\t\t//if the user had previously uploaded an image for unit\n\t\t\t\t\t\t// then delete it here and replace the url with new uploaded image\n\t\t\t\t\t\tif (values.unit_image_url) {\n\t\t\t\t\t\t\t//delete file from storage\n\t\t\t\t\t\t\tawait deleteUploadedFileByUrl(values.unit_image_url);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//upload the file to the database and assign the resulting file \n\t\t\t\t\t\t// upload path to property_unit\n\t\t\t\t\t\tconst fileUploadPath = await uploadFilesToFirebase(values.unit_image)\n\t\t\t\t\t\tproperty_unit.unit_image_url = fileUploadPath\n\t\t\t\t\t}\n\t\t\t\t\t//save the unit details\n\t\t\t\t\tawait handleItemSubmit(property_unit, 'property_units')\n\t\t\t\t\tresetForm({});\n\t\t\t\t\tsetStatus({ sent: true, msg: \"Unit saved successfully.\" })\n\t\t\t\t} catch (error) {\n\t\t\t\t\tsetStatus({ sent: false, msg: `Error! ${error}.` })\n\n\t\t\t\t}\n\t\t\t}}\n\t\t>\n\t\t\t{({\n\t\t\t\tvalues,\n\t\t\t\tstatus,\n\t\t\t\thandleSubmit,\n\t\t\t\ttouched,\n\t\t\t\terrors,\n\t\t\t\thandleChange,\n\t\t\t\thandleBlur,\n\t\t\t\tsetFieldValue,\n\t\t\t\tisSubmitting,\n\t\t\t}) => (\n\t\t\t\t<form\n\t\t\t\t\tclassName={classes.form}\n\t\t\t\t\tmethod=\"post\"\n\t\t\t\t\tid=\"propertyUnitInputForm\"\n\t\t\t\t\tonSubmit={handleSubmit}\n\t\t\t\t>\n\t\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstatus && status.msg && (\n\t\t\t\t\t\t\t\t<CustomSnackbar\n\t\t\t\t\t\t\t\t\tvariant={status.sent ? \"success\" : \"error\"}\n\t\t\t\t\t\t\t\t\tmessage={status.msg}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tisSubmitting && (<CustomCircularProgress open={true} />)\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<Grid container item spacing={2} direction=\"column\">\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<Typography variant=\"subtitle2\">\n\t\t\t\t\t\t\t\t\tUnit Details\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid container item spacing={2} direction=\"row\">\n\t\t\t\t\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\tselect\n\t\t\t\t\t\t\t\t\t\tname=\"property_id\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Property With Unit\"\n\t\t\t\t\t\t\t\t\t\tid=\"property_id\"\n\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\tvalue={values.property_id}\n\t\t\t\t\t\t\t\t\t\terror={errors.property_id && touched.property_id}\n\t\t\t\t\t\t\t\t\t\thelperText={touched.property_id && errors.property_id}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{properties.map((property, index) => (\n\t\t\t\t\t\t\t\t\t\t\t<MenuItem key={index} value={property.id}>\n\t\t\t\t\t\t\t\t\t\t\t\t{property.ref}\n\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</TextField>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tname=\"ref\"\n\t\t\t\t\t\t\t\t\t\tid=\"ref\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Unit Ref\"\n\t\t\t\t\t\t\t\t\t\tvalue={values.ref}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\terror={errors.ref && touched.ref}\n\t\t\t\t\t\t\t\t\t\thelperText={touched.ref && errors.ref}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid container item spacing={2} direction=\"row\">\n\t\t\t\t\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\tselect\n\t\t\t\t\t\t\t\t\t\tname=\"unit_type\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Unit Type\"\n\t\t\t\t\t\t\t\t\t\tid=\"unit_type\"\n\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\tvalue={values.unit_type}\n\t\t\t\t\t\t\t\t\t\terror={errors.unit_type && touched.unit_type}\n\t\t\t\t\t\t\t\t\t\thelperText={touched.unit_type && errors.unit_type}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{UNIT_TYPES.map((unit_type, index) => (\n\t\t\t\t\t\t\t\t\t\t\t<MenuItem key={index} value={unit_type.id}>\n\t\t\t\t\t\t\t\t\t\t\t\t{unit_type.displayValue}\n\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</TextField>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\tselect\n\t\t\t\t\t\t\t\t\t\tname=\"beds\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Beds\"\n\t\t\t\t\t\t\t\t\t\tid=\"beds\"\n\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\tvalue={values.beds}\n\t\t\t\t\t\t\t\t\t\terror={errors.beds && touched.beds}\n\t\t\t\t\t\t\t\t\t\thelperText={touched.beds && errors.beds}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{PROPERTY_BEDS.map((property_bed, index) => (\n\t\t\t\t\t\t\t\t\t\t\t<MenuItem key={index} value={property_bed}>\n\t\t\t\t\t\t\t\t\t\t\t\t{property_bed}\n\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</TextField>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid container item spacing={2} direction=\"row\">\n\t\t\t\t\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\tselect\n\t\t\t\t\t\t\t\t\t\tname=\"baths\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Baths\"\n\t\t\t\t\t\t\t\t\t\tid=\"baths\"\n\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\tvalue={values.baths}\n\t\t\t\t\t\t\t\t\t\terror={errors.baths && touched.baths}\n\t\t\t\t\t\t\t\t\t\thelperText={\"Baths in Unit\"}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{PROPERTY_BATHS.map((property_bath, index) => (\n\t\t\t\t\t\t\t\t\t\t\t<MenuItem key={index} value={property_bath}>\n\t\t\t\t\t\t\t\t\t\t\t\t{property_bath}\n\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</TextField>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\tname=\"sqm\"\n\t\t\t\t\t\t\t\t\t\tid=\"sqm\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Square meters\"\n\t\t\t\t\t\t\t\t\t\tvalue={values.sqm}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\terror={errors.sqm && touched.sqm}\n\t\t\t\t\t\t\t\t\t\thelperText={touched.sqm && errors.sqm}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\t\titem\n\t\t\t\t\t\t\t\tcontainer\n\t\t\t\t\t\t\t\tdirection=\"row\"\n\t\t\t\t\t\t\t\tjustify=\"flex-start\"\n\t\t\t\t\t\t\t\tspacing={4}\n\t\t\t\t\t\t\t\talignItems=\"center\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Grid key={1} item xs={12} md={6}>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tvalues.file_to_load_url &&\n\t\t\t\t\t\t\t\t\t\t<ImageCropper open={true} selectedFile={values.file_to_load_url}\n\t\t\t\t\t\t\t\t\t\t\tsetCroppedImageData={(croppedImage) => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue('file_to_load_url', '');\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue('unit_image', croppedImage);\n\t\t\t\t\t\t\t\t\t\t\t}} cropHeight={200} cropWidth={300} />\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t<Avatar\n\t\t\t\t\t\t\t\t\t\tstyle={{ width: \"100%\", height: '300px' }}\n\t\t\t\t\t\t\t\t\t\talt=\"Unit Image\"\n\t\t\t\t\t\t\t\t\t\tsrc={\n\t\t\t\t\t\t\t\t\t\t\tvalues.unit_image ?\n\t\t\t\t\t\t\t\t\t\t\t\tvalues.unit_image.data\n\t\t\t\t\t\t\t\t\t\t\t\t: values.unit_image_url\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tclassName={classes.largeAvatar} variant=\"rounded\"\n\t\t\t\t\t\t\t\t\t>Image</Avatar>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid key={2} xs={12} item md>\n\t\t\t\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t\t\t\t<input onChange={(event) => {\n\t\t\t\t\t\t\t\t\t\t\tconst selectedFile = event.currentTarget.files[0]\n\t\t\t\t\t\t\t\t\t\t\t//remove the object then push a copy of it with added image object\n\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(\"file_to_load_url\", selectedFile);\n\t\t\t\t\t\t\t\t\t\t}} accept=\"image/*\" className={classes.fileInputDisplayNone} id={\"unit-image-input\"} type=\"file\" />\n\t\t\t\t\t\t\t\t\t\t<label htmlFor={\"unit-image-input\"}>\n\t\t\t\t\t\t\t\t\t\t\t<IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n\t\t\t\t\t\t\t\t\t\t\t\t<PhotoCamera />\n\t\t\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t<Box marginBottom=\"1\">{values.unit_image_url || values.unit_image ? \"Change Image\" : \"Add Image\"}</Box>\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tvalues.unit_image_url ? <Button variant=\"contained\" onClick={async () => {\n\t\t\t\t\t\t\t\t\t\t\t\tawait deleteUploadedFileByUrl(values.unit_image_url)\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue('unit_image_url', '')\n\t\t\t\t\t\t\t\t\t\t\t}}>Delete Image</Button> : null\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\titem\n\t\t\t\t\t\t\tcontainer\n\t\t\t\t\t\t\tdirection=\"row\"\n\t\t\t\t\t\t\tclassName={classes.buttonBox}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\t\t\tstartIcon={<CancelIcon />}\n\t\t\t\t\t\t\t\t\tonClick={() => history.goBack()}\n\t\t\t\t\t\t\t\t\tdisableElevation\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\t\t\tstartIcon={<SaveIcon />}\n\t\t\t\t\t\t\t\t\tform=\"propertyUnitInputForm\"\n\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tSave\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</form>\n\t\t\t)}\n\t\t</Formik>\n\t);\n};\n\nexport default withRouter(PropertyUnitInputForm);\n"]},"metadata":{},"sourceType":"module"}