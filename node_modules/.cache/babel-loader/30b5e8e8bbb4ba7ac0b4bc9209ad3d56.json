{"ast":null,"code":"var _jsxFileName = \"/home/brianmuciri/Projects/farm-ledger-ld/src/Routes/OutstandingBalances.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Layout from \"../components/PrivateLayout\";\nimport PageHeading from \"../components/PageHeading\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Box from \"@material-ui/core/Box\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport PrintIcon from \"@material-ui/icons/Print\";\nimport ExportToExcelBtn from \"../components/ExportToExcelBtn\";\nimport PrintArrayToPdf from \"../components/PrintArrayToPdfBtn\";\nimport CommonTable from \"../components/table/commonTable\";\nimport { commonStyles } from '../components/commonStyles';\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { currencyFormatter, getTransactionsFilterOptions, getStartEndDatesForPeriod } from \"../assets/commonAssets\";\nimport { parse, isWithinInterval } from \"date-fns\";\nimport { printInvoice } from \"../assets/PrintingHelper\";\nimport PaymentInputForm from \"../components/payments/PaymentInputForm\";\nimport CreditNoteInputForm from \"../components/charges/AddCreditNote\";\nimport { handleItemFormSubmit } from '../actions/actions';\nconst PERIOD_FILTER_OPTIONS = getTransactionsFilterOptions();\nconst headCells = [{\n  id: \"tenant_name\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Tenant\"\n}, {\n  id: \"tenant_id_number\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Tenant ID\"\n}, {\n  id: \"unit_ref\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Unit Ref/Number\"\n}, {\n  id: \"charge_label\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Charge Name/Type\"\n}, {\n  id: \"charge_date\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Charge Date\"\n}, {\n  id: \"charge_amount\",\n  numeric: true,\n  disablePadding: true,\n  label: \"Charge Amount\"\n}, {\n  id: \"payed_status\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Payments Made\"\n}, {\n  id: \"payed_amount\",\n  numeric: true,\n  disablePadding: true,\n  label: \"Total Amounts Paid\"\n}, {\n  id: \"balance\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Balance After Payments\"\n}, {\n  id: \"total_credit_amounts\",\n  numeric: true,\n  disablePadding: true,\n  label: \"Total Credit Amount\"\n}, {\n  id: \"balance_after_credits\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Balance After Credit\"\n}];\n\nlet TenantChargesStatementPage = ({\n  properties,\n  contacts,\n  rentalCharges,\n  handleItemSubmit\n}) => {\n  const classes = commonStyles();\n  let [tenantChargesItems, setTenantChargesItems] = useState([]);\n  let [filteredChargeItems, setFilteredChargeItems] = useState([]);\n  let [chargeType, setChargeTypeFilter] = useState(\"\");\n  let [periodFilter, setPeriodFilter] = useState('month-to-date');\n  let [fromDateFilter, setFromDateFilter] = useState('');\n  let [toDateFilter, setToDateFilter] = useState(\"\");\n  let [contactFilter, setContactFilter] = useState(null);\n  let [propertyFilter, setPropertyFilter] = useState(\"all\");\n  const [addPaymentToChargeModalState, setAddPaymentToChargesModalState] = useState(false);\n  const [addCreditNoteToChargeModalState, setAddCreditNoteToChargeModalState] = useState(false);\n  const [selected, setSelected] = useState([]);\n  const CHARGE_TYPES = Array.from(new Set(filteredChargeItems.map(chargeItem => JSON.stringify({\n    label: chargeItem.charge_label,\n    value: chargeItem.charge_type\n  })))).map(chargeType => JSON.parse(chargeType));\n  useEffect(() => {\n    setTenantChargesItems(rentalCharges);\n    setFilteredChargeItems(filterChargesByCriteria(rentalCharges));\n  }, [rentalCharges]);\n  const totalNumOfCharges = filteredChargeItems.length;\n  const totalChargesAmount = filteredChargeItems.reduce((total, currentValue) => {\n    return total + parseFloat(currentValue.charge_amount) || 0;\n  }, 0);\n  const chargesWithPayments = filteredChargeItems.filter(charge => charge.payed_status === true).length;\n  const totalPaymentsAmount = filteredChargeItems.reduce((total, currentValue) => {\n    return total + parseFloat(currentValue.payed_amount) || 0;\n  }, 0);\n  const totalCreditAmount = filteredChargeItems.reduce((total, currentValue) => {\n    return total + parseFloat(currentValue.total_credit_amounts) || 0;\n  }, 0);\n\n  const filterChargesByCriteria = chargesToFilter => {\n    let filteredStatements = chargesToFilter;\n\n    if (periodFilter) {\n      const {\n        startDate,\n        endDate\n      } = getStartEndDatesForPeriod(periodFilter);\n      filteredStatements = filteredStatements.filter(chargeItem => {\n        const chargeItemDate = parse(chargeItem.charge_date, 'yyyy-MM-dd', new Date());\n        return isWithinInterval(chargeItemDate, {\n          start: startDate,\n          end: endDate\n        });\n      });\n    }\n\n    filteredStatements = filteredStatements.filter(({\n      charge_type,\n      charge_date,\n      property_id,\n      tenant_id\n    }) => (!fromDateFilter ? true : charge_date >= fromDateFilter) && (!toDateFilter ? true : charge_date <= toDateFilter) && (propertyFilter === \"all\" ? true : property_id === propertyFilter) && (!chargeType ? true : charge_type === chargeType.value) && (!contactFilter ? true : tenant_id === contactFilter.id));\n    return filteredStatements;\n  };\n\n  const toggleAddPaymentToChargeModal = () => {\n    setAddPaymentToChargesModalState(!addPaymentToChargeModalState);\n  };\n\n  const toggleAddCreditNoteToChargeModal = () => {\n    setAddCreditNoteToChargeModalState(!addCreditNoteToChargeModalState);\n  };\n\n  const handleSearchFormSubmit = event => {\n    event.preventDefault(); //filter the rentalCharges according to the search criteria here\n\n    setFilteredChargeItems(filterChargesByCriteria(tenantChargesItems));\n    setSelected([]);\n  };\n\n  const resetSearchForm = event => {\n    event.preventDefault();\n    setChargeTypeFilter(\"\");\n    setPeriodFilter(\"month-to-date\");\n    setFromDateFilter(\"\");\n    setToDateFilter(\"\");\n    setContactFilter(null);\n    setPropertyFilter(\"all\");\n  };\n\n  return /*#__PURE__*/React.createElement(Layout, {\n    pageTitle: \"Outstanding Balances\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"center\",\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    key: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PageHeading, {\n    text: \"Outstanding Balances\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    item: true,\n    alignItems: \"center\",\n    direction: \"row\",\n    key: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"medium\",\n    disabled: selected.length !== 1,\n    startIcon: /*#__PURE__*/React.createElement(AddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 40\n      }\n    }),\n    onClick: () => toggleAddPaymentToChargeModal(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 25\n    }\n  }, \"Receive Payment\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"medium\",\n    disabled: selected.length !== 1,\n    startIcon: /*#__PURE__*/React.createElement(AddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 40\n      }\n    }),\n    onClick: () => toggleAddCreditNoteToChargeModal(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 25\n    }\n  }, \"Add Credit Note\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    \"aria-label\": \"Print Invoice\",\n    variant: \"contained\",\n    size: \"medium\",\n    color: \"primary\",\n    disabled: !contactFilter || !selected.length,\n    onClick: () => {\n      const tenantDetails = contacts.find(({\n        id\n      }) => id === contactFilter.id);\n      printInvoice(tenantDetails, filteredChargeItems.filter(({\n        id\n      }) => selected.includes(id)));\n    },\n    startIcon: /*#__PURE__*/React.createElement(PrintIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 40\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 25\n    }\n  }, \"Print Invoice\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(PrintArrayToPdf, {\n    disabled: !selected.length,\n    reportName: 'Tenants Outstanding Balances Data',\n    reportTitle: `Tenants Outstanding Balances Records`,\n    headCells: headCells,\n    dataToPrint: filteredChargeItems.filter(({\n      id\n    }) => selected.includes(id)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ExportToExcelBtn, {\n    disabled: !selected.length,\n    reportName: `Tenants Outstanding Balances Records`,\n    reportTitle: 'Tenants Outstanding Balances Data',\n    headCells: headCells,\n    dataToPrint: filteredChargeItems.filter(({\n      id\n    }) => selected.includes(id)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    border: 1,\n    borderRadius: \"borderRadius\",\n    borderColor: \"grey.400\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    id: \"contactSearchForm\",\n    onSubmit: handleSearchFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"center\",\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"column\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"row\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 4,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    select: true,\n    id: \"period_filter\",\n    name: \"period_filter\",\n    label: \"Period\",\n    value: periodFilter,\n    onChange: event => {\n      setPeriodFilter(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 49\n    }\n  }, PERIOD_FILTER_OPTIONS.map((filterOption, index) => /*#__PURE__*/React.createElement(MenuItem, {\n    key: index,\n    value: filterOption.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 57\n    }\n  }, filterOption.text)))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    xs: 12,\n    md: 8,\n    direction: \"row\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    type: \"date\",\n    id: \"from_date_filter\",\n    name: \"from_date_filter\",\n    label: \"From Date\",\n    value: fromDateFilter,\n    onChange: event => {\n      setFromDateFilter(event.target.value);\n    },\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 53\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    type: \"date\",\n    name: \"to_date_filter\",\n    label: \"To Date\",\n    id: \"to_date_filter\",\n    onChange: event => {\n      setToDateFilter(event.target.value);\n    },\n    value: toDateFilter,\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 53\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"row\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    select: true,\n    variant: \"outlined\",\n    name: \"property_filter\",\n    label: \"Property\",\n    id: \"property_filter\",\n    onChange: event => {\n      setPropertyFilter(event.target.value);\n    },\n    value: propertyFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    key: \"all\",\n    value: \"all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 53\n    }\n  }, \"All\"), properties.map((property, index) => /*#__PURE__*/React.createElement(MenuItem, {\n    key: index,\n    value: property.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 61\n    }\n  }, property.ref)))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    xs: 12,\n    md: 8,\n    direction: \"row\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    select: true,\n    variant: \"outlined\",\n    name: \"chargeType\",\n    label: \"Charge Type\",\n    id: \"chargeType\",\n    onChange: event => {\n      setChargeTypeFilter(event.target.value);\n    },\n    value: chargeType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 53\n    }\n  }, CHARGE_TYPES.map((charge_type, index) => /*#__PURE__*/React.createElement(MenuItem, {\n    key: index,\n    value: charge_type.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 65\n    }\n  }, charge_type.label)))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    id: \"contact_filter\",\n    options: contacts,\n    getOptionSelected: (option, value) => option.id === value.id,\n    name: \"contact_filter\",\n    defaultValue: \"\",\n    onChange: (event, newValue) => {\n      setContactFilter(newValue);\n    },\n    value: contactFilter,\n    getOptionLabel: tenant => tenant ? `${tenant.first_name} ${tenant.last_name}` : '',\n    style: {\n      width: \"100%\"\n    },\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"Tenant\",\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 82\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 53\n    }\n  }))))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    item: true,\n    justify: \"flex-end\",\n    alignItems: \"center\",\n    direction: \"row\",\n    key: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: event => handleSearchFormSubmit(event),\n    type: \"submit\",\n    form: \"contactSearchForm\",\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"medium\",\n    startIcon: /*#__PURE__*/React.createElement(SearchIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 60\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 45\n    }\n  }, \"SEARCH\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: event => resetSearchForm(event),\n    type: \"reset\",\n    form: \"contactSearchForm\",\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"medium\",\n    startIcon: /*#__PURE__*/React.createElement(UndoIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 60\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 45\n    }\n  }, \"RESET\")))))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    border: 1,\n    borderRadius: \"borderRadius\",\n    borderColor: \"grey.400\",\n    className: classes.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 41\n    }\n  }, \"Total Charges: \", currencyFormatter.format(totalChargesAmount))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 41\n    }\n  }, \"Total Charges: \", totalNumOfCharges))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 41\n    }\n  }, \"Total  Payments: \", currencyFormatter.format(totalPaymentsAmount))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 41\n    }\n  }, \"Charges With Payments: \", chargesWithPayments))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 41\n    }\n  }, \"Outstanding Balances: \", currencyFormatter.format(totalChargesAmount - totalPaymentsAmount))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 41\n    }\n  }, \"Total Credit Issued: \", totalCreditAmount))))))), addPaymentToChargeModalState ? /*#__PURE__*/React.createElement(PaymentInputForm, {\n    open: addPaymentToChargeModalState,\n    chargeToAddPaymentTo: tenantChargesItems.find(({\n      id\n    }) => selected.includes(id)) || {},\n    handleClose: toggleAddPaymentToChargeModal,\n    handleItemSubmit: handleItemSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 25\n    }\n  }) : null, addCreditNoteToChargeModalState ? /*#__PURE__*/React.createElement(CreditNoteInputForm, {\n    open: addCreditNoteToChargeModalState,\n    chargeToAddCreditNote: tenantChargesItems.find(({\n      id\n    }) => selected.includes(id)) || {},\n    handleClose: toggleAddCreditNoteToChargeModal,\n    handleItemSubmit: handleItemSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 25\n    }\n  }) : null, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CommonTable, {\n    selected: selected,\n    setSelected: setSelected,\n    rows: filteredChargeItems,\n    headCells: headCells,\n    noDetailsCol: true,\n    noEditCol: true,\n    noDeleteCol: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 25\n    }\n  })))));\n};\n\nconst mapStateToProps = state => {\n  console.log(state.creditNotes);\n  return {\n    rentalPayments: state.rentalPayments,\n    rentalCharges: state.rentalCharges.map(charge => {\n      const tenant = state.contacts.find(contact => contact.id === charge.tenant_id) || {};\n      const unitWithCharge = state.propertyUnits.find(({\n        id\n      }) => id === charge.unit_id) || {};\n      const chargeDetails = {};\n      chargeDetails.tenant_name = `${tenant.first_name} ${tenant.last_name}`;\n      chargeDetails.tenant_id_number = tenant.id_number;\n      chargeDetails.unit_ref = unitWithCharge.ref; //get payments with this charge id\n\n      const chargePayments = state.rentalPayments.filter(payment => payment.charge_id === charge.id);\n      chargeDetails.payed_status = chargePayments.length ? true : false;\n      const payed_amount = chargePayments.reduce((total, currentValue) => {\n        return total + parseFloat(currentValue.payment_amount) || 0;\n      }, 0);\n      chargeDetails.payed_amount = payed_amount; //get all credit notes issued under this charge\n\n      const chargeCreditNotes = state.creditNotes.filter(creditNote => creditNote.charge_id === charge.id);\n      const totalCreditNoteAmounts = chargeCreditNotes.reduce((total, currentValue) => {\n        return total + parseFloat(currentValue.credit_amount) || 0;\n      }, 0); //get total of all credit notes issued\n\n      chargeDetails.total_credit_amounts = totalCreditNoteAmounts; //get charge balance by subtracting payments + total credits from charge amount\n\n      chargeDetails.balance = parseFloat(charge.charge_amount) - payed_amount;\n      chargeDetails.balance_after_credits = parseFloat(charge.charge_amount) - (payed_amount + totalCreditNoteAmounts);\n      return Object.assign({}, charge, chargeDetails);\n    }).filter(charge => charge.balance > 0).sort((charge1, charge2) => parse(charge2.charge_date, 'yyyy-MM-dd', new Date()) - parse(charge1.charge_date, 'yyyy-MM-dd', new Date())),\n    contacts: state.contacts,\n    properties: state.properties\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleItemSubmit: (item, url) => dispatch(handleItemFormSubmit(item, url))\n  };\n};\n\nTenantChargesStatementPage = connect(mapStateToProps, mapDispatchToProps)(TenantChargesStatementPage);\nexport default withRouter(TenantChargesStatementPage);","map":{"version":3,"sources":["/home/brianmuciri/Projects/farm-ledger-ld/src/Routes/OutstandingBalances.js"],"names":["React","useEffect","useState","Layout","PageHeading","Typography","Grid","MenuItem","Button","TextField","Box","SearchIcon","UndoIcon","AddIcon","PrintIcon","ExportToExcelBtn","PrintArrayToPdf","CommonTable","commonStyles","connect","withRouter","Autocomplete","currencyFormatter","getTransactionsFilterOptions","getStartEndDatesForPeriod","parse","isWithinInterval","printInvoice","PaymentInputForm","CreditNoteInputForm","handleItemFormSubmit","PERIOD_FILTER_OPTIONS","headCells","id","numeric","disablePadding","label","TenantChargesStatementPage","properties","contacts","rentalCharges","handleItemSubmit","classes","tenantChargesItems","setTenantChargesItems","filteredChargeItems","setFilteredChargeItems","chargeType","setChargeTypeFilter","periodFilter","setPeriodFilter","fromDateFilter","setFromDateFilter","toDateFilter","setToDateFilter","contactFilter","setContactFilter","propertyFilter","setPropertyFilter","addPaymentToChargeModalState","setAddPaymentToChargesModalState","addCreditNoteToChargeModalState","setAddCreditNoteToChargeModalState","selected","setSelected","CHARGE_TYPES","Array","from","Set","map","chargeItem","JSON","stringify","charge_label","value","charge_type","filterChargesByCriteria","totalNumOfCharges","length","totalChargesAmount","reduce","total","currentValue","parseFloat","charge_amount","chargesWithPayments","filter","charge","payed_status","totalPaymentsAmount","payed_amount","totalCreditAmount","total_credit_amounts","chargesToFilter","filteredStatements","startDate","endDate","chargeItemDate","charge_date","Date","start","end","property_id","tenant_id","toggleAddPaymentToChargeModal","toggleAddCreditNoteToChargeModal","handleSearchFormSubmit","event","preventDefault","resetSearchForm","tenantDetails","find","includes","form","target","filterOption","index","text","shrink","property","ref","option","newValue","tenant","first_name","last_name","width","params","format","mapStateToProps","state","console","log","creditNotes","rentalPayments","contact","unitWithCharge","propertyUnits","unit_id","chargeDetails","tenant_name","tenant_id_number","id_number","unit_ref","chargePayments","payment","charge_id","payment_amount","chargeCreditNotes","creditNote","totalCreditNoteAmounts","credit_amount","balance","balance_after_credits","Object","assign","sort","charge1","charge2","mapDispatchToProps","dispatch","item","url"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Layout from \"../components/PrivateLayout\";\nimport PageHeading from \"../components/PageHeading\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Box from \"@material-ui/core/Box\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport PrintIcon from \"@material-ui/icons/Print\";\nimport ExportToExcelBtn from \"../components/ExportToExcelBtn\";\nimport PrintArrayToPdf from \"../components/PrintArrayToPdfBtn\";\nimport CommonTable from \"../components/table/commonTable\";\nimport { commonStyles } from '../components/commonStyles'\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { currencyFormatter, getTransactionsFilterOptions, getStartEndDatesForPeriod } from \"../assets/commonAssets\";\nimport { parse, isWithinInterval } from \"date-fns\";\nimport { printInvoice } from \"../assets/PrintingHelper\";\nimport PaymentInputForm from \"../components/payments/PaymentInputForm\";\nimport CreditNoteInputForm from \"../components/charges/AddCreditNote\";\nimport { handleItemFormSubmit } from '../actions/actions'\n\n\nconst PERIOD_FILTER_OPTIONS = getTransactionsFilterOptions()\n\nconst headCells = [\n    { id: \"tenant_name\", numeric: false, disablePadding: true, label: \"Tenant\", },\n    { id: \"tenant_id_number\", numeric: false, disablePadding: true, label: \"Tenant ID\", },\n    { id: \"unit_ref\", numeric: false, disablePadding: true, label: \"Unit Ref/Number\", },\n    { id: \"charge_label\", numeric: false, disablePadding: true, label: \"Charge Name/Type\", },\n    { id: \"charge_date\", numeric: false, disablePadding: true, label: \"Charge Date\", },\n    { id: \"charge_amount\", numeric: true, disablePadding: true, label: \"Charge Amount\", },\n    { id: \"payed_status\", numeric: false, disablePadding: true, label: \"Payments Made\" },\n    { id: \"payed_amount\", numeric: true, disablePadding: true, label: \"Total Amounts Paid\" },\n    { id: \"balance\", numeric: false, disablePadding: true, label: \"Balance After Payments\" },\n    { id: \"total_credit_amounts\", numeric: true, disablePadding: true, label: \"Total Credit Amount\" },\n    { id: \"balance_after_credits\", numeric: false, disablePadding: true, label: \"Balance After Credit\" },\n\n];\n\nlet TenantChargesStatementPage = ({\n    properties,\n    contacts,\n    rentalCharges,\n    handleItemSubmit\n}) => {\n    const classes = commonStyles()\n    let [tenantChargesItems, setTenantChargesItems] = useState([]);\n    let [filteredChargeItems, setFilteredChargeItems] = useState([]);\n    let [chargeType, setChargeTypeFilter] = useState(\"\");\n    let [periodFilter, setPeriodFilter] = useState('month-to-date');\n    let [fromDateFilter, setFromDateFilter] = useState('');\n    let [toDateFilter, setToDateFilter] = useState(\"\");\n    let [contactFilter, setContactFilter] = useState(null);\n    let [propertyFilter, setPropertyFilter] = useState(\"all\");\n    const [addPaymentToChargeModalState, setAddPaymentToChargesModalState] = useState(false);\n    const [addCreditNoteToChargeModalState, setAddCreditNoteToChargeModalState] = useState(false);\n\n    const [selected, setSelected] = useState([]);\n\n    const CHARGE_TYPES = Array.from(new Set(filteredChargeItems\n        .map((chargeItem) => (JSON.stringify({ label: chargeItem.charge_label, value: chargeItem.charge_type })))))\n        .map(chargeType => JSON.parse(chargeType))\n\n    useEffect(() => {\n        setTenantChargesItems(rentalCharges);\n        setFilteredChargeItems(filterChargesByCriteria(rentalCharges));\n    }, [rentalCharges]);\n\n    const totalNumOfCharges = filteredChargeItems.length\n\n    const totalChargesAmount = filteredChargeItems\n        .reduce((total, currentValue) => {\n            return total + parseFloat(currentValue.charge_amount) || 0\n        }, 0)\n\n    const chargesWithPayments = filteredChargeItems.filter(charge => charge.payed_status === true).length\n\n    const totalPaymentsAmount = filteredChargeItems\n        .reduce((total, currentValue) => {\n            return total + parseFloat(currentValue.payed_amount) || 0\n        }, 0)\n\n    const totalCreditAmount = filteredChargeItems\n        .reduce((total, currentValue) => {\n            return total + parseFloat(currentValue.total_credit_amounts) || 0\n        }, 0)\n\n    const filterChargesByCriteria = (chargesToFilter) => {\n        let filteredStatements = chargesToFilter\n        if (periodFilter) {\n            const { startDate, endDate } = getStartEndDatesForPeriod(periodFilter)\n            filteredStatements = filteredStatements.filter((chargeItem) => {\n                const chargeItemDate = parse(chargeItem.charge_date, 'yyyy-MM-dd', new Date())\n                return isWithinInterval(chargeItemDate, { start: startDate, end: endDate })\n            })\n        }\n        filteredStatements = filteredStatements\n            .filter(({ charge_type, charge_date, property_id, tenant_id }) =>\n                (!fromDateFilter ? true : charge_date >= fromDateFilter)\n                && (!toDateFilter ? true : charge_date <= toDateFilter)\n                && (propertyFilter === \"all\" ? true : property_id === propertyFilter)\n                && (!chargeType ? true : charge_type === chargeType.value)\n                && (!contactFilter ? true : tenant_id === contactFilter.id)\n            )\n        return filteredStatements;\n    }\n\n    const toggleAddPaymentToChargeModal = () => {\n        setAddPaymentToChargesModalState(!addPaymentToChargeModalState)\n    }\n\n    const toggleAddCreditNoteToChargeModal = () => {\n        setAddCreditNoteToChargeModalState(!addCreditNoteToChargeModalState)\n    }\n\n    const handleSearchFormSubmit = (event) => {\n        event.preventDefault();\n        //filter the rentalCharges according to the search criteria here\n        setFilteredChargeItems(filterChargesByCriteria(tenantChargesItems));\n        setSelected([]);\n    };\n\n\n    const resetSearchForm = (event) => {\n        event.preventDefault();\n        setChargeTypeFilter(\"\");\n        setPeriodFilter(\"month-to-date\");\n        setFromDateFilter(\"\");\n        setToDateFilter(\"\");\n        setContactFilter(null)\n        setPropertyFilter(\"all\")\n    };\n\n    return (\n        <Layout pageTitle=\"Outstanding Balances\">\n            <Grid\n                container\n                spacing={2}\n                justify=\"center\" direction=\"column\"\n            >\n                <Grid item key={2}>\n                    <PageHeading text={\"Outstanding Balances\"} />\n                </Grid>\n                <Grid\n                    container\n                    spacing={2}\n                    item\n                    alignItems=\"center\"\n                    direction=\"row\"\n                    key={1}\n                >\n                    <Grid item>\n                        <Button\n                            type=\"button\"\n                            color=\"primary\"\n                            variant=\"contained\"\n                            size=\"medium\"\n                            disabled={selected.length !== 1}\n                            startIcon={<AddIcon />}\n                            onClick={() => toggleAddPaymentToChargeModal()}\n                        >\n                            Receive Payment\n                        </Button>\n                    </Grid>\n                    <Grid item>\n                        <Button\n                            type=\"button\"\n                            color=\"primary\"\n                            variant=\"contained\"\n                            size=\"medium\"\n                            disabled={selected.length !== 1}\n                            startIcon={<AddIcon />}\n                            onClick={() => toggleAddCreditNoteToChargeModal()}\n                        >\n                            Add Credit Note\n                        </Button>\n                    </Grid>\n                    <Grid item>\n                        <Button\n                            aria-label=\"Print Invoice\"\n                            variant=\"contained\"\n                            size=\"medium\"\n                            color=\"primary\"\n                            disabled={!contactFilter || !selected.length}\n                            onClick={() => {\n                                const tenantDetails = contacts.find(({ id }) => id === contactFilter.id)\n                                printInvoice(\n                                    tenantDetails,\n                                    filteredChargeItems.filter(({ id }) => selected.includes(id))\n                                )\n                            }}\n                            startIcon={<PrintIcon />}>\n                            Print Invoice\n                        </Button>\n                    </Grid>\n                    <Grid item>\n                        <PrintArrayToPdf\n                            disabled={!selected.length}\n                            reportName={'Tenants Outstanding Balances Data'}\n                            reportTitle={`Tenants Outstanding Balances Records`}\n                            headCells={headCells}\n                            dataToPrint={filteredChargeItems.filter(({ id }) => selected.includes(id))}\n                        />\n                    </Grid>\n                    <Grid item>\n                        <ExportToExcelBtn\n                            disabled={!selected.length}\n                            reportName={`Tenants Outstanding Balances Records`}\n                            reportTitle={'Tenants Outstanding Balances Data'}\n                            headCells={headCells}\n                            dataToPrint={filteredChargeItems.filter(({ id }) => selected.includes(id))}\n                        />\n                    </Grid>\n                </Grid>\n                <Grid item container>\n                    <Grid item sm={12}>\n                        <Box\n                            border={1}\n                            borderRadius=\"borderRadius\"\n                            borderColor=\"grey.400\"\n                        >\n                            <form\n                                className={classes.form}\n                                id=\"contactSearchForm\"\n                                onSubmit={handleSearchFormSubmit}\n                            >\n                                <Grid\n                                    container\n                                    spacing={2}\n                                    justify=\"center\"\n                                    direction=\"column\"\n                                >\n                                    <Grid item container direction=\"column\" spacing={2}>\n                                        <Grid item container direction=\"row\" spacing={2}>\n                                            <Grid item md={4} xs={12}>\n                                                <TextField\n                                                    fullWidth\n                                                    variant=\"outlined\"\n                                                    select\n                                                    id=\"period_filter\"\n                                                    name=\"period_filter\"\n                                                    label=\"Period\"\n                                                    value={periodFilter}\n                                                    onChange={(event) => {\n                                                        setPeriodFilter(\n                                                            event.target.value\n                                                        );\n                                                    }}\n                                                >\n                                                    {PERIOD_FILTER_OPTIONS.map((filterOption, index) => (\n                                                        <MenuItem\n                                                            key={index}\n                                                            value={filterOption.id}\n                                                        >\n                                                            {filterOption.text}\n                                                        </MenuItem>\n                                                    ))}\n                                                </TextField>\n                                            </Grid>\n                                            <Grid item container xs={12} md={8} direction=\"row\" spacing={2}>\n                                                <Grid item xs={12} md={6}>\n                                                    <TextField\n                                                        fullWidth\n                                                        variant=\"outlined\"\n                                                        type=\"date\"\n                                                        id=\"from_date_filter\"\n                                                        name=\"from_date_filter\"\n                                                        label=\"From Date\"\n                                                        value={fromDateFilter}\n                                                        onChange={(event) => {\n                                                            setFromDateFilter(\n                                                                event.target.value\n                                                            );\n                                                        }}\n                                                        InputLabelProps={{ shrink: true }}\n                                                    />\n                                                </Grid>\n                                                <Grid item xs={12} md={6}>\n                                                    <TextField\n                                                        fullWidth\n                                                        variant=\"outlined\"\n                                                        type=\"date\"\n                                                        name=\"to_date_filter\"\n                                                        label=\"To Date\"\n                                                        id=\"to_date_filter\"\n                                                        onChange={(event) => {\n                                                            setToDateFilter(event.target.value);\n                                                        }}\n                                                        value={toDateFilter}\n                                                        InputLabelProps={{ shrink: true }}\n                                                    />\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                        <Grid item container direction=\"row\" spacing={2}>\n                                            <Grid item xs={12} md={4}>\n                                                <TextField\n                                                    fullWidth\n                                                    select\n                                                    variant=\"outlined\"\n                                                    name=\"property_filter\"\n                                                    label=\"Property\"\n                                                    id=\"property_filter\"\n                                                    onChange={(event) => {\n                                                        setPropertyFilter(\n                                                            event.target.value\n                                                        );\n                                                    }}\n                                                    value={propertyFilter}\n                                                >\n                                                    <MenuItem key={\"all\"} value={\"all\"}>All</MenuItem>\n                                                    {properties.map(\n                                                        (property, index) => (\n                                                            <MenuItem\n                                                                key={index}\n                                                                value={property.id}\n                                                            >\n                                                                {property.ref}\n                                                            </MenuItem>\n                                                        )\n                                                    )}\n                                                </TextField>\n                                            </Grid>\n                                            <Grid item container xs={12} md={8} direction=\"row\" spacing={2}>\n                                                <Grid item md={6} xs={12}>\n                                                    <TextField\n                                                        fullWidth\n                                                        select\n                                                        variant=\"outlined\"\n                                                        name=\"chargeType\"\n                                                        label=\"Charge Type\"\n                                                        id=\"chargeType\"\n                                                        onChange={(event) => {\n                                                            setChargeTypeFilter(\n                                                                event.target.value\n                                                            );\n                                                        }}\n                                                        value={chargeType}\n                                                    >\n                                                        {CHARGE_TYPES.map(\n                                                            (charge_type, index) => (\n                                                                <MenuItem\n                                                                    key={index}\n                                                                    value={charge_type.value}\n                                                                >\n                                                                    {charge_type.label}\n                                                                </MenuItem>\n                                                            )\n                                                        )}\n                                                    </TextField>\n                                                </Grid>\n                                                <Grid item xs={12} md={6}>\n                                                    <Autocomplete\n                                                        id=\"contact_filter\"\n                                                        options={contacts}\n                                                        getOptionSelected={(option, value) => option.id === value.id}\n                                                        name=\"contact_filter\"\n                                                        defaultValue=\"\"\n                                                        onChange={(event, newValue) => {\n                                                            setContactFilter(newValue);\n                                                        }}\n                                                        value={contactFilter}\n                                                        getOptionLabel={(tenant) => tenant ? `${tenant.first_name} ${tenant.last_name}` : ''}\n                                                        style={{ width: \"100%\" }}\n                                                        renderInput={(params) => <TextField {...params} label=\"Tenant\" variant=\"outlined\" />}\n                                                    />\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid\n                                        container\n                                        spacing={2}\n                                        item\n                                        justify=\"flex-end\"\n                                        alignItems=\"center\"\n                                        direction=\"row\"\n                                        key={1}\n                                    >\n                                        <Grid item>\n                                            <Button\n                                                onClick={(event) => handleSearchFormSubmit(event)}\n                                                type=\"submit\"\n                                                form=\"contactSearchForm\"\n                                                color=\"primary\"\n                                                variant=\"contained\"\n                                                size=\"medium\"\n                                                startIcon={<SearchIcon />}\n                                            >\n                                                SEARCH\n                                    </Button>\n                                        </Grid>\n                                        <Grid item>\n                                            <Button\n                                                onClick={(event) => resetSearchForm(event)}\n                                                type=\"reset\"\n                                                form=\"contactSearchForm\"\n                                                color=\"primary\"\n                                                variant=\"contained\"\n                                                size=\"medium\"\n                                                startIcon={<UndoIcon />}\n                                            >\n                                                RESET\n                                    </Button>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </form>\n                        </Box>\n                    </Grid>\n                </Grid>\n                <Grid item container>\n                    <Grid item sm={12}>\n                        <Box border={1} borderRadius=\"borderRadius\" borderColor=\"grey.400\" className={classes.form}>\n                            <Grid container direction=\"row\" spacing={1}>\n                                <Grid item container md={4}>\n                                    <Grid item sm={12}>\n                                        <Typography variant=\"subtitle1\" align=\"center\">\n                                            Total Charges: {currencyFormatter.format(totalChargesAmount)}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item sm={12}>\n                                        <Typography variant=\"subtitle1\" align=\"center\">\n                                            Total Charges: {totalNumOfCharges}\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                                <Grid item container md={4}>\n                                    <Grid item sm={12}>\n                                        <Typography variant=\"subtitle1\" align=\"center\">\n                                            Total  Payments: {currencyFormatter.format(totalPaymentsAmount)}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item sm={12}>\n                                        <Typography variant=\"subtitle1\" align=\"center\">\n                                            Charges With Payments: {chargesWithPayments}\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                                <Grid item container md={4}>\n                                    <Grid item sm={12}>\n                                        <Typography variant=\"subtitle1\" align=\"center\">\n                                            Outstanding Balances: {currencyFormatter.format((totalChargesAmount - totalPaymentsAmount))}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item sm={12}>\n                                        <Typography variant=\"subtitle1\" align=\"center\">\n                                            Total Credit Issued: {totalCreditAmount}\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Box>\n                    </Grid>\n                </Grid>\n                {\n                    addPaymentToChargeModalState ?\n                        <PaymentInputForm open={addPaymentToChargeModalState}\n                            chargeToAddPaymentTo={tenantChargesItems.find(({ id }) => selected.includes(id)) || {}}\n                            handleClose={toggleAddPaymentToChargeModal}\n                            handleItemSubmit={handleItemSubmit} /> : null\n                }\n                {\n                    addCreditNoteToChargeModalState ?\n                        <CreditNoteInputForm open={addCreditNoteToChargeModalState}\n                            chargeToAddCreditNote={tenantChargesItems.find(({ id }) => selected.includes(id)) || {}}\n                            handleClose={toggleAddCreditNoteToChargeModal}\n                            handleItemSubmit={handleItemSubmit} /> : null\n                }\n                <Grid item container>\n                    <Grid item sm={12}>\n                        <CommonTable\n                            selected={selected}\n                            setSelected={setSelected}\n                            rows={filteredChargeItems}\n                            headCells={headCells}\n                            noDetailsCol={true}\n                            noEditCol={true}\n                            noDeleteCol={true}\n                        />\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Layout >\n    );\n};\n\nconst mapStateToProps = (state) => {\n    console.log(state.creditNotes)\n    return {\n        rentalPayments: state.rentalPayments,\n        rentalCharges: state.rentalCharges\n            .map((charge) => {\n                const tenant = state.contacts.find((contact) => contact.id === charge.tenant_id) || {};\n                const unitWithCharge = state.propertyUnits.find(({ id }) => id === charge.unit_id) || {};\n                const chargeDetails = {}\n                chargeDetails.tenant_name = `${tenant.first_name} ${tenant.last_name}`\n                chargeDetails.tenant_id_number = tenant.id_number\n                chargeDetails.unit_ref = unitWithCharge.ref\n                //get payments with this charge id\n                const chargePayments = state.rentalPayments.filter((payment) => payment.charge_id === charge.id)\n                chargeDetails.payed_status = chargePayments.length ? true : false;\n                const payed_amount = chargePayments.reduce((total, currentValue) => {\n                    return total + parseFloat(currentValue.payment_amount) || 0\n                }, 0)\n                chargeDetails.payed_amount = payed_amount\n                //get all credit notes issued under this charge\n                const chargeCreditNotes = state.creditNotes.filter((creditNote) => creditNote.charge_id === charge.id)\n                const totalCreditNoteAmounts = chargeCreditNotes.reduce((total, currentValue) => {\n                    return total + parseFloat(currentValue.credit_amount) || 0\n                }, 0)\n                //get total of all credit notes issued\n                chargeDetails.total_credit_amounts = totalCreditNoteAmounts\n                //get charge balance by subtracting payments + total credits from charge amount\n                chargeDetails.balance = parseFloat(charge.charge_amount) - payed_amount\n                chargeDetails.balance_after_credits = parseFloat(charge.charge_amount) - (payed_amount + totalCreditNoteAmounts)\n                return Object.assign({}, charge, chargeDetails);\n            })\n            .filter((charge) => charge.balance > 0)\n            .sort((charge1, charge2) => parse(charge2.charge_date, 'yyyy-MM-dd', new Date()) -\n                parse(charge1.charge_date, 'yyyy-MM-dd', new Date())),\n        contacts: state.contacts,\n        properties: state.properties,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleItemSubmit: (item, url) => dispatch(handleItemFormSubmit(item, url)),\n    }\n};\nTenantChargesStatementPage = connect(mapStateToProps, mapDispatchToProps)(TenantChargesStatementPage);\n\nexport default withRouter(TenantChargesStatementPage);\n"]},"metadata":{},"sourceType":"module"}