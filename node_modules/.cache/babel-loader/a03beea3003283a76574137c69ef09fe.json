{"ast":null,"code":"var _jsxFileName = \"/home/brianmuciri/Projects/farm-ledger-ld/src/Routes/OtherCharges.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Layout from \"../components/PrivateLayout\";\nimport PageHeading from \"../components/PageHeading\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Box from \"@material-ui/core/Box\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { Link } from \"react-router-dom\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport ExportToExcelBtn from \"../components/ExportToExcelBtn\";\nimport PrintArrayToPdf from \"../components/PrintArrayToPdfBtn\";\nimport CommonTable from \"../components/table/commonTable\";\nimport { handleItemFormSubmit, handleDelete } from \"../actions/actions\";\nimport { commonStyles } from '../components/commonStyles';\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport AddPaymentToChargesModal from \"../components/charges/AddPaymentToChargesModal\";\nimport { getTransactionsFilterOptions, currencyFormatter, getStartEndDatesForPeriod } from \"../assets/commonAssets\";\nimport { parse, isWithinInterval } from \"date-fns\";\nimport ChargeEditForm from \"../components/charges/ChargeEditForm\";\nimport PaymentInputForm from \"../components/payments/PaymentInputForm\";\nconst TRANSACTIONS_FILTER_OPTIONS = getTransactionsFilterOptions();\nconst headCells = [{\n  id: \"tenant_name\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Tenant Name\"\n}, {\n  id: \"unit_ref\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Unit Ref/Number\"\n}, {\n  id: \"charge_label\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Charge Name/Type\"\n}, {\n  id: \"charge_date\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Charge Date\"\n}, {\n  id: \"charge_amount\",\n  numeric: true,\n  disablePadding: false,\n  label: \"Charge Amount\"\n}, {\n  id: \"payed_status\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Payments Made\"\n}, {\n  id: \"payed_amount\",\n  numeric: true,\n  disablePadding: false,\n  label: \"Total Amounts Paid\"\n}, {\n  id: \"balance\",\n  numeric: true,\n  disablePadding: false,\n  label: \"Balance\"\n}, {\n  id: \"edit\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Edit\"\n}, {\n  id: \"delete\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Delete\"\n}];\n\nlet TenantChargesStatementPage = ({\n  match,\n  properties,\n  contacts,\n  rentalPayments,\n  rentalCharges,\n  handleItemSubmit,\n  handleItemDelete\n}) => {\n  const classes = commonStyles();\n  const [allNonRentCharges, setAllNonRentCharges] = useState([]);\n  const [filteredAllNonRentCharges, setFilteredAllNonRentCharges] = useState([]);\n  const [chargeType, setChargeTypeFilter] = useState(\"\");\n  const [fromDateFilter, setFromDateFilter] = useState('');\n  const [toDateFilter, setToDateFilter] = useState(\"\");\n  const [periodFilter, setPeriodFilter] = useState(\"month-to-date\");\n  const [contactFilter, setContactFilter] = useState(null);\n  const [propertyFilter, setPropertyFilter] = useState(\"all\");\n  const [addFullPaymentsToChargesModalState, setAddFullPaymentsToChargesModalState] = useState(false);\n  const [editChargeModalState, setEditChargeModalState] = useState(false);\n  const [addPaymentToChargeModalState, setAddPaymentToChargesModalState] = useState(false);\n  const [selected, setSelected] = useState([]);\n  const [chargeToEditId, setChargeToEditId] = useState();\n  const CHARGE_TYPES = Array.from(new Set(allNonRentCharges.map(chargeItem => JSON.stringify({\n    label: chargeItem.charge_label,\n    value: chargeItem.charge_type\n  })))).map(chargeType => JSON.parse(chargeType));\n\n  const filterChargesByCriteria = chargesToFilter => {\n    let filteredStatements = chargesToFilter;\n\n    if (periodFilter) {\n      const {\n        startDate,\n        endDate\n      } = getStartEndDatesForPeriod(periodFilter);\n      filteredStatements = filteredStatements.filter(chargeItem => {\n        const chargeItemDate = parse(chargeItem.charge_date, 'yyyy-MM-dd', new Date());\n        return isWithinInterval(chargeItemDate, {\n          start: startDate,\n          end: endDate\n        });\n      });\n    }\n\n    filteredStatements = filteredStatements.filter(({\n      charge_date,\n      property_id,\n      tenant_id,\n      charge_type\n    }) => (!fromDateFilter ? true : charge_date >= fromDateFilter) && (!toDateFilter ? true : charge_date <= toDateFilter) && (propertyFilter === \"all\" ? true : property_id === propertyFilter) && (!chargeType ? true : charge_type === chargeType.value) && (!contactFilter ? true : tenant_id === contactFilter.id));\n    return filteredStatements;\n  };\n\n  useEffect(() => {\n    setAllNonRentCharges(rentalCharges);\n    setFilteredAllNonRentCharges(filterChargesByCriteria(rentalCharges));\n  }, [rentalCharges]);\n  const totalNumOfCharges = filteredAllNonRentCharges.length;\n  const totalChargesAmount = filteredAllNonRentCharges.reduce((total, currentValue) => {\n    return total + parseFloat(currentValue.charge_amount) || 0;\n  }, 0);\n  const chargesWithPayments = filteredAllNonRentCharges.filter(charge => charge.payed_status === true).length;\n  const totalPaymentsAmount = filteredAllNonRentCharges.reduce((total, currentValue) => {\n    return total + parseFloat(currentValue.payed_amount) || 0;\n  }, 0);\n\n  const toggleAddFullPaymentsToChargesModalState = () => {\n    setAddFullPaymentsToChargesModalState(!addFullPaymentsToChargesModalState);\n  };\n\n  const toggleAddPaymentToChargeModal = () => {\n    setAddPaymentToChargesModalState(!addPaymentToChargeModalState);\n  };\n\n  const toggleEditChargeModalState = () => {\n    setEditChargeModalState(!editChargeModalState);\n  };\n\n  const handleSearchFormSubmit = event => {\n    event.preventDefault(); //filter the rentalCharges according to the search criteria here\n\n    setFilteredAllNonRentCharges(filterChargesByCriteria(allNonRentCharges));\n  };\n\n  const handleChargeDelete = async (chargeId, url) => {\n    try {\n      //delete all payments for this charge\n      rentalPayments.filter(payment => payment.charge_id === chargeId).forEach(async payment => {\n        await handleItemDelete(payment.id, \"charge-payments\");\n      }); //finally delete the charge itself\n\n      await handleItemDelete(chargeId, url);\n    } catch (error) {\n      console.log(\"Error deleting charge => \", error);\n    }\n  };\n\n  const resetSearchForm = event => {\n    event.preventDefault();\n    setChargeTypeFilter(\"\");\n    setFromDateFilter(\"\");\n    setToDateFilter(\"\");\n    setContactFilter(null);\n    setPeriodFilter(\"month-to-date\");\n    setPropertyFilter(\"all\");\n  };\n\n  return /*#__PURE__*/React.createElement(Layout, {\n    pageTitle: \"Other Charges\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"center\",\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    key: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PageHeading, {\n    text: \"Other Charges\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    item: true,\n    alignItems: \"center\",\n    direction: \"row\",\n    key: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"medium\",\n    startIcon: /*#__PURE__*/React.createElement(AddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 40\n      }\n    }),\n    disabled: !selected.length,\n    onClick: () => toggleAddFullPaymentsToChargesModalState(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 25\n    }\n  }, \"Receive Full Payments\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"medium\",\n    disabled: selected.length !== 1,\n    startIcon: /*#__PURE__*/React.createElement(AddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 40\n      }\n    }),\n    onClick: () => toggleAddPaymentToChargeModal(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 25\n    }\n  }, \"Receive Payment\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"medium\",\n    disabled: selected.length !== 1,\n    startIcon: /*#__PURE__*/React.createElement(AddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 40\n      }\n    }),\n    to: `${match.url}/charge-on-deposit/${selected[0]}/new`,\n    component: Link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 25\n    }\n  }, \"Charge on Deposit\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ExportToExcelBtn, {\n    disabled: !selected.length,\n    reportName: `Tenants Charges Records`,\n    reportTitle: 'Tenant Charges Data',\n    headCells: headCells,\n    dataToPrint: allNonRentCharges.filter(({\n      id\n    }) => selected.includes(id)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(PrintArrayToPdf, {\n    disabled: !selected.length,\n    reportName: 'Tenant Charges Data',\n    reportTitle: `Tenant Charges Records`,\n    headCells: headCells,\n    dataToPrint: allNonRentCharges.filter(({\n      id\n    }) => selected.includes(id)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    border: 1,\n    borderRadius: \"borderRadius\",\n    borderColor: \"grey.400\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    id: \"contactSearchForm\",\n    onSubmit: handleSearchFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"center\",\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"column\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"row\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    xs: 12,\n    md: 6,\n    direction: \"row\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    type: \"date\",\n    id: \"from_date_filter\",\n    name: \"from_date_filter\",\n    label: \"From Date\",\n    value: fromDateFilter,\n    onChange: event => {\n      setFromDateFilter(event.target.value);\n    },\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 53\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    type: \"date\",\n    name: \"to_date_filter\",\n    label: \"To Date\",\n    id: \"to_date_filter\",\n    onChange: event => {\n      setToDateFilter(event.target.value);\n    },\n    value: toDateFilter,\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 53\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    select: true,\n    id: \"period_filter\",\n    name: \"period_filter\",\n    label: \"Period\",\n    value: periodFilter,\n    onChange: event => {\n      setPeriodFilter(event.target.value);\n    },\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 49\n    }\n  }, TRANSACTIONS_FILTER_OPTIONS.map((filterOption, index) => /*#__PURE__*/React.createElement(MenuItem, {\n    key: index,\n    value: filterOption.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 57\n    }\n  }, filterOption.text))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"row\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    select: true,\n    variant: \"outlined\",\n    name: \"property_filter\",\n    label: \"Property\",\n    id: \"property_filter\",\n    onChange: event => {\n      setPropertyFilter(event.target.value);\n    },\n    value: propertyFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    key: \"all\",\n    value: \"all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 53\n    }\n  }, \"All\"), properties.map((property, index) => /*#__PURE__*/React.createElement(MenuItem, {\n    key: index,\n    value: property.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 61\n    }\n  }, property.ref)))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    id: \"contact_filter\",\n    options: contacts,\n    getOptionSelected: (option, value) => option.id === value.id,\n    name: \"contact_filter\",\n    defaultValue: \"\",\n    onChange: (event, newValue) => {\n      setContactFilter(newValue);\n    },\n    value: contactFilter,\n    getOptionLabel: tenant => tenant ? `${tenant.first_name} ${tenant.last_name}` : '',\n    style: {\n      width: \"100%\"\n    },\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"Tenant\",\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 78\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 49\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    id: \"charge_type_filter\",\n    options: CHARGE_TYPES,\n    getOptionSelected: (option, value) => option.value === value.value,\n    name: \"charge_type_filter\",\n    onChange: (event, newValue) => {\n      setChargeTypeFilter(newValue);\n    },\n    value: chargeType,\n    getOptionLabel: charge_type => charge_type ? charge_type.label : '',\n    style: {\n      width: \"100%\"\n    },\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"Charge Type\",\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 78\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 49\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    item: true,\n    justify: \"flex-end\",\n    alignItems: \"center\",\n    direction: \"row\",\n    key: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: event => handleSearchFormSubmit(event),\n    type: \"submit\",\n    form: \"contactSearchForm\",\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"medium\",\n    startIcon: /*#__PURE__*/React.createElement(SearchIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 60\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 45\n    }\n  }, \"SEARCH\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: event => resetSearchForm(event),\n    type: \"reset\",\n    form: \"contactSearchForm\",\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"medium\",\n    startIcon: /*#__PURE__*/React.createElement(UndoIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 60\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 45\n    }\n  }, \"RESET\")))))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    border: 1,\n    borderRadius: \"borderRadius\",\n    borderColor: \"grey.400\",\n    className: classes.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 41\n    }\n  }, \"Total Charges: \", currencyFormatter.format(totalChargesAmount))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 41\n    }\n  }, \"Total Charges: \", totalNumOfCharges))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 41\n    }\n  }, \"Total  Payments: \", currencyFormatter.format(totalPaymentsAmount))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 41\n    }\n  }, \"Charges With Payments: \", chargesWithPayments))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 41\n    }\n  }, \"Outstanding Balances: \", currencyFormatter.format(totalChargesAmount - totalPaymentsAmount))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 41\n    }\n  }, \"Charges Without Payments: \", totalNumOfCharges - chargesWithPayments))))))), addFullPaymentsToChargesModalState ? /*#__PURE__*/React.createElement(AddPaymentToChargesModal, {\n    open: addFullPaymentsToChargesModalState,\n    chargesToAddPayments: rentalCharges.filter(({\n      id\n    }) => selected.includes(id)).filter(({\n      payed_status\n    }) => payed_status === false),\n    handleClose: toggleAddFullPaymentsToChargesModalState,\n    handleItemSubmit: handleItemSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 25\n    }\n  }) : null, editChargeModalState ? /*#__PURE__*/React.createElement(ChargeEditForm, {\n    open: editChargeModalState,\n    chargeToEdit: rentalCharges.find(({\n      id\n    }) => id === chargeToEditId),\n    handleClose: toggleEditChargeModalState,\n    handleItemSubmit: handleItemSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 25\n    }\n  }) : null, addPaymentToChargeModalState ? /*#__PURE__*/React.createElement(PaymentInputForm, {\n    open: addPaymentToChargeModalState,\n    chargeToAddPaymentTo: rentalCharges.find(({\n      id\n    }) => selected.includes(id)),\n    handleClose: toggleAddPaymentToChargeModal,\n    handleItemSubmit: handleItemSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 25\n    }\n  }) : null, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CommonTable, {\n    selected: selected,\n    setSelected: setSelected,\n    rows: filteredAllNonRentCharges,\n    headCells: headCells,\n    noDetailsCol: true,\n    optionalEditHandler: selectedRowIndex => {\n      setChargeToEditId(selectedRowIndex);\n      toggleEditChargeModalState();\n    },\n    deleteUrl: 'transactions-charges',\n    handleDelete: handleChargeDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 25\n    }\n  })))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    rentalPayments: state.rentalPayments.filter(payment => payment.payment_type !== 'rent'),\n    rentalCharges: state.rentalCharges.filter(charge => charge.charge_type !== 'rent').map(charge => {\n      const tenant = state.contacts.find(contact => contact.id === charge.tenant_id) || {};\n      const unitWithCharge = state.propertyUnits.find(({\n        id\n      }) => id === charge.unit_id) || {};\n      const chargeDetails = {};\n      chargeDetails.tenant_name = `${tenant.first_name} ${tenant.last_name}`;\n      chargeDetails.tenant_id_number = tenant.id_number;\n      chargeDetails.unit_ref = unitWithCharge.ref; //get payments with this charge id\n\n      const chargePayments = state.rentalPayments.filter(payment => payment.charge_id === charge.id);\n      chargeDetails.payed_status = chargePayments.length ? true : false;\n      const payed_amount = chargePayments.reduce((total, currentValue) => {\n        return total + parseFloat(currentValue.payment_amount) || 0;\n      }, 0);\n      chargeDetails.payed_amount = payed_amount;\n      chargeDetails.balance = parseFloat(charge.charge_amount) - payed_amount;\n      return Object.assign({}, charge, chargeDetails);\n    }).sort((charge1, charge2) => parse(charge2.charge_date, 'yyyy-MM-dd', new Date()) - parse(charge1.charge_date, 'yyyy-MM-dd', new Date())),\n    contacts: state.contacts,\n    properties: state.properties\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleItemSubmit: (item, url) => dispatch(handleItemFormSubmit(item, url)),\n    handleItemDelete: (itemId, url) => dispatch(handleDelete(itemId, url))\n  };\n};\n\nTenantChargesStatementPage = connect(mapStateToProps, mapDispatchToProps)(TenantChargesStatementPage);\nexport default withRouter(TenantChargesStatementPage);","map":{"version":3,"sources":["/home/brianmuciri/Projects/farm-ledger-ld/src/Routes/OtherCharges.js"],"names":["React","useEffect","useState","Layout","PageHeading","Typography","Grid","MenuItem","Button","TextField","Box","SearchIcon","AddIcon","Link","UndoIcon","ExportToExcelBtn","PrintArrayToPdf","CommonTable","handleItemFormSubmit","handleDelete","commonStyles","connect","withRouter","Autocomplete","AddPaymentToChargesModal","getTransactionsFilterOptions","currencyFormatter","getStartEndDatesForPeriod","parse","isWithinInterval","ChargeEditForm","PaymentInputForm","TRANSACTIONS_FILTER_OPTIONS","headCells","id","numeric","disablePadding","label","TenantChargesStatementPage","match","properties","contacts","rentalPayments","rentalCharges","handleItemSubmit","handleItemDelete","classes","allNonRentCharges","setAllNonRentCharges","filteredAllNonRentCharges","setFilteredAllNonRentCharges","chargeType","setChargeTypeFilter","fromDateFilter","setFromDateFilter","toDateFilter","setToDateFilter","periodFilter","setPeriodFilter","contactFilter","setContactFilter","propertyFilter","setPropertyFilter","addFullPaymentsToChargesModalState","setAddFullPaymentsToChargesModalState","editChargeModalState","setEditChargeModalState","addPaymentToChargeModalState","setAddPaymentToChargesModalState","selected","setSelected","chargeToEditId","setChargeToEditId","CHARGE_TYPES","Array","from","Set","map","chargeItem","JSON","stringify","charge_label","value","charge_type","filterChargesByCriteria","chargesToFilter","filteredStatements","startDate","endDate","filter","chargeItemDate","charge_date","Date","start","end","property_id","tenant_id","totalNumOfCharges","length","totalChargesAmount","reduce","total","currentValue","parseFloat","charge_amount","chargesWithPayments","charge","payed_status","totalPaymentsAmount","payed_amount","toggleAddFullPaymentsToChargesModalState","toggleAddPaymentToChargeModal","toggleEditChargeModalState","handleSearchFormSubmit","event","preventDefault","handleChargeDelete","chargeId","url","payment","charge_id","forEach","error","console","log","resetSearchForm","includes","form","target","shrink","filterOption","index","text","property","ref","option","newValue","tenant","first_name","last_name","width","params","format","find","selectedRowIndex","mapStateToProps","state","payment_type","contact","unitWithCharge","propertyUnits","unit_id","chargeDetails","tenant_name","tenant_id_number","id_number","unit_ref","chargePayments","payment_amount","balance","Object","assign","sort","charge1","charge2","mapDispatchToProps","dispatch","item","itemId"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Layout from \"../components/PrivateLayout\";\nimport PageHeading from \"../components/PageHeading\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Box from \"@material-ui/core/Box\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { Link } from \"react-router-dom\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport ExportToExcelBtn from \"../components/ExportToExcelBtn\";\nimport PrintArrayToPdf from \"../components/PrintArrayToPdfBtn\";\nimport CommonTable from \"../components/table/commonTable\";\nimport { handleItemFormSubmit, handleDelete } from \"../actions/actions\";\nimport { commonStyles } from '../components/commonStyles'\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport AddPaymentToChargesModal from \"../components/charges/AddPaymentToChargesModal\";\nimport {\n    getTransactionsFilterOptions, currencyFormatter, getStartEndDatesForPeriod\n} from \"../assets/commonAssets\";\nimport { parse, isWithinInterval } from \"date-fns\";\nimport ChargeEditForm from \"../components/charges/ChargeEditForm\";\nimport PaymentInputForm from \"../components/payments/PaymentInputForm\";\n\n\nconst TRANSACTIONS_FILTER_OPTIONS = getTransactionsFilterOptions()\n\n\nconst headCells = [\n    { id: \"tenant_name\", numeric: false, disablePadding: true, label: \"Tenant Name\", },\n    { id: \"unit_ref\", numeric: false, disablePadding: true, label: \"Unit Ref/Number\", },\n    { id: \"charge_label\", numeric: false, disablePadding: true, label: \"Charge Name/Type\", },\n    { id: \"charge_date\", numeric: false, disablePadding: true, label: \"Charge Date\", },\n    { id: \"charge_amount\", numeric: true, disablePadding: false, label: \"Charge Amount\", },\n    { id: \"payed_status\", numeric: false, disablePadding: true, label: \"Payments Made\" },\n    { id: \"payed_amount\", numeric: true, disablePadding: false, label: \"Total Amounts Paid\" },\n    { id: \"balance\", numeric: true, disablePadding: false, label: \"Balance\" },\n    { id: \"edit\", numeric: false, disablePadding: true, label: \"Edit\" },\n    { id: \"delete\", numeric: false, disablePadding: true, label: \"Delete\" },\n\n];\n\nlet TenantChargesStatementPage = ({\n    match,\n    properties,\n    contacts,\n    rentalPayments,\n    rentalCharges,\n    handleItemSubmit,\n    handleItemDelete,\n}) => {\n    const classes = commonStyles()\n    const [allNonRentCharges, setAllNonRentCharges] = useState([]);\n    const [filteredAllNonRentCharges, setFilteredAllNonRentCharges] = useState([]);\n    const [chargeType, setChargeTypeFilter] = useState(\"\");\n    const [fromDateFilter, setFromDateFilter] = useState('');\n    const [toDateFilter, setToDateFilter] = useState(\"\");\n    const [periodFilter, setPeriodFilter] = useState(\"month-to-date\");\n    const [contactFilter, setContactFilter] = useState(null);\n    const [propertyFilter, setPropertyFilter] = useState(\"all\");\n    const [addFullPaymentsToChargesModalState, setAddFullPaymentsToChargesModalState] = useState(false);\n    const [editChargeModalState, setEditChargeModalState] = useState(false);\n    const [addPaymentToChargeModalState, setAddPaymentToChargesModalState] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [chargeToEditId, setChargeToEditId] = useState();\n\n    const CHARGE_TYPES = Array.from(new Set(allNonRentCharges\n        .map((chargeItem) => (JSON.stringify({ label: chargeItem.charge_label, value: chargeItem.charge_type })))))\n        .map(chargeType => JSON.parse(chargeType))\n\n    const filterChargesByCriteria = (chargesToFilter) => {\n        let filteredStatements = chargesToFilter\n        if (periodFilter) {\n            const { startDate, endDate } = getStartEndDatesForPeriod(periodFilter)\n            filteredStatements = filteredStatements.filter((chargeItem) => {\n                const chargeItemDate = parse(chargeItem.charge_date, 'yyyy-MM-dd', new Date())\n                return isWithinInterval(chargeItemDate, { start: startDate, end: endDate })\n            })\n        }\n        filteredStatements = filteredStatements\n            .filter(({ charge_date, property_id, tenant_id, charge_type }) =>\n                (!fromDateFilter ? true : charge_date >= fromDateFilter)\n                && (!toDateFilter ? true : charge_date <= toDateFilter)\n                && (propertyFilter === \"all\" ? true : property_id === propertyFilter)\n                && (!chargeType ? true : charge_type === chargeType.value)\n                && (!contactFilter ? true : tenant_id === contactFilter.id)\n            )\n        return filteredStatements;\n    }\n\n    useEffect(() => {\n        setAllNonRentCharges(rentalCharges);\n        setFilteredAllNonRentCharges(filterChargesByCriteria(rentalCharges));\n    }, [rentalCharges]);\n\n    const totalNumOfCharges = filteredAllNonRentCharges.length\n\n    const totalChargesAmount = filteredAllNonRentCharges\n        .reduce((total, currentValue) => {\n            return total + parseFloat(currentValue.charge_amount) || 0\n        }, 0)\n\n    const chargesWithPayments = filteredAllNonRentCharges.filter(charge => charge.payed_status === true).length\n\n    const totalPaymentsAmount = filteredAllNonRentCharges\n        .reduce((total, currentValue) => {\n            return total + parseFloat(currentValue.payed_amount) || 0\n        }, 0)\n\n    const toggleAddFullPaymentsToChargesModalState = () => {\n        setAddFullPaymentsToChargesModalState(!addFullPaymentsToChargesModalState)\n    }\n\n    const toggleAddPaymentToChargeModal = () => {\n        setAddPaymentToChargesModalState(!addPaymentToChargeModalState)\n    }\n\n    const toggleEditChargeModalState = () => {\n        setEditChargeModalState(!editChargeModalState)\n    }\n\n    const handleSearchFormSubmit = (event) => {\n        event.preventDefault();\n        //filter the rentalCharges according to the search criteria here\n        setFilteredAllNonRentCharges(filterChargesByCriteria(allNonRentCharges));\n    };\n\n    const handleChargeDelete = async (chargeId, url) => {\n        try {\n            //delete all payments for this charge\n            rentalPayments.filter((payment) => payment.charge_id === chargeId).forEach(async payment => {\n                await handleItemDelete(payment.id, \"charge-payments\")\n            });\n            //finally delete the charge itself\n            await handleItemDelete(chargeId, url);\n        } catch (error) {\n            console.log(\"Error deleting charge => \", error)\n        }\n    }\n\n    const resetSearchForm = (event) => {\n        event.preventDefault();\n        setChargeTypeFilter(\"\");\n        setFromDateFilter(\"\");\n        setToDateFilter(\"\");\n        setContactFilter(null)\n        setPeriodFilter(\"month-to-date\");\n        setPropertyFilter(\"all\")\n    };\n\n    return (\n        <Layout pageTitle=\"Other Charges\">\n            <Grid\n                container\n                spacing={2}\n                justify=\"center\" direction=\"column\"\n            >\n                <Grid item key={2}>\n                    <PageHeading text={\"Other Charges\"} />\n                </Grid>\n                <Grid\n                    container\n                    spacing={2}\n                    item\n                    alignItems=\"center\"\n                    direction=\"row\"\n                    key={1}\n                >\n                    <Grid item>\n                        <Button\n                            type=\"button\"\n                            color=\"primary\"\n                            variant=\"contained\"\n                            size=\"medium\"\n                            startIcon={<AddIcon />}\n                            disabled={!selected.length}\n                            onClick={() => toggleAddFullPaymentsToChargesModalState()}\n                        >\n                            Receive Full Payments\n                            </Button>\n                    </Grid>\n                    <Grid item>\n                        <Button\n                            type=\"button\"\n                            color=\"primary\"\n                            variant=\"contained\"\n                            size=\"medium\"\n                            disabled={selected.length !== 1}\n                            startIcon={<AddIcon />}\n                            onClick={() => toggleAddPaymentToChargeModal()}\n                        >\n                            Receive Payment\n                        </Button>\n                    </Grid>\n                    <Grid item>\n                        <Button\n                            type=\"button\"\n                            color=\"primary\"\n                            variant=\"contained\"\n                            size=\"medium\"\n                            disabled={selected.length !== 1}\n                            startIcon={<AddIcon />}\n                            to={`${match.url}/charge-on-deposit/${selected[0]}/new`}\n                            component={Link}\n                        >\n                            Charge on Deposit\n                            </Button>\n                    </Grid>\n                    <Grid item>\n                        <ExportToExcelBtn\n                            disabled={!selected.length}\n                            reportName={`Tenants Charges Records`}\n                            reportTitle={'Tenant Charges Data'}\n                            headCells={headCells}\n                            dataToPrint={allNonRentCharges.filter(({ id }) => selected.includes(id))}\n                        />\n                    </Grid>\n                    <Grid item>\n                        <PrintArrayToPdf\n                            disabled={!selected.length}\n                            reportName={'Tenant Charges Data'}\n                            reportTitle={`Tenant Charges Records`}\n                            headCells={headCells}\n                            dataToPrint={allNonRentCharges.filter(({ id }) => selected.includes(id))}\n                        />\n                    </Grid>\n                </Grid>\n                <Grid item container>\n                    <Grid item sm={12}>\n                        <Box\n                            border={1}\n                            borderRadius=\"borderRadius\"\n                            borderColor=\"grey.400\"\n                        >\n                            <form\n                                className={classes.form}\n                                id=\"contactSearchForm\"\n                                onSubmit={handleSearchFormSubmit}\n                            >\n                                <Grid\n                                    container\n                                    spacing={2}\n                                    justify=\"center\"\n                                    direction=\"column\"\n                                >\n                                    <Grid item container direction=\"column\" spacing={2}>\n                                        <Grid item container direction=\"row\" spacing={2}>\n                                            <Grid item container xs={12} md={6} direction=\"row\" spacing={2}>\n                                                <Grid item xs={12} md={6}>\n                                                    <TextField\n                                                        fullWidth\n                                                        variant=\"outlined\"\n                                                        type=\"date\"\n                                                        id=\"from_date_filter\"\n                                                        name=\"from_date_filter\"\n                                                        label=\"From Date\"\n                                                        value={fromDateFilter}\n                                                        onChange={(event) => {\n                                                            setFromDateFilter(\n                                                                event.target.value\n                                                            );\n                                                        }}\n                                                        InputLabelProps={{ shrink: true }}\n                                                    />\n                                                </Grid>\n                                                <Grid item xs={12} md={6}>\n                                                    <TextField\n                                                        fullWidth\n                                                        variant=\"outlined\"\n                                                        type=\"date\"\n                                                        name=\"to_date_filter\"\n                                                        label=\"To Date\"\n                                                        id=\"to_date_filter\"\n                                                        onChange={(event) => {\n                                                            setToDateFilter(event.target.value);\n                                                        }}\n                                                        value={toDateFilter}\n                                                        InputLabelProps={{ shrink: true }}\n                                                    />\n                                                </Grid>\n                                            </Grid>\n                                            <Grid item md={6} xs={12}>\n                                                <TextField\n                                                    fullWidth\n                                                    variant=\"outlined\"\n                                                    select\n                                                    id=\"period_filter\"\n                                                    name=\"period_filter\"\n                                                    label=\"Period\"\n                                                    value={periodFilter}\n                                                    onChange={(event) => {\n                                                        setPeriodFilter(\n                                                            event.target.value\n                                                        );\n                                                    }}\n                                                    InputLabelProps={{ shrink: true }}\n                                                >\n                                                    {TRANSACTIONS_FILTER_OPTIONS.map((filterOption, index) => (\n                                                        <MenuItem\n                                                            key={index}\n                                                            value={filterOption.id}\n                                                        >\n                                                            {filterOption.text}\n                                                        </MenuItem>\n                                                    ))}\n                                                </TextField>\n                                            </Grid>\n                                        </Grid>\n                                        <Grid item container direction=\"row\" spacing={2}>\n                                            <Grid item xs={12} md={4}>\n                                                <TextField\n                                                    fullWidth\n                                                    select\n                                                    variant=\"outlined\"\n                                                    name=\"property_filter\"\n                                                    label=\"Property\"\n                                                    id=\"property_filter\"\n                                                    onChange={(event) => {\n                                                        setPropertyFilter(\n                                                            event.target.value\n                                                        );\n                                                    }}\n                                                    value={propertyFilter}\n                                                >\n                                                    <MenuItem key={\"all\"} value={\"all\"}>All</MenuItem>\n                                                    {properties.map(\n                                                        (property, index) => (\n                                                            <MenuItem\n                                                                key={index}\n                                                                value={property.id}\n                                                            >\n                                                                {property.ref}\n                                                            </MenuItem>\n                                                        )\n                                                    )}\n                                                </TextField>\n                                            </Grid>\n                                            <Grid item xs={12} md={4}>\n                                                <Autocomplete\n                                                    id=\"contact_filter\"\n                                                    options={contacts}\n                                                    getOptionSelected={(option, value) => option.id === value.id}\n                                                    name=\"contact_filter\"\n                                                    defaultValue=\"\"\n                                                    onChange={(event, newValue) => {\n                                                        setContactFilter(newValue);\n                                                    }}\n                                                    value={contactFilter}\n                                                    getOptionLabel={(tenant) => tenant ? `${tenant.first_name} ${tenant.last_name}` : ''}\n                                                    style={{ width: \"100%\" }}\n                                                    renderInput={(params) => <TextField {...params} label=\"Tenant\" variant=\"outlined\" />}\n                                                />\n                                            </Grid>\n                                            <Grid item xs={12} md={4}>\n                                                <Autocomplete\n                                                    id=\"charge_type_filter\"\n                                                    options={CHARGE_TYPES}\n                                                    getOptionSelected={(option, value) => option.value === value.value}\n                                                    name=\"charge_type_filter\"\n                                                    onChange={(event, newValue) => {\n                                                        setChargeTypeFilter(newValue);\n                                                    }}\n                                                    value={chargeType}\n                                                    getOptionLabel={(charge_type) => charge_type ? charge_type.label : ''}\n                                                    style={{ width: \"100%\" }}\n                                                    renderInput={(params) => <TextField {...params} label=\"Charge Type\" variant=\"outlined\" />}\n                                                />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid\n                                        container\n                                        spacing={2}\n                                        item\n                                        justify=\"flex-end\"\n                                        alignItems=\"center\"\n                                        direction=\"row\"\n                                        key={1}\n                                    >\n                                        <Grid item>\n                                            <Button\n                                                onClick={(event) => handleSearchFormSubmit(event)}\n                                                type=\"submit\"\n                                                form=\"contactSearchForm\"\n                                                color=\"primary\"\n                                                variant=\"contained\"\n                                                size=\"medium\"\n                                                startIcon={<SearchIcon />}\n                                            >\n                                                SEARCH\n                                    </Button>\n                                        </Grid>\n                                        <Grid item>\n                                            <Button\n                                                onClick={(event) => resetSearchForm(event)}\n                                                type=\"reset\"\n                                                form=\"contactSearchForm\"\n                                                color=\"primary\"\n                                                variant=\"contained\"\n                                                size=\"medium\"\n                                                startIcon={<UndoIcon />}\n                                            >\n                                                RESET\n                                    </Button>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </form>\n                        </Box>\n                    </Grid>\n                </Grid>\n                <Grid item container>\n                    <Grid item sm={12}>\n                        <Box border={1} borderRadius=\"borderRadius\" borderColor=\"grey.400\" className={classes.form}>\n                            <Grid container direction=\"row\" spacing={1}>\n                                <Grid item container md={4}>\n                                    <Grid item sm={12}>\n                                        <Typography variant=\"subtitle1\" align=\"center\">\n                                            Total Charges: {currencyFormatter.format(totalChargesAmount)}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item sm={12}>\n                                        <Typography variant=\"subtitle1\" align=\"center\">\n                                            Total Charges: {totalNumOfCharges}\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                                <Grid item container md={4}>\n                                    <Grid item sm={12}>\n                                        <Typography variant=\"subtitle1\" align=\"center\">\n                                            Total  Payments: {currencyFormatter.format(totalPaymentsAmount)}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item sm={12}>\n                                        <Typography variant=\"subtitle1\" align=\"center\">\n                                            Charges With Payments: {chargesWithPayments}\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                                <Grid item container md={4}>\n                                    <Grid item sm={12}>\n                                        <Typography variant=\"subtitle1\" align=\"center\">\n                                            Outstanding Balances: {currencyFormatter.format((totalChargesAmount - totalPaymentsAmount))}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid item sm={12}>\n                                        <Typography variant=\"subtitle1\" align=\"center\">\n                                            Charges Without Payments: {(totalNumOfCharges - chargesWithPayments)}\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Box>\n                    </Grid>\n                </Grid>\n                {\n                    addFullPaymentsToChargesModalState ?\n                        <AddPaymentToChargesModal open={addFullPaymentsToChargesModalState}\n                            chargesToAddPayments={rentalCharges.filter(({ id }) => selected.includes(id))\n                                .filter(({ payed_status }) => payed_status === false)}\n                            handleClose={toggleAddFullPaymentsToChargesModalState}\n                            handleItemSubmit={handleItemSubmit} /> : null\n                }\n                {\n                    editChargeModalState ?\n                        <ChargeEditForm open={editChargeModalState}\n                            chargeToEdit={rentalCharges.find(({ id }) => id === chargeToEditId)}\n                            handleClose={toggleEditChargeModalState}\n                            handleItemSubmit={handleItemSubmit} /> : null\n                }\n                {\n                    addPaymentToChargeModalState ?\n                        <PaymentInputForm open={addPaymentToChargeModalState}\n                            chargeToAddPaymentTo={rentalCharges.find(({ id }) => selected.includes(id))}\n                            handleClose={toggleAddPaymentToChargeModal}\n                            handleItemSubmit={handleItemSubmit} /> : null\n                }\n                <Grid item container>\n                    <Grid item sm={12}>\n                        <CommonTable\n                            selected={selected}\n                            setSelected={setSelected}\n                            rows={filteredAllNonRentCharges}\n                            headCells={headCells}\n                            noDetailsCol={true}\n                            optionalEditHandler={(selectedRowIndex) => {setChargeToEditId(selectedRowIndex); toggleEditChargeModalState()}}\n                            deleteUrl={'transactions-charges'}\n                            handleDelete={handleChargeDelete}\n                        />\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Layout >\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        rentalPayments: state.rentalPayments.filter((payment) => payment.payment_type !== 'rent'),\n        rentalCharges: state.rentalCharges\n            .filter((charge) => charge.charge_type !== 'rent')\n            .map((charge) => {\n                const tenant = state.contacts.find((contact) => contact.id === charge.tenant_id) || {};\n                const unitWithCharge = state.propertyUnits.find(({ id }) => id === charge.unit_id) || {};\n                const chargeDetails = {}\n                chargeDetails.tenant_name = `${tenant.first_name} ${tenant.last_name}`\n                chargeDetails.tenant_id_number = tenant.id_number\n                chargeDetails.unit_ref = unitWithCharge.ref\n                //get payments with this charge id\n                const chargePayments = state.rentalPayments.filter((payment) => payment.charge_id === charge.id)\n                chargeDetails.payed_status = chargePayments.length ? true : false;\n                const payed_amount = chargePayments.reduce((total, currentValue) => {\n                    return total + parseFloat(currentValue.payment_amount) || 0\n                }, 0)\n                chargeDetails.payed_amount = payed_amount\n                chargeDetails.balance = parseFloat(charge.charge_amount) - payed_amount\n                return Object.assign({}, charge, chargeDetails);\n            }).sort((charge1, charge2) => parse(charge2.charge_date, 'yyyy-MM-dd', new Date()) -\n                parse(charge1.charge_date, 'yyyy-MM-dd', new Date())),\n        contacts: state.contacts,\n        properties: state.properties,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleItemSubmit: (item, url) => dispatch(handleItemFormSubmit(item, url)),\n        handleItemDelete: (itemId, url) => dispatch(handleDelete(itemId, url)),\n    };\n};\n\nTenantChargesStatementPage = connect(mapStateToProps, mapDispatchToProps)(TenantChargesStatementPage);\n\nexport default withRouter(TenantChargesStatementPage);\n"]},"metadata":{},"sourceType":"module"}