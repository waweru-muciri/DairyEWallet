{"ast":null,"code":"var _jsxFileName = \"/home/brianmuciri/Projects/farm-ledger-ld/src/Routes/RentRoll.js\";\nimport Grid from \"@material-ui/core/Grid\";\nimport React, { useEffect, useState } from \"react\";\nimport TabPanel from \"../components/TabPanel\";\nimport Tab from '@material-ui/core/Tab';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport PrintArrayToPdf from \"../components/PrintArrayToPdfBtn\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { Link } from \"react-router-dom\";\nimport ExportToExcelBtn from \"../components/ExportToExcelBtn\";\nimport CommonTable from \"../components/table/commonTable\";\nimport { connect } from \"react-redux\";\nimport { commonStyles } from \"../components/commonStyles\";\nimport Layout from \"../components/PrivateLayout\";\nimport PageHeading from \"../components/PageHeading\";\nimport RentBalancesPage from \"./RentBalancesPage\";\nimport { handleItemFormSubmit, handleDelete } from '../actions/actions';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { getTransactionsFilterOptions, currencyFormatter, getStartEndDatesForPeriod } from \"../assets/commonAssets\";\nimport { parse, isWithinInterval } from \"date-fns\";\nimport AddPaymentToChargesModal from \"../components/charges/AddPaymentToChargesModal\";\nimport ChargeEditForm from \"../components/charges/ChargeEditForm\";\nimport PaymentInputForm from \"../components/payments/PaymentInputForm\";\nconst TRANSACTIONS_FILTER_OPTIONS = getTransactionsFilterOptions();\nconst headCells = [{\n  id: \"unit_details\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Unit Details\"\n}, {\n  id: \"tenant_name\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Tenant Name\"\n}, {\n  id: \"tenant_id_number\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Tenant ID\"\n}, {\n  id: \"charge_date\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Charge Date\"\n}, {\n  id: \"due_date\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Rent Due Date\"\n}, {\n  id: \"charge_amount\",\n  numeric: true,\n  disablePadding: false,\n  label: \"Rent Charge Amount\"\n}, {\n  id: \"payed_status\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Payments Made\"\n}, {\n  id: \"payed_amount\",\n  numeric: true,\n  disablePadding: false,\n  label: \"Total Amounts Paid\"\n}, {\n  id: \"balance\",\n  numeric: true,\n  disablePadding: false,\n  label: \"Rent Balance\"\n}, {\n  id: \"edit\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Edit\"\n}, {\n  id: \"delete\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Delete\"\n}];\n\nlet RentRollPage = ({\n  match,\n  rentalCharges,\n  properties,\n  contacts,\n  rentalPayments,\n  handleItemSubmit,\n  handleItemDelete\n}) => {\n  const [rentCharges, setRentCharges] = useState([]);\n  const [filteredRentCharges, setFilteredRentCharges] = useState([]);\n  const [propertyFilter, setPropertyFilter] = useState(\"all\");\n  const [contactFilter, setContactFilter] = useState(null);\n  const [periodFilter, setPeriodFilter] = useState(\"month-to-date\");\n  const [fromDateFilter, setFromDateFilter] = useState('');\n  const [toDateFilter, setToDateFilter] = useState(\"\");\n  const [selected, setSelected] = useState([]);\n  const [chargeToEditId, setChargeToEditId] = useState();\n  const [addFullPaymentsToChargesModalState, setAddFullPaymentsToChargesModalState] = useState(false);\n  const [editChargeModalState, setEditChargeModalState] = useState(false);\n  const [addPaymentToChargeModalState, setAddPaymentToChargesModalState] = useState(false);\n  const classes = commonStyles();\n  const [tabValue, setTabValue] = React.useState(0);\n\n  const handleTabChange = (event, newValue) => {\n    setTabValue(newValue);\n  };\n\n  const rentChargesWithBalances = rentCharges.filter(rentCharge => rentCharge.balance > 0);\n  const totalRentCharges = filteredRentCharges.reduce((total, currentValue) => {\n    return total + parseFloat(currentValue.charge_amount) || 0;\n  }, 0);\n  const totalRentPayments = filteredRentCharges.reduce((total, currentValue) => {\n    return total + parseFloat(currentValue.payed_amount) || 0;\n  }, 0);\n\n  const handleAddFullPaymentsToChargesToggle = () => {\n    setAddFullPaymentsToChargesModalState(!addFullPaymentsToChargesModalState);\n  };\n\n  const toggleEditChargeModalState = () => {\n    setEditChargeModalState(!editChargeModalState);\n  };\n\n  const toggleAddPaymentToChargeModal = () => {\n    setAddPaymentToChargesModalState(!addPaymentToChargeModalState);\n  };\n\n  const filterChargesByCriteria = rentChargesToFilter => {\n    //filter the charges according to the search criteria here\n    let filteredRentChargesItems = rentChargesToFilter;\n\n    if (periodFilter) {\n      const {\n        startDate,\n        endDate\n      } = getStartEndDatesForPeriod(periodFilter);\n      filteredRentChargesItems = filteredRentChargesItems.filter(chargeItem => {\n        const chargeItemDate = parse(chargeItem.charge_date, 'yyyy-MM-dd', new Date());\n        return isWithinInterval(chargeItemDate, {\n          start: startDate,\n          end: endDate\n        });\n      });\n    }\n\n    filteredRentChargesItems = filteredRentChargesItems.filter(({\n      charge_date,\n      property_id,\n      tenant_id\n    }) => (!fromDateFilter ? true : charge_date >= fromDateFilter) && (!toDateFilter ? true : charge_date <= toDateFilter) && (propertyFilter === \"all\" ? true : property_id === propertyFilter) && (!contactFilter ? true : tenant_id === contactFilter.id));\n    return filteredRentChargesItems;\n  };\n\n  useEffect(() => {\n    setRentCharges(rentalCharges);\n    setFilteredRentCharges(filterChargesByCriteria(rentalCharges));\n  }, [rentalCharges]);\n\n  const handleSearchFormSubmit = event => {\n    event.preventDefault();\n    setFilteredRentCharges(filterChargesByCriteria(rentCharges));\n  };\n\n  const resetSearchForm = event => {\n    event.preventDefault();\n    setPropertyFilter(\"all\");\n    setContactFilter(null);\n    setPeriodFilter(\"month-to-date\");\n    setFromDateFilter(\"\");\n    setToDateFilter(\"\");\n  };\n\n  const handleRentChargeDelete = async (chargeId, url) => {\n    try {\n      rentalPayments.filter(payment => payment.charge_id === chargeId).forEach(async payment => {\n        await handleItemDelete(payment.id, \"charge-payments\");\n      });\n      await handleItemDelete(chargeId, url);\n    } catch (error) {\n      console.log(\"Error deleting rent charge => \", error);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Layout, {\n    pageTitle: \"Rent Charges Roll\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Tabs, {\n    value: tabValue,\n    onChange: handleTabChange,\n    \"aria-label\": \"simple tabs example\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Tab, {\n    label: \"Rent Charges Roll\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Tab, {\n    label: \"Rent Outstanding Balances\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(TabPanel, {\n    value: tabValue,\n    index: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(RentBalancesPage, {\n    rentalCharges: rentChargesWithBalances,\n    properties: properties,\n    contacts: contacts,\n    classes: classes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(TabPanel, {\n    value: tabValue,\n    index: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    justify: \"center\",\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    key: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(PageHeading, {\n    text: \"Rent Charges Roll\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    item: true,\n    alignItems: \"center\",\n    direction: \"row\",\n    key: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"medium\",\n    startIcon: /*#__PURE__*/React.createElement(AddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 44\n      }\n    }),\n    disabled: !selected.length,\n    onClick: () => handleAddFullPaymentsToChargesToggle(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 29\n    }\n  }, \"Receive Full Payments\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"medium\",\n    disabled: selected.length !== 1,\n    startIcon: /*#__PURE__*/React.createElement(AddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 44\n      }\n    }),\n    onClick: () => toggleAddPaymentToChargeModal(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 29\n    }\n  }, \"Receive Payment\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"medium\",\n    disabled: selected.length !== 1,\n    startIcon: /*#__PURE__*/React.createElement(AddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 44\n      }\n    }),\n    to: `${match.url}/charge-on-deposit/${selected[0]}/new`,\n    component: Link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 29\n    }\n  }, \"Charge on Deposit\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(PrintArrayToPdf, {\n    disabled: !selected.length,\n    reportName: 'Rent Charges Roll Records',\n    reportTitle: 'Rent Charges Roll Data',\n    headCells: headCells,\n    dataToPrint: rentCharges.filter(({\n      id\n    }) => selected.includes(id)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(ExportToExcelBtn, {\n    disabled: !selected.length,\n    reportName: 'Rent Charges Roll Records',\n    reportTitle: 'Rent Charges Roll Data',\n    headCells: headCells,\n    dataToPrint: rentCharges.filter(({\n      id\n    }) => selected.includes(id)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    border: 1,\n    borderRadius: \"borderRadius\",\n    borderColor: \"grey.400\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    id: \"rentRollSearchForm\",\n    onSubmit: handleSearchFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"row\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    xs: 12,\n    md: 6,\n    direction: \"row\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    type: \"date\",\n    id: \"from_date_filter\",\n    name: \"from_date_filter\",\n    label: \"From Date\",\n    value: fromDateFilter,\n    onChange: event => {\n      setFromDateFilter(event.target.value);\n    },\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 53\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    type: \"date\",\n    name: \"to_date_filter\",\n    label: \"To Date\",\n    id: \"to_date_filter\",\n    onChange: event => {\n      setToDateFilter(event.target.value);\n    },\n    value: toDateFilter,\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 53\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    select: true,\n    id: \"period_filter\",\n    name: \"period_filter\",\n    label: \"Period\",\n    value: periodFilter,\n    onChange: event => {\n      setPeriodFilter(event.target.value);\n    },\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 49\n    }\n  }, TRANSACTIONS_FILTER_OPTIONS.map((filterOption, index) => /*#__PURE__*/React.createElement(MenuItem, {\n    key: index,\n    value: filterOption.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 57\n    }\n  }, filterOption.text))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"row\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    select: true,\n    variant: \"outlined\",\n    name: \"property_filter\",\n    label: \"Property\",\n    id: \"property_filter\",\n    onChange: event => {\n      setPropertyFilter(event.target.value);\n    },\n    value: propertyFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    key: \"all\",\n    value: \"all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 53\n    }\n  }, \"All\"), properties.map((property, index) => /*#__PURE__*/React.createElement(MenuItem, {\n    key: index,\n    value: property.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 61\n    }\n  }, property.ref)))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    id: \"contact_filter\",\n    options: contacts,\n    getOptionSelected: (option, value) => option.id === value.id,\n    name: \"contact_filter\",\n    onChange: (event, newValue) => {\n      setContactFilter(newValue);\n    },\n    value: contactFilter,\n    getOptionLabel: tenant => tenant ? `${tenant.first_name} ${tenant.last_name}` : '',\n    style: {\n      width: \"100%\"\n    },\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"Tenant\",\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 78\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 49\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    item: true,\n    justify: \"flex-end\",\n    alignItems: \"center\",\n    direction: \"row\",\n    key: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: event => handleSearchFormSubmit(event),\n    type: \"submit\",\n    form: \"rentRollSearchForm\",\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"medium\",\n    startIcon: /*#__PURE__*/React.createElement(SearchIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 60\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 45\n    }\n  }, \"SEARCH\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: event => resetSearchForm(event),\n    type: \"reset\",\n    form: \"rentRollSearchForm\",\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"medium\",\n    startIcon: /*#__PURE__*/React.createElement(UndoIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 60\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 45\n    }\n  }, \"RESET\"))))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    border: 1,\n    borderRadius: \"borderRadius\",\n    borderColor: \"grey.400\",\n    className: classes.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 41\n    }\n  }, \"Total Rent Charges: \", currencyFormatter.format(totalRentCharges)))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 41\n    }\n  }, \"Total Rent Payments: \", currencyFormatter.format(totalRentPayments)))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 41\n    }\n  }, \"Outstanding Rent Balances: \", currencyFormatter.format(totalRentCharges - totalRentPayments))))))), addFullPaymentsToChargesModalState ? /*#__PURE__*/React.createElement(AddPaymentToChargesModal, {\n    open: addFullPaymentsToChargesModalState,\n    chargesToAddPayments: rentalCharges.filter(({\n      id\n    }) => selected.includes(id)).filter(({\n      payed_status\n    }) => payed_status === false),\n    handleClose: handleAddFullPaymentsToChargesToggle,\n    handleItemSubmit: handleItemSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 29\n    }\n  }) : null, editChargeModalState ? /*#__PURE__*/React.createElement(ChargeEditForm, {\n    open: editChargeModalState,\n    chargeToEdit: rentalCharges.find(({\n      id\n    }) => id === chargeToEditId),\n    handleClose: toggleEditChargeModalState,\n    handleItemSubmit: handleItemSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 29\n    }\n  }) : null, addPaymentToChargeModalState ? /*#__PURE__*/React.createElement(PaymentInputForm, {\n    open: addPaymentToChargeModalState,\n    chargeToAddPaymentTo: rentalCharges.find(({\n      id\n    }) => selected.includes(id)),\n    handleClose: toggleAddPaymentToChargeModal,\n    handleItemSubmit: handleItemSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 29\n    }\n  }) : null, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CommonTable, {\n    selected: selected,\n    setSelected: setSelected,\n    rows: filteredRentCharges,\n    headCells: headCells,\n    optionalEditHandler: selectedRowIndex => {\n      setChargeToEditId(selectedRowIndex);\n      toggleEditChargeModalState();\n    },\n    noDetailsCol: true,\n    deleteUrl: 'transactions-charges',\n    handleDelete: handleRentChargeDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 25\n    }\n  })))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    properties: state.properties,\n    rentalPayments: state.rentalPayments.filter(payment => payment.payment_type === 'rent'),\n    rentalCharges: state.rentalCharges.filter(charge => charge.charge_type === 'rent').map(charge => {\n      const tenant = state.contacts.find(contact => contact.id === charge.tenant_id) || {};\n      const unitWithCharge = state.propertyUnits.find(({\n        id\n      }) => id === charge.unit_id) || {};\n      const chargePayments = state.rentalPayments.filter(payment => payment.charge_id === charge.id);\n      const payed_amount = chargePayments.reduce((total, currentValue) => {\n        return total + parseFloat(currentValue.payment_amount) || 0;\n      }, 0);\n      const property = state.properties.find(property => property.id === charge.property_id) || {};\n      const chargeDetails = {\n        tenant_name: `${tenant.first_name} ${tenant.last_name}`,\n        tenant_id_number: tenant.id_number,\n        payed_status: chargePayments.length ? true : false,\n        payed_amount: payed_amount,\n        balance: parseFloat(charge.charge_amount) - payed_amount,\n        unit_details: `${property.ref} - ${unitWithCharge.ref}`\n      };\n      return Object.assign({}, charge, chargeDetails);\n    }).sort((charge1, charge2) => parse(charge2.charge_date, 'yyyy-MM-dd', new Date()) - parse(charge1.charge_date, 'yyyy-MM-dd', new Date())),\n    contacts: state.contacts,\n    leases: state.leases\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleItemSubmit: (item, url) => dispatch(handleItemFormSubmit(item, url)),\n    handleItemDelete: (itemId, url) => dispatch(handleDelete(itemId, url))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RentRollPage);","map":{"version":3,"sources":["/home/brianmuciri/Projects/farm-ledger-ld/src/Routes/RentRoll.js"],"names":["Grid","React","useEffect","useState","TabPanel","Tab","AppBar","Tabs","PrintArrayToPdf","MenuItem","Button","TextField","Box","Typography","SearchIcon","UndoIcon","AddIcon","Link","ExportToExcelBtn","CommonTable","connect","commonStyles","Layout","PageHeading","RentBalancesPage","handleItemFormSubmit","handleDelete","Autocomplete","getTransactionsFilterOptions","currencyFormatter","getStartEndDatesForPeriod","parse","isWithinInterval","AddPaymentToChargesModal","ChargeEditForm","PaymentInputForm","TRANSACTIONS_FILTER_OPTIONS","headCells","id","numeric","disablePadding","label","RentRollPage","match","rentalCharges","properties","contacts","rentalPayments","handleItemSubmit","handleItemDelete","rentCharges","setRentCharges","filteredRentCharges","setFilteredRentCharges","propertyFilter","setPropertyFilter","contactFilter","setContactFilter","periodFilter","setPeriodFilter","fromDateFilter","setFromDateFilter","toDateFilter","setToDateFilter","selected","setSelected","chargeToEditId","setChargeToEditId","addFullPaymentsToChargesModalState","setAddFullPaymentsToChargesModalState","editChargeModalState","setEditChargeModalState","addPaymentToChargeModalState","setAddPaymentToChargesModalState","classes","tabValue","setTabValue","handleTabChange","event","newValue","rentChargesWithBalances","filter","rentCharge","balance","totalRentCharges","reduce","total","currentValue","parseFloat","charge_amount","totalRentPayments","payed_amount","handleAddFullPaymentsToChargesToggle","toggleEditChargeModalState","toggleAddPaymentToChargeModal","filterChargesByCriteria","rentChargesToFilter","filteredRentChargesItems","startDate","endDate","chargeItem","chargeItemDate","charge_date","Date","start","end","property_id","tenant_id","handleSearchFormSubmit","preventDefault","resetSearchForm","handleRentChargeDelete","chargeId","url","payment","charge_id","forEach","error","console","log","length","includes","form","target","value","shrink","map","filterOption","index","text","property","ref","option","tenant","first_name","last_name","width","params","format","payed_status","find","selectedRowIndex","mapStateToProps","state","payment_type","charge","charge_type","contact","unitWithCharge","propertyUnits","unit_id","chargePayments","payment_amount","chargeDetails","tenant_name","tenant_id_number","id_number","unit_details","Object","assign","sort","charge1","charge2","leases","mapDispatchToProps","dispatch","item","itemId"],"mappings":"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","sourcesContent":["import Grid from \"@material-ui/core/Grid\";\nimport React, { useEffect, useState } from \"react\";\nimport TabPanel from \"../components/TabPanel\";\nimport Tab from '@material-ui/core/Tab';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport PrintArrayToPdf from \"../components/PrintArrayToPdfBtn\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { Link } from \"react-router-dom\";\nimport ExportToExcelBtn from \"../components/ExportToExcelBtn\";\nimport CommonTable from \"../components/table/commonTable\";\nimport { connect } from \"react-redux\";\nimport { commonStyles } from \"../components/commonStyles\";\nimport Layout from \"../components/PrivateLayout\";\nimport PageHeading from \"../components/PageHeading\";\nimport RentBalancesPage from \"./RentBalancesPage\";\nimport { handleItemFormSubmit, handleDelete } from '../actions/actions'\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { getTransactionsFilterOptions, currencyFormatter, getStartEndDatesForPeriod } from \"../assets/commonAssets\";\nimport { parse, isWithinInterval } from \"date-fns\";\nimport AddPaymentToChargesModal from \"../components/charges/AddPaymentToChargesModal\";\nimport ChargeEditForm from \"../components/charges/ChargeEditForm\";\nimport PaymentInputForm from \"../components/payments/PaymentInputForm\";\n\n\nconst TRANSACTIONS_FILTER_OPTIONS = getTransactionsFilterOptions()\n\n\nconst headCells = [\n    { id: \"unit_details\", numeric: false, disablePadding: true, label: \"Unit Details\", },\n    { id: \"tenant_name\", numeric: false, disablePadding: true, label: \"Tenant Name\", },\n    { id: \"tenant_id_number\", numeric: false, disablePadding: true, label: \"Tenant ID\", },\n    { id: \"charge_date\", numeric: false, disablePadding: true, label: \"Charge Date\", },\n    { id: \"due_date\", numeric: false, disablePadding: true, label: \"Rent Due Date\", },\n    { id: \"charge_amount\", numeric: true, disablePadding: false, label: \"Rent Charge Amount\", },\n    { id: \"payed_status\", numeric: false, disablePadding: true, label: \"Payments Made\" },\n    { id: \"payed_amount\", numeric: true, disablePadding: false, label: \"Total Amounts Paid\" },\n    { id: \"balance\", numeric: true, disablePadding: false, label: \"Rent Balance\" },\n    { id: \"edit\", numeric: false, disablePadding: true, label: \"Edit\" },\n    { id: \"delete\", numeric: false, disablePadding: true, label: \"Delete\" },\n];\n\nlet RentRollPage = ({\n    match,\n    rentalCharges,\n    properties,\n    contacts,\n    rentalPayments,\n    handleItemSubmit,\n    handleItemDelete\n}) => {\n    const [rentCharges, setRentCharges] = useState([]);\n    const [filteredRentCharges, setFilteredRentCharges] = useState([]);\n    const [propertyFilter, setPropertyFilter] = useState(\"all\");\n    const [contactFilter, setContactFilter] = useState(null);\n    const [periodFilter, setPeriodFilter] = useState(\"month-to-date\");\n    const [fromDateFilter, setFromDateFilter] = useState('');\n    const [toDateFilter, setToDateFilter] = useState(\"\");\n    const [selected, setSelected] = useState([]);\n    const [chargeToEditId, setChargeToEditId] = useState();\n    const [addFullPaymentsToChargesModalState, setAddFullPaymentsToChargesModalState] = useState(false);\n    const [editChargeModalState, setEditChargeModalState] = useState(false);\n    const [addPaymentToChargeModalState, setAddPaymentToChargesModalState] = useState(false);\n\n    const classes = commonStyles();\n\n    const [tabValue, setTabValue] = React.useState(0);\n\n    const handleTabChange = (event, newValue) => {\n        setTabValue(newValue);\n    };\n\n    const rentChargesWithBalances = rentCharges.filter(rentCharge => rentCharge.balance > 0)\n\n    const totalRentCharges = filteredRentCharges\n        .reduce((total, currentValue) => {\n            return total + parseFloat(currentValue.charge_amount) || 0\n        }, 0)\n\n    const totalRentPayments = filteredRentCharges\n        .reduce((total, currentValue) => {\n            return total + parseFloat(currentValue.payed_amount) || 0\n        }, 0)\n\n    const handleAddFullPaymentsToChargesToggle = () => {\n        setAddFullPaymentsToChargesModalState(!addFullPaymentsToChargesModalState)\n    }\n\n    const toggleEditChargeModalState = () => {\n        setEditChargeModalState(!editChargeModalState)\n    }\n\n    const toggleAddPaymentToChargeModal = () => {\n        setAddPaymentToChargesModalState(!addPaymentToChargeModalState)\n    }\n\n    const filterChargesByCriteria = (rentChargesToFilter) => {\n        //filter the charges according to the search criteria here\n        let filteredRentChargesItems = rentChargesToFilter\n        if (periodFilter) {\n            const { startDate, endDate } = getStartEndDatesForPeriod(periodFilter)\n            filteredRentChargesItems = filteredRentChargesItems.filter((chargeItem) => {\n                const chargeItemDate = parse(chargeItem.charge_date, 'yyyy-MM-dd', new Date())\n                return isWithinInterval(chargeItemDate, { start: startDate, end: endDate })\n            })\n        }\n        filteredRentChargesItems = filteredRentChargesItems\n            .filter(({ charge_date, property_id, tenant_id }) =>\n                (!fromDateFilter ? true : charge_date >= fromDateFilter)\n                && (!toDateFilter ? true : charge_date <= toDateFilter)\n                && (propertyFilter === \"all\" ? true : property_id === propertyFilter)\n                && (!contactFilter ? true : tenant_id === contactFilter.id)\n            )\n        return filteredRentChargesItems;\n    }\n\n    useEffect(() => {\n        setRentCharges(rentalCharges);\n        setFilteredRentCharges(filterChargesByCriteria(rentalCharges));\n    }, [rentalCharges]);\n\n    const handleSearchFormSubmit = (event) => {\n        event.preventDefault();\n        setFilteredRentCharges(filterChargesByCriteria(rentCharges));\n    };\n\n    const resetSearchForm = (event) => {\n        event.preventDefault();\n        setPropertyFilter(\"all\");\n        setContactFilter(null);\n        setPeriodFilter(\"month-to-date\");\n        setFromDateFilter(\"\");\n        setToDateFilter(\"\");\n    };\n\n    const handleRentChargeDelete = async (chargeId, url) => {\n        try {\n            rentalPayments.filter((payment) => payment.charge_id === chargeId).forEach(async payment => {\n                await handleItemDelete(payment.id, \"charge-payments\")\n            });\n            await handleItemDelete(chargeId, url)\n        } catch (error) {\n            console.log(\"Error deleting rent charge => \", error)\n        }\n    }\n\n    return (\n        <Layout pageTitle=\"Rent Charges Roll\">\n            <AppBar position=\"static\">\n                <Tabs value={tabValue} onChange={handleTabChange} aria-label=\"simple tabs example\">\n                    <Tab label=\"Rent Charges Roll\" />\n                    <Tab label=\"Rent Outstanding Balances\" />\n                </Tabs>\n            </AppBar>\n            <TabPanel value={tabValue} index={1}>\n                <RentBalancesPage rentalCharges={rentChargesWithBalances} properties={properties}\n                    contacts={contacts} classes={classes} />\n            </TabPanel>\n            <TabPanel value={tabValue} index={0}>\n                <Grid\n                    container\n                    spacing={3}\n                    justify=\"center\" direction=\"column\"\n                >\n                    <Grid item key={2}>\n                        <PageHeading text={\"Rent Charges Roll\"} />\n                    </Grid>\n                    <Grid\n                        container\n                        spacing={2}\n                        item\n                        alignItems=\"center\"\n                        direction=\"row\"\n                        key={1}\n                    >\n                        <Grid item>\n                            <Button\n                                type=\"button\"\n                                color=\"primary\"\n                                variant=\"contained\"\n                                size=\"medium\"\n                                startIcon={<AddIcon />}\n                                disabled={!selected.length}\n                                onClick={() => handleAddFullPaymentsToChargesToggle()}\n                            >\n                                Receive Full Payments\n                            </Button>\n                        </Grid>\n                        <Grid item>\n                            <Button\n                                type=\"button\"\n                                color=\"primary\"\n                                variant=\"contained\"\n                                size=\"medium\"\n                                disabled={selected.length !== 1}\n                                startIcon={<AddIcon />}\n                                onClick={() => toggleAddPaymentToChargeModal()}\n                            >\n                                Receive Payment\n                            </Button>\n                        </Grid>\n                        <Grid item>\n                            <Button\n                                type=\"button\"\n                                color=\"primary\"\n                                variant=\"contained\"\n                                size=\"medium\"\n                                disabled={selected.length !== 1}\n                                startIcon={<AddIcon />}\n                                to={`${match.url}/charge-on-deposit/${selected[0]}/new`}\n                                component={Link}\n                            >\n                                Charge on Deposit\n                            </Button>\n                        </Grid>\n                        <Grid item>\n                            <PrintArrayToPdf\n                                disabled={!selected.length}\n                                reportName={'Rent Charges Roll Records'}\n                                reportTitle={'Rent Charges Roll Data'}\n                                headCells={headCells}\n                                dataToPrint={rentCharges.filter(({ id }) => selected.includes(id))}\n                            />\n                        </Grid>\n                        <Grid item>\n                            <ExportToExcelBtn\n                                disabled={!selected.length}\n                                reportName={'Rent Charges Roll Records'}\n                                reportTitle={'Rent Charges Roll Data'}\n                                headCells={headCells}\n                                dataToPrint={rentCharges.filter(({ id }) => selected.includes(id))}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Box\n                            border={1}\n                            borderRadius=\"borderRadius\"\n                            borderColor=\"grey.400\"\n                        >\n                            <form\n                                className={classes.form}\n                                id=\"rentRollSearchForm\"\n                                onSubmit={handleSearchFormSubmit}\n                            >\n                                <Grid\n                                    container\n                                    spacing={2}\n                                    justify=\"center\"\n                                >\n                                    <Grid item container spacing={2}>\n                                        <Grid item container direction=\"row\" spacing={2}>\n                                            <Grid item container xs={12} md={6} direction=\"row\" spacing={2}>\n                                                <Grid item xs={12} md={6}>\n                                                    <TextField\n                                                        fullWidth\n                                                        variant=\"outlined\"\n                                                        type=\"date\"\n                                                        id=\"from_date_filter\"\n                                                        name=\"from_date_filter\"\n                                                        label=\"From Date\"\n                                                        value={fromDateFilter}\n                                                        onChange={(event) => {\n                                                            setFromDateFilter(\n                                                                event.target.value\n                                                            );\n                                                        }}\n                                                        InputLabelProps={{ shrink: true }}\n                                                    />\n                                                </Grid>\n                                                <Grid item xs={12} md={6}>\n                                                    <TextField\n                                                        fullWidth\n                                                        variant=\"outlined\"\n                                                        type=\"date\"\n                                                        name=\"to_date_filter\"\n                                                        label=\"To Date\"\n                                                        id=\"to_date_filter\"\n                                                        onChange={(event) => {\n                                                            setToDateFilter(event.target.value);\n                                                        }}\n                                                        value={toDateFilter}\n                                                        InputLabelProps={{ shrink: true }}\n                                                    />\n                                                </Grid>\n                                            </Grid>\n                                            <Grid item xs={12} md={6}>\n                                                <TextField\n                                                    fullWidth\n                                                    variant=\"outlined\"\n                                                    select\n                                                    id=\"period_filter\"\n                                                    name=\"period_filter\"\n                                                    label=\"Period\"\n                                                    value={periodFilter}\n                                                    onChange={(event) => {\n                                                        setPeriodFilter(\n                                                            event.target.value\n                                                        );\n                                                    }}\n                                                    InputLabelProps={{ shrink: true }}\n                                                >\n                                                    {TRANSACTIONS_FILTER_OPTIONS.map((filterOption, index) => (\n                                                        <MenuItem\n                                                            key={index}\n                                                            value={filterOption.id}\n                                                        >\n                                                            {filterOption.text}\n                                                        </MenuItem>\n                                                    ))}\n                                                </TextField>\n                                            </Grid>\n                                        </Grid>\n                                        <Grid item container direction=\"row\" spacing={2}>\n                                            <Grid item md={6} xs={12}>\n                                                <TextField\n                                                    fullWidth\n                                                    select\n                                                    variant=\"outlined\"\n                                                    name=\"property_filter\"\n                                                    label=\"Property\"\n                                                    id=\"property_filter\"\n                                                    onChange={(event) => {\n                                                        setPropertyFilter(\n                                                            event.target.value\n                                                        );\n                                                    }}\n                                                    value={propertyFilter}\n                                                >\n                                                    <MenuItem key={\"all\"} value={\"all\"}>All</MenuItem>\n                                                    {properties.map(\n                                                        (property, index) => (\n                                                            <MenuItem\n                                                                key={index}\n                                                                value={property.id}\n                                                            >\n                                                                {property.ref}\n                                                            </MenuItem>\n                                                        )\n                                                    )}\n                                                </TextField>\n                                            </Grid>\n                                            <Grid item xs={12} md={6}>\n                                                <Autocomplete\n                                                    id=\"contact_filter\"\n                                                    options={contacts}\n                                                    getOptionSelected={(option, value) => option.id === value.id}\n                                                    name=\"contact_filter\"\n                                                    onChange={(event, newValue) => {\n                                                        setContactFilter(newValue);\n                                                    }}\n                                                    value={contactFilter}\n                                                    getOptionLabel={(tenant) => tenant ? `${tenant.first_name} ${tenant.last_name}` : ''}\n                                                    style={{ width: \"100%\" }}\n                                                    renderInput={(params) => <TextField {...params} label=\"Tenant\" variant=\"outlined\" />}\n                                                />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid\n                                        container\n                                        spacing={2}\n                                        item\n                                        justify=\"flex-end\"\n                                        alignItems=\"center\"\n                                        direction=\"row\"\n                                        key={1}\n                                    >\n                                        <Grid item>\n                                            <Button\n                                                onClick={(event) => handleSearchFormSubmit(event)}\n                                                type=\"submit\"\n                                                form=\"rentRollSearchForm\"\n                                                color=\"primary\"\n                                                variant=\"contained\"\n                                                size=\"medium\"\n                                                startIcon={<SearchIcon />}\n                                            >\n                                                SEARCH\n                                            </Button>\n                                        </Grid>\n                                        <Grid item>\n                                            <Button\n                                                onClick={(event) => resetSearchForm(event)}\n                                                type=\"reset\"\n                                                form=\"rentRollSearchForm\"\n                                                color=\"primary\"\n                                                variant=\"contained\"\n                                                size=\"medium\"\n                                                startIcon={<UndoIcon />}\n                                            >\n                                                RESET\n                                            </Button>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </form>\n                        </Box>\n                    </Grid>\n                    <Grid item>\n                        <Box border={1} borderRadius=\"borderRadius\" borderColor=\"grey.400\" className={classes.form}>\n                            <Grid container direction=\"row\" spacing={1}>\n                                <Grid item container md={4}>\n                                    <Grid item sm={12}>\n                                        <Typography variant=\"subtitle1\" align=\"center\">\n                                            Total Rent Charges: {currencyFormatter.format(totalRentCharges)}\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                                <Grid item container md={4}>\n                                    <Grid item sm={12}>\n                                        <Typography variant=\"subtitle1\" align=\"center\">\n                                            Total Rent Payments: {currencyFormatter.format(totalRentPayments)}\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                                <Grid item container md={4}>\n                                    <Grid item sm={12}>\n                                        <Typography variant=\"subtitle1\" align=\"center\">\n                                            Outstanding Rent Balances: {currencyFormatter.format((totalRentCharges - totalRentPayments))}\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Box>\n                    </Grid>\n                    {\n                        addFullPaymentsToChargesModalState ?\n                            <AddPaymentToChargesModal open={addFullPaymentsToChargesModalState}\n                                chargesToAddPayments={rentalCharges.filter(({ id }) => selected.includes(id))\n                                    .filter(({ payed_status }) => payed_status === false)}\n                                handleClose={handleAddFullPaymentsToChargesToggle}\n                                handleItemSubmit={handleItemSubmit} /> : null\n                    }\n                    {\n                        editChargeModalState ?\n                            <ChargeEditForm open={editChargeModalState}\n                                chargeToEdit={rentalCharges.find(({ id }) => id === chargeToEditId)}\n                                handleClose={toggleEditChargeModalState}\n                                handleItemSubmit={handleItemSubmit} /> : null\n                    }\n                    {\n                        addPaymentToChargeModalState ?\n                            <PaymentInputForm open={addPaymentToChargeModalState}\n                                chargeToAddPaymentTo={rentalCharges.find(({ id }) => selected.includes(id))}\n                                handleClose={toggleAddPaymentToChargeModal}\n                                handleItemSubmit={handleItemSubmit} /> : null\n                    }\n                    <Grid item xs={12}>\n                        <CommonTable\n                            selected={selected}\n                            setSelected={setSelected}\n                            rows={filteredRentCharges}\n                            headCells={headCells}\n                            optionalEditHandler={(selectedRowIndex) => { setChargeToEditId(selectedRowIndex); toggleEditChargeModalState() }}\n                            noDetailsCol={true}\n                            deleteUrl={'transactions-charges'}\n                            handleDelete={handleRentChargeDelete}\n                        />\n                    </Grid>\n                </Grid>\n            </TabPanel>\n        </Layout>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        properties: state.properties,\n        rentalPayments: state.rentalPayments.filter((payment) => payment.payment_type === 'rent'),\n        rentalCharges: state.rentalCharges\n            .filter((charge) => charge.charge_type === 'rent')\n            .map((charge) => {\n                const tenant = state.contacts.find((contact) => contact.id === charge.tenant_id) || {};\n                const unitWithCharge = state.propertyUnits.find(({ id }) => id === charge.unit_id) || {};\n                const chargePayments = state.rentalPayments.filter((payment) => payment.charge_id === charge.id)\n                const payed_amount = chargePayments.reduce((total, currentValue) => {\n                    return total + parseFloat(currentValue.payment_amount) || 0\n                }, 0)\n                const property = state.properties.find(property => property.id === charge.property_id) || {}\n                const chargeDetails = {\n                    tenant_name: `${tenant.first_name} ${tenant.last_name}`,\n                    tenant_id_number: tenant.id_number,\n                    payed_status: chargePayments.length ? true : false,\n                    payed_amount: payed_amount,\n                    balance: (parseFloat(charge.charge_amount) - payed_amount),\n                    unit_details: `${property.ref} - ${unitWithCharge.ref}`,\n                }\n                return Object.assign({}, charge, chargeDetails);\n            }).sort((charge1, charge2) => parse(charge2.charge_date, 'yyyy-MM-dd', new Date()) -\n                parse(charge1.charge_date, 'yyyy-MM-dd', new Date())),\n        contacts: state.contacts,\n        leases: state.leases,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleItemSubmit: (item, url) => dispatch(handleItemFormSubmit(item, url)),\n        handleItemDelete: (itemId, url) => dispatch(handleDelete(itemId, url)),\n    }\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RentRollPage);\n"]},"metadata":{},"sourceType":"module"}