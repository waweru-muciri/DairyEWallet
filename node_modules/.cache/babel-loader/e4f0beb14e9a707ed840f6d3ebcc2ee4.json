{"ast":null,"code":"var _jsxFileName = \"/home/brianmuciri/Projects/farm-ledger-ld/src/Routes/SignIn.js\";\nimport React from \"react\";\nimport Layout from \"../components/GeneralLayout\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Avatar from '@material-ui/core/Avatar';\nimport { connect } from \"react-redux\";\nimport { Formik } from \"formik\";\nimport { setCurrentUser } from \"../actions/actions\";\nimport PasswordResetDialog from \"../components/login/ResetPassword\";\nimport * as Yup from \"yup\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory } from \"react-router-dom\";\nconst SignInSchema = Yup.object().shape({\n  password: Yup.string().trim().min(6, \"Too Short!\").max(50, \"We prefer insecure system, try a shorter password.\").required(\"Pasword is Required\"),\n  email: Yup.string().trim().email(\"Invalid email\").required(\"Email is Required\")\n});\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%',\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  }\n}));\n\nlet SignInLayout = ({\n  setUser\n}) => {\n  const classes = useStyles();\n  const history = useHistory();\n  let loginValues = {\n    email: \"\",\n    password: \"\"\n  };\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(Layout, {\n    pageTitle: \"Sign In\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: loginValues,\n    validationSchema: SignInSchema,\n    onSubmit: async (values, {\n      resetForm,\n      setStatus,\n      setSubmitting\n    }) => {\n      try {\n        setUser({\n          displayName: \"Farmer Name\",\n          email: \"hello@email.com\",\n          emailVerified: true,\n          photoURL: \"\",\n          uid: \"123456\",\n          id: \"123456\",\n          isAdmin: true,\n          tenant_id: \"123456\"\n        });\n        resetForm({});\n        history.push(\"/app/\");\n      } catch (error) {\n        setSubmitting(false);\n        setStatus({\n          error: error.message\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, ({\n    values,\n    handleSubmit,\n    touched,\n    status,\n    errors,\n    handleChange,\n    handleBlur,\n    isSubmitting\n  }) => {\n    const passwordOrOtherError = touched.password && errors.password || status && status.error;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(PasswordResetDialog, {\n      open: open,\n      handleClose: handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      className: classes.avatar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(LockOutlinedIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"form\", {\n      className: classes.form,\n      method: \"post\",\n      id: \"signInForm\",\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      direction: \"column\",\n      spacing: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      container: true,\n      direction: \"column\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"subtitle1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 25\n      }\n    }, \"Leena's Dairy E-Wallet\")), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      href: \"./rentRoll.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      align: \"center\",\n      component: \"h1\",\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 23\n      }\n    }, \"Sign In\")), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      fullWidth: true,\n      variant: \"outlined\",\n      autoFocus: true,\n      margin: \"dense\",\n      id: \"email\",\n      label: \"Email Address\",\n      value: values.email,\n      onBlur: handleBlur,\n      onChange: handleChange,\n      helperText: touched.email && errors.email,\n      error: errors.email && touched.email,\n      type: \"email\",\n      InputLabelProps: {\n        shrink: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      fullWidth: true,\n      variant: \"outlined\",\n      margin: \"dense\",\n      id: \"password\",\n      label: \"Password\",\n      type: \"password\",\n      value: values.password,\n      onBlur: handleBlur,\n      onChange: handleChange,\n      helperText: passwordOrOtherError,\n      error: passwordOrOtherError ? true : false,\n      InputLabelProps: {\n        shrink: true\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      disabled: isSubmitting,\n      type: \"submit\",\n      variant: \"outlined\",\n      color: \"primary\",\n      form: \"signInForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 23\n      }\n    }, \"Sign In\"))))));\n  }));\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setUser: user => dispatch(setCurrentUser(user))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(SignInLayout);","map":{"version":3,"sources":["/home/brianmuciri/Projects/farm-ledger-ld/src/Routes/SignIn.js"],"names":["React","Layout","Typography","TextField","Button","Grid","LockOutlinedIcon","Avatar","connect","Formik","setCurrentUser","PasswordResetDialog","Yup","makeStyles","useHistory","SignInSchema","object","shape","password","string","trim","min","max","required","email","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","SignInLayout","setUser","classes","history","loginValues","open","setOpen","useState","handleClickOpen","handleClose","values","resetForm","setStatus","setSubmitting","displayName","emailVerified","photoURL","uid","id","isAdmin","tenant_id","push","error","message","handleSubmit","touched","status","errors","handleChange","handleBlur","isSubmitting","passwordOrOtherError","shrink","mapDispatchToProps","dispatch","user"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Layout from \"../components/GeneralLayout\";\nimport Typography from \"@material-ui/core/Typography\"\nimport TextField from \"@material-ui/core/TextField\"\nimport Button from \"@material-ui/core/Button\"\nimport Grid from \"@material-ui/core/Grid\"\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Avatar from '@material-ui/core/Avatar';\nimport { connect } from \"react-redux\";\nimport { Formik } from \"formik\";\nimport { setCurrentUser } from \"../actions/actions\";\nimport PasswordResetDialog from \"../components/login/ResetPassword\";\nimport * as Yup from \"yup\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory } from \"react-router-dom\";\n\nconst SignInSchema = Yup.object().shape({\n  password: Yup.string().trim()\n    .min(6, \"Too Short!\")\n    .max(50, \"We prefer insecure system, try a shorter password.\")\n    .required(\"Pasword is Required\"),\n  email: Yup.string().trim().email(\"Invalid email\").required(\"Email is Required\"),\n});\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n}));\n\n\n\nlet SignInLayout = ({ setUser }) => {\n\n  const classes = useStyles();\n  const history = useHistory();\n  let loginValues = { email: \"\", password: \"\" };\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Layout pageTitle=\"Sign In\">\n      <Formik\n        initialValues={loginValues}\n        validationSchema={SignInSchema}\n        onSubmit={async (values, { resetForm, setStatus, setSubmitting }) => {\n          try {\n            setUser({\n              displayName: \"Farmer Name\",\n              email: \"hello@email.com\",\n              emailVerified: true,\n              photoURL: \"\",\n              uid: \"123456\",\n              id: \"123456\",\n              isAdmin: true,\n              tenant_id: \"123456\"\n            })\n            resetForm({});\n            history.push(\"/app/\")\n          } catch (error) {\n            setSubmitting(false);\n            setStatus({ error: error.message });\n          }\n        }}>\n        {({\n          values,\n          handleSubmit,\n          touched,\n          status,\n          errors,\n          handleChange,\n          handleBlur,\n          isSubmitting,\n        }) => {\n          const passwordOrOtherError = (touched.password && errors.password) || (status && status.error)\n          return (\n            <div>\n              <PasswordResetDialog open={open} handleClose={handleClose} />\n              <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                  <LockOutlinedIcon />\n                </Avatar>\n                <form\n                  className={classes.form}\n                  method=\"post\"\n                  id=\"signInForm\"\n                  onSubmit={handleSubmit}\n                >\n                  <Grid container justify=\"center\" direction=\"column\" spacing={3}>\n                    <Grid item container direction=\"column\" alignItems=\"center\">\n                      <Grid item>\n                        <Typography variant=\"subtitle1\">\n                          Leena's Dairy E-Wallet\n                        </Typography>\n                      </Grid>\n                      <Grid item>\n                        <img href=\"./rentRoll.png\"/>\n                      </Grid>\n                    </Grid>\n                    <Grid item>\n                      <Typography align=\"center\" component=\"h1\" variant=\"h5\">\n                        Sign In\n                      </Typography>\n                    </Grid>\n                    <Grid item>\n                      <TextField\n                        fullWidth\n                        variant=\"outlined\"\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"email\"\n                        label=\"Email Address\"\n                        value={values.email}\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        helperText={touched.email && errors.email}\n                        error={errors.email && touched.email}\n                        type=\"email\"\n                        InputLabelProps={{ shrink: true }}\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <TextField\n                        fullWidth\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        id=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        value={values.password}\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        helperText={passwordOrOtherError}\n                        error={(passwordOrOtherError ? true : false)}\n                        InputLabelProps={{ shrink: true }}\n                      />\n                    </Grid>\n                    <Grid item>\n                      <Button\n                        disabled={isSubmitting}\n                        type=\"submit\"\n                        variant=\"outlined\"\n                        color=\"primary\"\n                        form=\"signInForm\"\n                      >\n                        Sign In\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </form>\n              </div>\n            </div>\n          )\n        }}\n      </Formik>\n    </Layout>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setUser: (user) => dispatch(setCurrentUser(user)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(SignInLayout);\n"]},"metadata":{},"sourceType":"module"}