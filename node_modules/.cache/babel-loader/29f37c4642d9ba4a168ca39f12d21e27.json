{"ast":null,"code":"var _jsxFileName = \"/home/brianmuciri/Projects/farm-ledger-ld/src/Routes/UserProfilePage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Layout from \"../components/PrivateLayout\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport DataGridTable from '../components/DataGridTable';\nimport Tab from '@material-ui/core/Tab';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport InfoDisplayPaper from \"../components/InfoDisplayPaper\";\nimport { commonStyles } from '../components/commonStyles';\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport TabPanel from \"../components/TabPanel\";\nimport Button from '@material-ui/core/Button';\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { Link } from \"react-router-dom\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport ExportToExcelBtn from \"../components/ExportToExcelBtn\";\nimport CommonTable from \"../components/table/commonTable\";\nimport PrintArrayToPdf from \"../components/PrintArrayToPdfBtn\";\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport Box from '@material-ui/core/Box';\nimport { handleDelete } from \"../actions/actions\";\nimport { Doughnut } from 'react-chartjs-2';\nimport TEAL from '@material-ui/core/colors/teal';\nimport RED from '@material-ui/core/colors/red';\nimport GREY from \"@material-ui/core/colors/grey\";\nimport { getUnitTypes } from \"../assets/commonAssets\";\nconst UNIT_TYPES_WITH_DETAILS = getUnitTypes();\nconst legendOpts = {\n  display: true,\n  position: 'top',\n  fullWidth: true,\n  reverse: false,\n  labels: {\n    fontColor: GREY[800],\n    fontSize: 14\n  }\n};\nconst headCells = [{\n  id: \"from_date\",\n  numeric: false,\n  disablePadding: true,\n  label: \"From Date\"\n}, {\n  id: \"to_date\",\n  numeric: false,\n  disablePadding: true,\n  label: \"To Date\"\n}, {\n  id: \"property_ref\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Property\"\n}, {\n  id: \"collection_date\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Date Collected\"\n}, {\n  id: \"fees_amount\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Amount Collected\"\n}, {\n  id: \"delete\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Delete\"\n}];\nconst propertiesColumns = [{\n  field: 'ref',\n  headerName: 'Property Name/Ref'\n}, {\n  field: \"address\",\n  headerName: \"Property Address\"\n}, {\n  field: \"city\",\n  headerName: \"Location\"\n}, {\n  field: \"units\",\n  headerName: \"Number of Units\"\n}];\n\nlet UserDetailsPage = ({\n  totalAssetsRentValue,\n  activeLeasesNumber,\n  propertyUnits,\n  properties,\n  userDetails,\n  managementFees,\n  match,\n  handleItemDelete\n}) => {\n  const classes = commonStyles();\n  const [tabValue, setTabValue] = React.useState(0);\n  const [managementFeesItems, setManagementFeesItems] = useState([]);\n  const [filteredManagementFeesItems, setFilteredManagementFeesItems] = useState([]);\n  const [propertyFilter, setPropertyFilter] = useState(\"all\");\n  const [selected, setSelected] = useState([]);\n  useEffect(() => {\n    setManagementFeesItems(managementFees);\n    setFilteredManagementFeesItems(managementFees);\n  }, [managementFees]);\n  const totalPropertyUnits = propertyUnits.length; //get occupancy graph data\n\n  const rentalUnitsOccupancyData = {\n    datasets: [],\n    labels: []\n  };\n  rentalUnitsOccupancyData.labels.push('Occupied Units', 'Vacant Units');\n  rentalUnitsOccupancyData.datasets.push({\n    data: [activeLeasesNumber, propertyUnits.length - activeLeasesNumber],\n    backgroundColor: [RED[800], RED[200]]\n  }); //get the number of the different units by category\n\n  const rentalUnitsDistributionData = {\n    datasets: [],\n    labels: []\n  }; //get the unique unit types for the property units\n\n  const unitTypes = Array.from(new Set(propertyUnits.map(unit => unit.unit_type))); //get the unit names for display to the user\n\n  const unitNamesForDisplay = unitTypes.map(unitType => {\n    const unitTypeDetails = UNIT_TYPES_WITH_DETAILS.find(({\n      id\n    }) => id === unitType) || {};\n    return `${unitTypeDetails.displayValue}s`;\n  }); //push the unit names for display to the labels array \n\n  rentalUnitsDistributionData.labels.push(...unitNamesForDisplay);\n  rentalUnitsDistributionData.datasets.push({\n    data: unitTypes.map(unit_type => {\n      return propertyUnits.filter(property => property.unit_type === unit_type).length;\n    }),\n    backgroundColor: unitTypes.map((_unit_type, key) => TEAL[(key + 1) * 100])\n  });\n\n  const handleTabChange = (event, newValue) => {\n    setTabValue(newValue);\n  };\n\n  const handleSearchFormSubmit = event => {\n    event.preventDefault(); //filter the management fees according to the search criteria here\n\n    const managementFeesForProperty = managementFeesItems.filter(({\n      property_id\n    }) => propertyFilter === \"all\" ? true : property_id === propertyFilter);\n    setFilteredManagementFeesItems(managementFeesForProperty);\n  };\n\n  return /*#__PURE__*/React.createElement(Layout, {\n    pageTitle: \"User Profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Tabs, {\n    value: tabValue,\n    onChange: handleTabChange,\n    \"aria-label\": \"simple tabs example\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Tab, {\n    label: \"User Profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Tab, {\n    label: \"Management Revenue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(TabPanel, {\n    value: tabValue,\n    index: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    direction: \"column\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 25\n    }\n  }, \"User Details\")), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    item: true,\n    justify: \"center\",\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    direction: \"column\",\n    xs: 12,\n    md: 4,\n    spacing: 2,\n    justify: \"center\",\n    alignItems: \"stretch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.fullHeightWidthContainer,\n    variant: \"outlined\",\n    elevation: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    direction: \"column\",\n    alignItems: \"center\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    alt: \"User Image\",\n    src: userDetails.user_avatar_url,\n    className: classes.largeAvatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 49\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    align: \"center\",\n    variant: \"subtitle1\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 49\n    }\n  }, userDetails.title, \" \", userDetails.first_name, \" \", userDetails.last_name)))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.fullHeightWidthContainer,\n    variant: \"outlined\",\n    elevation: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    align: \"center\",\n    variant: \"subtitle1\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 41\n    }\n  }, \"Contact Info\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 41\n    }\n  }, \"ID Number: \", userDetails.id_number || '-'), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 41\n    }\n  }, \"Personal Phone Number: \", userDetails.personal_phone_number || '-'), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 41\n    }\n  }, \"Work Phone Number: \", userDetails.work_mobile_number || '-'), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 41\n    }\n  }, \"Home Phone Number: \", userDetails.home_phone_number || '-'), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 41\n    }\n  }, \"Email: \", userDetails.primary_email || '-'))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    xs: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    variant: \"outlined\",\n    elevation: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    align: \"center\",\n    variant: \"subtitle1\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 41\n    }\n  }, \"Property Portfolio\"), /*#__PURE__*/React.createElement(DataGridTable, {\n    rows: properties,\n    headCells: propertiesColumns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 41\n    }\n  })))))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    item: true,\n    alignItems: \"stretch\",\n    justify: \"center\",\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 4,\n    container: true,\n    spacing: 2,\n    direction: \"column\",\n    alignItems: \"center\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(InfoDisplayPaper, {\n    xs: 12,\n    title: \"Total Rental Units\",\n    value: totalPropertyUnits,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(InfoDisplayPaper, {\n    xs: 12,\n    title: \"Total Units Rent Value\",\n    value: totalAssetsRentValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(InfoDisplayPaper, {\n    xs: 12,\n    title: \"Total Active Rental Agreements\",\n    value: activeLeasesNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    md: 8,\n    spacing: 2,\n    direction: \"row\",\n    alignItems: \"stretch\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.fullHeightWidthContainer,\n    variant: \"outlined\",\n    elevation: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    align: \"center\",\n    variant: \"subtitle1\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 41\n    }\n  }, \"Current Unit Occupancy\"), /*#__PURE__*/React.createElement(Doughnut, {\n    height: 300,\n    data: rentalUnitsOccupancyData,\n    legend: legendOpts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 41\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.fullHeightWidthContainer,\n    variant: \"outlined\",\n    elevation: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    align: \"center\",\n    variant: \"subtitle1\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 41\n    }\n  }, \"Unit Types Distribution\"), /*#__PURE__*/React.createElement(Doughnut, {\n    height: 300,\n    data: rentalUnitsDistributionData,\n    legend: legendOpts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 41\n    }\n  })))))))), /*#__PURE__*/React.createElement(TabPanel, {\n    value: tabValue,\n    index: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    justify: \"space-evenly\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 25\n    }\n  }, \"Management Fees\")), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    item: true,\n    alignItems: \"center\",\n    direction: \"row\",\n    key: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"medium\",\n    startIcon: /*#__PURE__*/React.createElement(AddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 44\n      }\n    }),\n    component: Link,\n    to: `${match.url}/management-fees/new`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 29\n    }\n  }, \"Collect Fees\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"medium\",\n    startIcon: /*#__PURE__*/React.createElement(EditIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 44\n      }\n    }),\n    disabled: !selected.length,\n    component: Link,\n    to: `${match.url}/management-fees/${selected[0]}/edit`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 29\n    }\n  }, \"Edit\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(PrintArrayToPdf, {\n    disabled: !selected.length,\n    reportName: 'Management Fees Records',\n    reportTitle: 'Management Fees Data',\n    headCells: headCells,\n    dataToPrint: managementFeesItems.filter(({\n      id\n    }) => selected.includes(id)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(ExportToExcelBtn, {\n    disabled: !selected.length,\n    reportName: 'Management Fees Records',\n    reportTitle: 'Management Fees Data',\n    headCells: headCells,\n    dataToPrint: managementFeesItems.filter(({\n      id\n    }) => selected.includes(id)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    border: 1,\n    borderRadius: \"borderRadius\",\n    borderColor: \"grey.400\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    id: \"managementFeesSearchForm\",\n    onSubmit: handleSearchFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"center\",\n    alignItems: \"center\",\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    select: true,\n    variant: \"outlined\",\n    name: \"property_filter\",\n    label: \"Property\",\n    id: \"property_filter\",\n    onChange: event => {\n      setPropertyFilter(event.target.value);\n    },\n    value: propertyFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    key: \"all\",\n    value: \"all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 45\n    }\n  }, \"All\"), properties.map((property, index) => /*#__PURE__*/React.createElement(MenuItem, {\n    key: index,\n    value: property.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 53\n    }\n  }, property.ref)))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    form: \"managementFeesSearchForm\",\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"medium\",\n    startIcon: /*#__PURE__*/React.createElement(SearchIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 56\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 41\n    }\n  }, \"SEARCH\")))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CommonTable, {\n    selected: selected,\n    setSelected: setSelected,\n    rows: filteredManagementFeesItems,\n    headCells: headCells,\n    deleteUrl: 'management-fees',\n    handleDelete: handleItemDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 25\n    }\n  })))));\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const propertiesAssignedToUser = state.properties.filter(({\n    assigned_to\n  }) => assigned_to === ownProps.match.params.userId).map(property => Object.assign(property, {\n    units: state.propertyUnits.filter(({\n      property_id\n    }) => property_id === property.id).length\n  })); //map ids of properties assigned to user to enable for a quick search\n\n  const idsOfPropertiesAssignedToUser = propertiesAssignedToUser.map(({\n    id\n  }) => id); //get all active leases assigned to user's properties\n\n  const totalActiveLeases = state.leases.filter(({\n    property_id\n  }) => idsOfPropertiesAssignedToUser.includes(property_id)).filter(({\n    terminated\n  }) => terminated !== true);\n  return {\n    managementFees: state.managementFees.filter(({\n      user_id\n    }) => user_id === ownProps.match.params.userId).map(managementFee => {\n      const propertyWithFeeDetails = state.properties.find(({\n        id\n      }) => id === managementFee.property_id) || {};\n      return Object.assign({}, managementFee, {\n        property_ref: propertyWithFeeDetails.ref\n      });\n    }),\n    properties: propertiesAssignedToUser,\n    activeLeasesNumber: totalActiveLeases.length,\n    totalAssetsRentValue: totalActiveLeases.reduce((total, currentValue) => total + parseFloat(currentValue.rent_amount) || 0, 0),\n    propertyUnits: state.propertyUnits.filter(({\n      property_id\n    }) => idsOfPropertiesAssignedToUser.includes(property_id)),\n    userDetails: state.users.find(({\n      id\n    }) => id === ownProps.match.params.userId) || {}\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleItemDelete: (itemId, url) => dispatch(handleDelete(itemId, url))\n  };\n};\n\nUserDetailsPage = connect(mapStateToProps, mapDispatchToProps)(UserDetailsPage);\nexport default withRouter(UserDetailsPage);","map":{"version":3,"sources":["/home/brianmuciri/Projects/farm-ledger-ld/src/Routes/UserProfilePage.js"],"names":["React","useState","useEffect","Layout","Typography","Avatar","Grid","Card","CardContent","DataGridTable","Tab","AppBar","Tabs","InfoDisplayPaper","commonStyles","connect","withRouter","TabPanel","Button","EditIcon","SearchIcon","Link","AddIcon","ExportToExcelBtn","CommonTable","PrintArrayToPdf","MenuItem","TextField","Box","handleDelete","Doughnut","TEAL","RED","GREY","getUnitTypes","UNIT_TYPES_WITH_DETAILS","legendOpts","display","position","fullWidth","reverse","labels","fontColor","fontSize","headCells","id","numeric","disablePadding","label","propertiesColumns","field","headerName","UserDetailsPage","totalAssetsRentValue","activeLeasesNumber","propertyUnits","properties","userDetails","managementFees","match","handleItemDelete","classes","tabValue","setTabValue","managementFeesItems","setManagementFeesItems","filteredManagementFeesItems","setFilteredManagementFeesItems","propertyFilter","setPropertyFilter","selected","setSelected","totalPropertyUnits","length","rentalUnitsOccupancyData","datasets","push","data","backgroundColor","rentalUnitsDistributionData","unitTypes","Array","from","Set","map","unit","unit_type","unitNamesForDisplay","unitType","unitTypeDetails","find","displayValue","filter","property","_unit_type","key","handleTabChange","event","newValue","handleSearchFormSubmit","preventDefault","managementFeesForProperty","property_id","fullHeightWidthContainer","user_avatar_url","largeAvatar","title","first_name","last_name","id_number","personal_phone_number","work_mobile_number","home_phone_number","primary_email","url","includes","form","target","value","index","ref","mapStateToProps","state","ownProps","propertiesAssignedToUser","assigned_to","params","userId","Object","assign","units","idsOfPropertiesAssignedToUser","totalActiveLeases","leases","terminated","user_id","managementFee","propertyWithFeeDetails","property_ref","reduce","total","currentValue","parseFloat","rent_amount","users","mapDispatchToProps","dispatch","itemId"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Layout from \"../components/PrivateLayout\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport DataGridTable from '../components/DataGridTable';\nimport Tab from '@material-ui/core/Tab';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport InfoDisplayPaper from \"../components/InfoDisplayPaper\";\nimport { commonStyles } from '../components/commonStyles'\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport TabPanel from \"../components/TabPanel\";\nimport Button from '@material-ui/core/Button';\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { Link } from \"react-router-dom\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport ExportToExcelBtn from \"../components/ExportToExcelBtn\";\nimport CommonTable from \"../components/table/commonTable\";\nimport PrintArrayToPdf from \"../components/PrintArrayToPdfBtn\";\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport Box from '@material-ui/core/Box';\nimport { handleDelete } from \"../actions/actions\";\nimport { Doughnut } from 'react-chartjs-2';\nimport TEAL from '@material-ui/core/colors/teal';\nimport RED from '@material-ui/core/colors/red';\nimport GREY from \"@material-ui/core/colors/grey\";\nimport { getUnitTypes } from \"../assets/commonAssets\";\n\n\nconst UNIT_TYPES_WITH_DETAILS = getUnitTypes();\n\n\nconst legendOpts = {\n    display: true,\n    position: 'top',\n    fullWidth: true,\n    reverse: false,\n    labels: {\n        fontColor: GREY[800],\n        fontSize: 14,\n    }\n};\n\nconst headCells = [\n    { id: \"from_date\", numeric: false, disablePadding: true, label: \"From Date\" },\n    { id: \"to_date\", numeric: false, disablePadding: true, label: \"To Date\" },\n    { id: \"property_ref\", numeric: false, disablePadding: true, label: \"Property\" },\n    { id: \"collection_date\", numeric: false, disablePadding: true, label: \"Date Collected\" },\n    { id: \"fees_amount\", numeric: false, disablePadding: true, label: \"Amount Collected\" },\n    { id: \"delete\", numeric: false, disablePadding: true, label: \"Delete\" },\n];\n\nconst propertiesColumns = [\n    { field: 'ref', headerName: 'Property Name/Ref' },\n    { field: \"address\", headerName: \"Property Address\" },\n    { field: \"city\", headerName: \"Location\" },\n    { field: \"units\", headerName: \"Number of Units\" },\n];\n\n\nlet UserDetailsPage = ({\n    totalAssetsRentValue,\n    activeLeasesNumber,\n    propertyUnits,\n    properties,\n    userDetails,\n    managementFees,\n    match,\n    handleItemDelete\n}) => {\n    const classes = commonStyles()\n    const [tabValue, setTabValue] = React.useState(0);\n    const [managementFeesItems, setManagementFeesItems] = useState([])\n    const [filteredManagementFeesItems, setFilteredManagementFeesItems] = useState([])\n    const [propertyFilter, setPropertyFilter] = useState(\"all\");\n    const [selected, setSelected] = useState([]);\n\n    useEffect(() => {\n        setManagementFeesItems(managementFees)\n        setFilteredManagementFeesItems(managementFees)\n    }, [managementFees])\n\n    const totalPropertyUnits = propertyUnits.length\n\n    //get occupancy graph data\n    const rentalUnitsOccupancyData = { datasets: [], labels: [] }\n    rentalUnitsOccupancyData.labels.push('Occupied Units', 'Vacant Units')\n    rentalUnitsOccupancyData.datasets.push(\n        {\n            data: [activeLeasesNumber, (propertyUnits.length - activeLeasesNumber)],\n            backgroundColor: [RED[800], RED[200]]\n        })\n    //get the number of the different units by category\n    const rentalUnitsDistributionData = { datasets: [], labels: [] }\n    //get the unique unit types for the property units\n    const unitTypes = Array.from(new Set(propertyUnits.map(unit => unit.unit_type)))\n    //get the unit names for display to the user\n    const unitNamesForDisplay = unitTypes.map(unitType => {\n        const unitTypeDetails = UNIT_TYPES_WITH_DETAILS.find(({ id }) => id === unitType) || {}\n        return `${unitTypeDetails.displayValue}s`\n    })\n    //push the unit names for display to the labels array \n    rentalUnitsDistributionData.labels.push(...unitNamesForDisplay);\n\n    rentalUnitsDistributionData.datasets.push({\n        data: unitTypes\n            .map(unit_type => {\n                return propertyUnits.filter((property) => property.unit_type === unit_type).length\n            }),\n        backgroundColor: unitTypes.map((_unit_type, key) => TEAL[(key + 1) * 100])\n    })\n\n    const handleTabChange = (event, newValue) => {\n        setTabValue(newValue);\n    };\n\n    const handleSearchFormSubmit = (event) => {\n        event.preventDefault();\n        //filter the management fees according to the search criteria here\n        const managementFeesForProperty =\n            managementFeesItems\n                .filter(({ property_id }) => propertyFilter === \"all\" ? true : property_id === propertyFilter)\n        setFilteredManagementFeesItems(managementFeesForProperty);\n\n    };\n\n    return (\n        <Layout pageTitle=\"User Profile\">\n            <AppBar position=\"static\">\n                <Tabs value={tabValue} onChange={handleTabChange} aria-label=\"simple tabs example\">\n                    <Tab label=\"User Profile\" />\n                    <Tab label=\"Management Revenue\" />\n                </Tabs>\n            </AppBar>\n            <TabPanel value={tabValue} index={0}>\n                <Grid container justify=\"center\" direction=\"column\" spacing={2}>\n                    <Grid item xs={12} >\n                        <Typography variant=\"h6\">User Details</Typography>\n                    </Grid>\n                    <Grid\n                        container\n                        direction=\"row\"\n                        item\n                        justify=\"center\"\n                        spacing={4}\n                    >\n                        <Grid container item direction=\"column\" xs={12} md={4} spacing={2} justify=\"center\" alignItems=\"stretch\">\n                            <Grid item md>\n                                <Card className={classes.fullHeightWidthContainer} variant=\"outlined\" elevation={1}>\n                                    <CardContent>\n                                        <Grid container spacing={2} direction=\"column\" alignItems=\"center\" justify=\"center\">\n                                            <Grid item>\n                                                <Avatar\n                                                    alt=\"User Image\"\n                                                    src={userDetails.user_avatar_url}\n                                                    className={classes.largeAvatar}\n                                                />\n                                            </Grid>\n                                            <Grid item>\n                                                <Typography gutterBottom align=\"center\" variant=\"subtitle1\" component=\"h2\">\n                                                    {userDetails.title} {userDetails.first_name} {userDetails.last_name}\n                                                </Typography>\n                                            </Grid>\n                                        </Grid>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item>\n                                <Card className={classes.fullHeightWidthContainer} variant=\"outlined\" elevation={1}>\n                                    <CardContent>\n                                        <Typography gutterBottom align=\"center\" variant=\"subtitle1\" component=\"h2\">\n                                            Contact Info\n                                        </Typography>\n                                        <Typography variant=\"body2\" component=\"p\">\n                                            ID Number: {userDetails.id_number || '-'}\n                                        </Typography>\n                                        <Typography variant=\"body2\" component=\"p\">\n                                            Personal Phone Number: {userDetails.personal_phone_number || '-'}\n                                        </Typography>\n                                        <Typography variant=\"body2\" component=\"p\">\n                                            Work Phone Number: {userDetails.work_mobile_number || '-'}\n                                        </Typography>\n                                        <Typography variant=\"body2\" component=\"p\">\n                                            Home Phone Number: {userDetails.home_phone_number || '-'}\n                                        </Typography>\n                                        <Typography variant=\"body2\" component=\"p\">\n                                            Email: {userDetails.primary_email || '-'}\n                                        </Typography>\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                        </Grid>\n                        <Grid item container xs={12} md={8}>\n                            <Grid item xs={12}>\n                                <Card variant=\"outlined\" elevation={1}>\n                                    <CardContent>\n                                        <Typography gutterBottom align=\"center\" variant=\"subtitle1\" component=\"h2\">\n                                            Property Portfolio\n                                        </Typography>\n                                        <DataGridTable rows={properties} headCells={propertiesColumns} />\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid container direction=\"row\" item alignItems=\"stretch\" justify=\"center\" spacing={4}>\n                        <Grid item xs={12} md={4} container spacing={2} direction=\"column\" alignItems=\"center\" justify=\"center\">\n                            <InfoDisplayPaper xs={12} title={\"Total Rental Units\"} value={totalPropertyUnits} />\n                            <InfoDisplayPaper xs={12} title={\"Total Units Rent Value\"} value={totalAssetsRentValue} />\n                            <InfoDisplayPaper xs={12} title={\"Total Active Rental Agreements\"} value={activeLeasesNumber} />\n                        </Grid>\n                        <Grid container item xs={12} md={8} spacing={2} direction=\"row\" alignItems=\"stretch\" justify=\"center\">\n                            <Grid item xs={12} md>\n                                <Card className={classes.fullHeightWidthContainer} variant=\"outlined\" elevation={1}>\n                                    <CardContent>\n                                        <Typography gutterBottom align=\"center\" variant=\"subtitle1\" component=\"h2\">\n                                            Current Unit Occupancy\n                                        </Typography>\n                                        <Doughnut height={300} data={rentalUnitsOccupancyData} legend={legendOpts} />\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                            <Grid item xs={12} md>\n                                <Card className={classes.fullHeightWidthContainer} variant=\"outlined\" elevation={1}>\n                                    <CardContent>\n                                        <Typography gutterBottom align=\"center\" variant=\"subtitle1\" component=\"h2\">\n                                            Unit Types Distribution\n                                        </Typography>\n                                        <Doughnut height={300} data={rentalUnitsDistributionData} legend={legendOpts} />\n                                    </CardContent>\n                                </Card>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </TabPanel>\n            <TabPanel value={tabValue} index={1}>\n                <Grid\n                    container\n                    spacing={3}\n                    justify=\"space-evenly\"\n                    alignItems=\"center\"\n                >\n                    <Grid item xs={12}>\n                        <Typography variant=\"h6\">Management Fees</Typography>\n                    </Grid>\n                    <Grid\n                        container\n                        spacing={2}\n                        item\n                        alignItems=\"center\"\n                        direction=\"row\"\n                        key={1}\n                    >\n                        <Grid item>\n                            <Button\n                                type=\"button\"\n                                color=\"primary\"\n                                variant=\"contained\"\n                                size=\"medium\"\n                                startIcon={<AddIcon />}\n                                component={Link}\n                                to={`${match.url}/management-fees/new`}\n                            >\n                                Collect Fees\n                            </Button>\n                        </Grid>\n                        <Grid item>\n                            <Button\n                                type=\"button\"\n                                color=\"primary\"\n                                variant=\"contained\"\n                                size=\"medium\"\n                                startIcon={<EditIcon />}\n                                disabled={!selected.length}\n                                component={Link}\n                                to={`${match.url}/management-fees/${selected[0]}/edit`}\n                            >\n                                Edit\n                            </Button>\n                        </Grid>\n                        <Grid item>\n                            <PrintArrayToPdf\n                                disabled={!selected.length}\n                                reportName={'Management Fees Records'}\n                                reportTitle={'Management Fees Data'}\n                                headCells={headCells}\n                                dataToPrint={managementFeesItems.filter(({ id }) => selected.includes(id))}\n                            />\n                        </Grid>\n                        <Grid item>\n                            <ExportToExcelBtn\n                                disabled={!selected.length}\n                                reportName={'Management Fees Records'}\n                                reportTitle={'Management Fees Data'}\n                                headCells={headCells}\n                                dataToPrint={managementFeesItems.filter(({ id }) => selected.includes(id))}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Box\n                            border={1}\n                            borderRadius=\"borderRadius\"\n                            borderColor=\"grey.400\"\n                        >\n                            <form\n                                className={classes.form}\n                                id=\"managementFeesSearchForm\"\n                                onSubmit={handleSearchFormSubmit}\n                            >\n                                <Grid\n                                    container\n                                    spacing={2}\n                                    justify=\"center\"\n                                    alignItems=\"center\"\n                                    direction=\"row\"\n                                >\n                                    <Grid item xs={12} md={6}>\n                                        <TextField\n                                            fullWidth\n                                            select\n                                            variant=\"outlined\"\n                                            name=\"property_filter\"\n                                            label=\"Property\"\n                                            id=\"property_filter\"\n                                            onChange={(event) => {\n                                                setPropertyFilter(\n                                                    event.target.value\n                                                );\n                                            }}\n                                            value={propertyFilter}\n                                        >\n                                            <MenuItem key={\"all\"} value={\"all\"}>All</MenuItem>\n                                            {properties.map(\n                                                (property, index) => (\n                                                    <MenuItem\n                                                        key={index}\n                                                        value={property.id}\n                                                    >\n                                                        {property.ref}\n                                                    </MenuItem>\n                                                )\n                                            )}\n                                        </TextField>\n                                    </Grid>\n                                    <Grid item>\n                                        <Button\n                                            type=\"submit\"\n                                            form=\"managementFeesSearchForm\"\n                                            color=\"primary\"\n                                            variant=\"contained\"\n                                            size=\"medium\"\n                                            startIcon={<SearchIcon />}\n                                        >\n                                            SEARCH\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </form>\n                        </Box>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <CommonTable\n                            selected={selected}\n                            setSelected={setSelected}\n                            rows={filteredManagementFeesItems}\n                            headCells={headCells}\n                            deleteUrl={'management-fees'}\n                            handleDelete={handleItemDelete}\n                        />\n                    </Grid>\n                </Grid>\n            </TabPanel>\n        </Layout>\n    );\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const propertiesAssignedToUser = state.properties\n        .filter(({ assigned_to }) => assigned_to === ownProps.match.params.userId)\n        .map(property => Object.assign(\n            property,\n            {\n                units: state.propertyUnits.filter(({ property_id }) => property_id === property.id).length,\n            }));\n    //map ids of properties assigned to user to enable for a quick search\n    const idsOfPropertiesAssignedToUser = propertiesAssignedToUser.map(({ id }) => id)\n    //get all active leases assigned to user's properties\n    const totalActiveLeases = state.leases\n        .filter(({ property_id }) => idsOfPropertiesAssignedToUser.includes(property_id))\n        .filter(({ terminated }) => terminated !== true);\n    return {\n        managementFees: state.managementFees\n            .filter(({ user_id }) => user_id === ownProps.match.params.userId).map(managementFee => {\n                const propertyWithFeeDetails = state.properties.find(({ id }) => id === managementFee.property_id) || {}\n                return Object.assign({}, managementFee, { property_ref: propertyWithFeeDetails.ref })\n\n            }),\n        properties: propertiesAssignedToUser,\n        activeLeasesNumber: totalActiveLeases.length,\n        totalAssetsRentValue: totalActiveLeases\n            .reduce((total, currentValue) => total + parseFloat(currentValue.rent_amount) || 0, 0),\n        propertyUnits: state.propertyUnits\n            .filter(({ property_id }) => idsOfPropertiesAssignedToUser.includes(property_id)),\n        userDetails: state.users.find(({ id }) => id === ownProps.match.params.userId) || {}\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleItemDelete: (itemId, url) => dispatch(handleDelete(itemId, url)),\n    };\n};\n\nUserDetailsPage = connect(mapStateToProps, mapDispatchToProps)(UserDetailsPage);\n\nexport default withRouter(UserDetailsPage);\n"]},"metadata":{},"sourceType":"module"}