{"ast":null,"code":"import * as actionTypes from \"../assets/actionTypes\";\nexport function emailTemplates(state = [], action) {\n  switch (action.type) {\n    case actionTypes.EMAIL_TEMPLATES_FETCH_DATA_SUCCESS:\n      return action.emailTemplates;\n\n    case actionTypes.EDIT_EMAIL_TEMPLATE:\n      return state.map(emailTemplate => emailTemplate.id === action.emailTemplate.id ? Object.assign({}, emailTemplate, action.emailTemplate) : emailTemplate);\n\n    case actionTypes.ADD_EMAIL_TEMPLATE:\n      return [...state, action.emailTemplate];\n\n    case actionTypes.DELETE_EMAIL_TEMPLATE:\n      return state.filter(emailTemplate => emailTemplate.id !== action.emailTemplateId);\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/brianmuciri/Projects/farm-ledger-ld/src/reducers/emailTemplates.js"],"names":["actionTypes","emailTemplates","state","action","type","EMAIL_TEMPLATES_FETCH_DATA_SUCCESS","EDIT_EMAIL_TEMPLATE","map","emailTemplate","id","Object","assign","ADD_EMAIL_TEMPLATE","DELETE_EMAIL_TEMPLATE","filter","emailTemplateId"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,uBAA7B;AAEA,OAAO,SAASC,cAAT,CAAwBC,KAAK,GAAG,EAAhC,EAAoCC,MAApC,EAA4C;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKJ,WAAW,CAACK,kCAAjB;AACI,aAAOF,MAAM,CAACF,cAAd;;AAEJ,SAAKD,WAAW,CAACM,mBAAjB;AACI,aAAOJ,KAAK,CAACK,GAAN,CAAWC,aAAD,IACbA,aAAa,CAACC,EAAd,KAAqBN,MAAM,CAACK,aAAP,CAAqBC,EAA1C,GACMC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,aAAlB,EAAiCL,MAAM,CAACK,aAAxC,CADN,GAEMA,aAHH,CAAP;;AAMJ,SAAKR,WAAW,CAACY,kBAAjB;AACI,aAAO,CAAC,GAAGV,KAAJ,EAAWC,MAAM,CAACK,aAAlB,CAAP;;AAEJ,SAAKR,WAAW,CAACa,qBAAjB;AACI,aAAOX,KAAK,CAACY,MAAN,CAAcN,aAAD,IAAmBA,aAAa,CAACC,EAAd,KAAqBN,MAAM,CAACY,eAA5D,CAAP;;AAEJ;AACI,aAAOb,KAAP;AAlBR;AAoBH","sourcesContent":["import * as actionTypes from \"../assets/actionTypes\";\n\nexport function emailTemplates(state = [], action) {\n    switch (action.type) {\n        case actionTypes.EMAIL_TEMPLATES_FETCH_DATA_SUCCESS:\n            return action.emailTemplates;\n\n        case actionTypes.EDIT_EMAIL_TEMPLATE:\n            return state.map((emailTemplate) =>\n                emailTemplate.id === action.emailTemplate.id\n                    ? Object.assign({}, emailTemplate, action.emailTemplate)\n                    : emailTemplate\n            );\n\n        case actionTypes.ADD_EMAIL_TEMPLATE:\n            return [...state, action.emailTemplate];\n\n        case actionTypes.DELETE_EMAIL_TEMPLATE:\n            return state.filter((emailTemplate) => emailTemplate.id !== action.emailTemplateId);\n\n        default:\n            return state;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}