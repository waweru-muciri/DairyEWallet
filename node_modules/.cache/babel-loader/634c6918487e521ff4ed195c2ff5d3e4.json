{"ast":null,"code":"import * as actionTypes from \"../assets/actionTypes\";\nexport function managementFees(state = [], action) {\n  switch (action.type) {\n    case actionTypes.MANAGEMENT_FEES_FETCH_DATA_SUCCESS:\n      return action.managementFees;\n\n    case actionTypes.EDIT_MANAGEMENT_FEE:\n      return state.map(managementFees => managementFees.id === action.managementFees.id ? Object.assign({}, managementFees, action.managementFees) : managementFees);\n\n    case actionTypes.ADD_MANAGEMENT_FEE:\n      return [...state, action.managementFees];\n\n    case actionTypes.DELETE_MANAGEMENT_FEE:\n      return state.filter(managementFees => managementFees.id !== action.managementFeesId);\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/brianmuciri/Projects/farm-ledger-ld/src/reducers/managementFees.js"],"names":["actionTypes","managementFees","state","action","type","MANAGEMENT_FEES_FETCH_DATA_SUCCESS","EDIT_MANAGEMENT_FEE","map","id","Object","assign","ADD_MANAGEMENT_FEE","DELETE_MANAGEMENT_FEE","filter","managementFeesId"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,uBAA7B;AAEA,OAAO,SAASC,cAAT,CAAwBC,KAAK,GAAG,EAAhC,EAAoCC,MAApC,EAA4C;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKJ,WAAW,CAACK,kCAAjB;AACI,aAAOF,MAAM,CAACF,cAAd;;AAEJ,SAAKD,WAAW,CAACM,mBAAjB;AACI,aAAOJ,KAAK,CAACK,GAAN,CAAWN,cAAD,IACbA,cAAc,CAACO,EAAf,KAAsBL,MAAM,CAACF,cAAP,CAAsBO,EAA5C,GACMC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBT,cAAlB,EAAkCE,MAAM,CAACF,cAAzC,CADN,GAEMA,cAHH,CAAP;;AAMJ,SAAKD,WAAW,CAACW,kBAAjB;AACI,aAAO,CAAC,GAAGT,KAAJ,EAAWC,MAAM,CAACF,cAAlB,CAAP;;AAEJ,SAAKD,WAAW,CAACY,qBAAjB;AACI,aAAOV,KAAK,CAACW,MAAN,CACFZ,cAAD,IAAoBA,cAAc,CAACO,EAAf,KAAsBL,MAAM,CAACW,gBAD9C,CAAP;;AAIJ;AACI,aAAOZ,KAAP;AApBR;AAsBH","sourcesContent":["import * as actionTypes from \"../assets/actionTypes\";\n\nexport function managementFees(state = [], action) {\n    switch (action.type) {\n        case actionTypes.MANAGEMENT_FEES_FETCH_DATA_SUCCESS:\n            return action.managementFees;\n\n        case actionTypes.EDIT_MANAGEMENT_FEE:\n            return state.map((managementFees) =>\n                managementFees.id === action.managementFees.id\n                    ? Object.assign({}, managementFees, action.managementFees)\n                    : managementFees\n            );\n\n        case actionTypes.ADD_MANAGEMENT_FEE:\n            return [...state, action.managementFees];\n\n        case actionTypes.DELETE_MANAGEMENT_FEE:\n            return state.filter(\n                (managementFees) => managementFees.id !== action.managementFeesId\n            );\n\n        default:\n            return state;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}