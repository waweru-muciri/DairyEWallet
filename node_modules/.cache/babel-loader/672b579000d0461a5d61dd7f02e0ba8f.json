{"ast":null,"code":"var _jsxFileName = \"/home/brianmuciri/Projects/farm-ledger-ld/src/Routes/ProductPage.js\";\nimport React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport PageHeading from \"../components/PageHeading\";\nimport Layout from \"../components/PrivateLayout\";\nimport { connect } from \"react-redux\";\nimport ProductInputForm from \"../components/products/ProductInputForm\";\nimport { withRouter } from \"react-router-dom\";\nimport { handleItemFormSubmit } from '../actions/actions';\n\nlet MeterReadingPage = props => {\n  const {\n    history,\n    productToEdit,\n    handleItemSubmit\n  } = props;\n  const pageTitle = \"Product Details\";\n  return /*#__PURE__*/React.createElement(Layout, {\n    pageTitle: pageTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    key: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PageHeading, {\n    text: pageTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    key: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ProductInputForm, {\n    productToEdit: productToEdit,\n    handleItemSubmit: handleItemSubmit,\n    history: history,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }\n  }))));\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  //only allow adding meter readings to units with active leases\n  const unitsWithActiveLeases = state.leases.filter(({\n    terminated\n  }) => terminated !== true).map(activeLease => ({ ...state.propertyUnits.find(unit => unit.id === activeLease.unit_id),\n    tenant_id: Array.isArray(activeLease.tenants) ? activeLease.tenants[0] : ''\n  }));\n  return {\n    properties: state.properties,\n    unitsWithActiveLeases: unitsWithActiveLeases.sort((unit1, unit2) => unit1.ref < unit2.ref ? -1 : unit1.ref > unit2.ref ? 1 : 0),\n    productToEdit: state.products.find(({\n      id\n    }) => id === ownProps.match.params.productId) || {}\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleItemSubmit: (item, url) => dispatch(handleItemFormSubmit(item, url))\n  };\n};\n\nMeterReadingPage = connect(mapStateToProps, mapDispatchToProps)(MeterReadingPage);\nexport default withRouter(MeterReadingPage);","map":{"version":3,"sources":["/home/brianmuciri/Projects/farm-ledger-ld/src/Routes/ProductPage.js"],"names":["React","Grid","PageHeading","Layout","connect","ProductInputForm","withRouter","handleItemFormSubmit","MeterReadingPage","props","history","productToEdit","handleItemSubmit","pageTitle","mapStateToProps","state","ownProps","unitsWithActiveLeases","leases","filter","terminated","map","activeLease","propertyUnits","find","unit","id","unit_id","tenant_id","Array","isArray","tenants","properties","sort","unit1","unit2","ref","products","match","params","productId","mapDispatchToProps","dispatch","item","url"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport PageHeading from \"../components/PageHeading\";\nimport Layout from \"../components/PrivateLayout\";\nimport { connect } from \"react-redux\";\nimport ProductInputForm from \"../components/products/ProductInputForm\";\nimport { withRouter } from \"react-router-dom\";\nimport { handleItemFormSubmit } from '../actions/actions'\n\nlet MeterReadingPage = (props) => {\n    const { history, productToEdit, handleItemSubmit } = props;\n    const pageTitle = \"Product Details\";\n    return (\n        <Layout pageTitle={pageTitle}>\n            <Grid container justify=\"center\" direction=\"column\">\n                <Grid item key={1}>\n                    <PageHeading text={pageTitle} />\n                </Grid>\n                <Grid item key={2}>\n                    <ProductInputForm\n                        productToEdit={productToEdit}\n                        handleItemSubmit={handleItemSubmit}\n                        history={history}\n                    />\n                </Grid>\n            </Grid>\n        </Layout>\n    );\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    //only allow adding meter readings to units with active leases\n    const unitsWithActiveLeases = state.leases\n        .filter(({ terminated }) => terminated !== true)\n        .map(activeLease => ({\n            ...state.propertyUnits.find(unit => unit.id === activeLease.unit_id),\n            tenant_id: Array.isArray(activeLease.tenants) ? activeLease.tenants[0] : ''\n        }))\n\n    return {\n        properties: state.properties,\n        unitsWithActiveLeases: unitsWithActiveLeases.sort((unit1, unit2) => unit1.ref < unit2.ref ? -1 : unit1.ref > unit2.ref ? 1 : 0),\n        productToEdit: state.products.find(({ id }) => id === ownProps.match.params.productId) || {},\n    };\n};\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleItemSubmit: (item, url) => dispatch(handleItemFormSubmit(item, url)),\n    }\n};\n\nMeterReadingPage = connect(mapStateToProps, mapDispatchToProps)(MeterReadingPage);\n\nexport default withRouter(MeterReadingPage);\n"]},"metadata":{},"sourceType":"module"}