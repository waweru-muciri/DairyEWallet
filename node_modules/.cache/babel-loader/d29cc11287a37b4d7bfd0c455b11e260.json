{"ast":null,"code":"var _jsxFileName = \"/home/brianmuciri/Projects/farm-ledger-ld/src/Routes/CreditNotes.js\";\nimport Layout from \"../components/PrivateLayout\";\nimport Grid from \"@material-ui/core/Grid\";\nimport PageHeading from \"../components/PageHeading\";\nimport React, { useEffect, useState } from \"react\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Box from \"@material-ui/core/Box\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport ExportToExcelBtn from \"../components/ExportToExcelBtn\";\nimport { connect } from \"react-redux\";\nimport { handleItemFormSubmit, handleDelete } from \"../actions/actions\";\nimport CommonTable from \"../components/table/commonTable\";\nimport { withRouter } from \"react-router-dom\";\nimport { commonStyles } from \"../components/commonStyles\";\nimport PrintArrayToPdf from \"../components/PrintArrayToPdfBtn\";\nimport { getStartEndDatesForPeriod, getTransactionsFilterOptions } from \"../assets/commonAssets\";\nimport { parse, isWithinInterval } from \"date-fns\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport CreditNoteEditForm from \"../components/charges/EditCreditNote\";\nconst TRANSACTIONS_FILTER_OPTIONS = getTransactionsFilterOptions();\nconst headCells = [{\n  id: \"credit_issue_date\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Date Issued\"\n}, {\n  id: \"unit_ref\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Unit Number/Ref\"\n}, {\n  id: \"tenant_name\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Tenant Name\"\n}, {\n  id: \"tenant_id_number\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Tenant ID\"\n}, {\n  id: \"credit_amount\",\n  numeric: true,\n  disablePadding: true,\n  label: \"Credit Amount\"\n}, {\n  id: \"edit\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Edit\"\n}, {\n  id: \"delete\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Delete\"\n}];\n\nlet CreditNotesPage = ({\n  creditNotes,\n  contacts,\n  properties,\n  handleItemSubmit\n}) => {\n  const classes = commonStyles();\n  const [creditNotesItems, setCreditNotesItems] = useState([]);\n  const [filteredCreditNotesItems, setFilteredCreditNotesItems] = useState([]);\n  const [propertyFilter, setPropertyFilter] = useState(\"all\");\n  const [periodFilter, setPeriodFilter] = useState(\"month-to-date\");\n  const [fromDateFilter, setFromDateFilter] = useState(\"\");\n  const [toDateFilter, setToDateFilter] = useState(\"\");\n  const [contactFilter, setContactFilter] = useState(null);\n  const [editCreditNoteModalState, setEditCreditNoteModalState] = useState(false);\n  const [selected, setSelected] = useState([]);\n  const [creditNoteToEditId, setCreditNoteToEditId] = useState();\n  useEffect(() => {\n    setCreditNotesItems(creditNotes);\n    setFilteredCreditNotesItems(filterCreditNotesByCriteria(creditNotes));\n  }, [creditNotes]);\n\n  const filterCreditNotesByCriteria = creditNotesToFilter => {\n    //filter the creditNotes according to the search criteria here\n    let filteredCreditNotes = creditNotesToFilter;\n\n    if (periodFilter) {\n      const {\n        startDate,\n        endDate\n      } = getStartEndDatesForPeriod(periodFilter);\n      filteredCreditNotes = filteredCreditNotes.filter(creditNoteItem => {\n        const creditNoteDate = parse(creditNoteItem.credit_issue_date, 'yyyy-MM-dd', new Date());\n        return isWithinInterval(creditNoteDate, {\n          start: startDate,\n          end: endDate\n        });\n      });\n    }\n\n    filteredCreditNotes = filteredCreditNotes.filter(({\n      credit_issue_date,\n      tenant_id,\n      property_id\n    }) => (!fromDateFilter ? true : credit_issue_date >= fromDateFilter) && (!toDateFilter ? true : credit_issue_date <= toDateFilter) && (propertyFilter === \"all\" ? true : property_id === propertyFilter) && (!contactFilter ? true : tenant_id === contactFilter.id));\n    return filteredCreditNotes;\n  };\n\n  const toggleEditCreditNoteModalState = () => {\n    setEditCreditNoteModalState(!editCreditNoteModalState);\n  };\n\n  const handleSearchFormSubmit = event => {\n    event.preventDefault();\n    setFilteredCreditNotesItems(filterCreditNotesByCriteria(creditNotesItems));\n  };\n\n  const resetSearchForm = event => {\n    event.preventDefault();\n    setPropertyFilter(\"all\");\n    setPeriodFilter(\"month-to-date\");\n    setFromDateFilter(\"\");\n    setToDateFilter(\"\");\n    setContactFilter(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(Layout, {\n    pageTitle: \"Credit Notes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    key: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PageHeading, {\n    text: 'Credit Notes',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    item: true,\n    alignItems: \"center\",\n    direction: \"row\",\n    key: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(PrintArrayToPdf, {\n    disabled: !selected.length,\n    reportName: 'Credit Notes Records',\n    reportTitle: 'Credit Notes Data',\n    headCells: headCells,\n    dataToPrint: filteredCreditNotesItems.filter(({\n      id\n    }) => selected.includes(id)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ExportToExcelBtn, {\n    disabled: !selected.length,\n    reportName: 'Credit Notes Records',\n    reportTitle: 'Credit Notes Data',\n    headCells: headCells,\n    dataToPrint: filteredCreditNotesItems.filter(({\n      id\n    }) => selected.includes(id)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    border: 1,\n    borderRadius: \"borderRadius\",\n    borderColor: \"grey.400\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    id: \"creditNoteSearchForm\",\n    onSubmit: handleSearchFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"row\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    xs: 12,\n    md: 6,\n    direction: \"row\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    type: \"date\",\n    id: \"from_date_filter\",\n    name: \"from_date_filter\",\n    label: \"From Date\",\n    value: fromDateFilter,\n    onChange: event => {\n      setFromDateFilter(event.target.value);\n    },\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 49\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    type: \"date\",\n    name: \"to_date_filter\",\n    label: \"To Date\",\n    id: \"to_date_filter\",\n    onChange: event => {\n      setToDateFilter(event.target.value);\n    },\n    value: toDateFilter,\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 49\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    select: true,\n    id: \"period_filter\",\n    name: \"period_filter\",\n    label: \"Period\",\n    value: periodFilter,\n    onChange: event => {\n      setPeriodFilter(event.target.value);\n    },\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 45\n    }\n  }, TRANSACTIONS_FILTER_OPTIONS.map((filterOption, index) => /*#__PURE__*/React.createElement(MenuItem, {\n    key: index,\n    value: filterOption.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 53\n    }\n  }, filterOption.text))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"row\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    select: true,\n    variant: \"outlined\",\n    name: \"property_filter\",\n    label: \"Property\",\n    id: \"property_filter\",\n    onChange: event => {\n      setPropertyFilter(event.target.value);\n    },\n    value: propertyFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    key: \"all\",\n    value: \"all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 49\n    }\n  }, \"All\"), properties.map((property, index) => /*#__PURE__*/React.createElement(MenuItem, {\n    key: index,\n    value: property.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 57\n    }\n  }, property.ref)))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    id: \"contact_filter\",\n    options: contacts,\n    getOptionSelected: (option, value) => option.id === value.id,\n    name: \"contact_filter\",\n    onChange: (event, newValue) => {\n      setContactFilter(newValue);\n    },\n    value: contactFilter,\n    getOptionLabel: tenant => tenant ? `${tenant.first_name} ${tenant.last_name}` : '',\n    style: {\n      width: \"100%\"\n    },\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"Tenant\",\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 74\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 45\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    item: true,\n    justify: \"flex-end\",\n    alignItems: \"center\",\n    direction: \"row\",\n    key: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    form: \"creditNoteSearchForm\",\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"medium\",\n    startIcon: /*#__PURE__*/React.createElement(SearchIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 56\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 41\n    }\n  }, \"SEARCH\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: event => resetSearchForm(event),\n    type: \"reset\",\n    form: \"creditNoteSearchForm\",\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"medium\",\n    startIcon: /*#__PURE__*/React.createElement(UndoIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 56\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 41\n    }\n  }, \"RESET\"))))))), editCreditNoteModalState ? /*#__PURE__*/React.createElement(CreditNoteEditForm, {\n    open: editCreditNoteModalState,\n    creditNoteToEdit: creditNotesItems.find(({\n      id\n    }) => id === creditNoteToEditId),\n    handleClose: toggleEditCreditNoteModalState,\n    handleItemSubmit: handleItemSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 25\n    }\n  }) : null, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CommonTable, {\n    selected: selected,\n    setSelected: setSelected,\n    rows: filteredCreditNotesItems,\n    headCells: headCells,\n    optionalEditHandler: selectedRowIndex => {\n      setCreditNoteToEditId(selectedRowIndex);\n      toggleEditCreditNoteModalState();\n    },\n    deleteUrl: \"credit-notes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 21\n    }\n  }))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    creditNotes: state.creditNotes.map(creditNote => {\n      const tenant = state.contacts.find(contact => contact.id === creditNote.tenant_id) || {};\n      const tenantUnit = state.propertyUnits.find(({\n        id\n      }) => id === creditNote.unit_id) || {};\n      return Object.assign({}, creditNote, {\n        tenant_name: `${tenant.first_name} ${tenant.last_name}`,\n        tenant_id_number: tenant.id_number,\n        unit_ref: tenantUnit.ref\n      });\n    }).sort((creditNote1, creditNote2) => parse(creditNote2.credit_issue_date, 'yyyy-MM-dd', new Date()) - parse(creditNote1.credit_issue_date, 'yyyy-MM-dd', new Date())),\n    properties: state.properties,\n    contacts: state.contacts\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleItemSubmit: (item, url) => dispatch(handleItemFormSubmit(item, url)),\n    handleItemDelete: (itemId, url) => dispatch(handleDelete(itemId, url))\n  };\n};\n\nCreditNotesPage = connect(mapStateToProps, mapDispatchToProps)(CreditNotesPage);\nexport default withRouter(CreditNotesPage);","map":{"version":3,"sources":["/home/brianmuciri/Projects/farm-ledger-ld/src/Routes/CreditNotes.js"],"names":["Layout","Grid","PageHeading","React","useEffect","useState","MenuItem","Button","TextField","Box","SearchIcon","UndoIcon","ExportToExcelBtn","connect","handleItemFormSubmit","handleDelete","CommonTable","withRouter","commonStyles","PrintArrayToPdf","getStartEndDatesForPeriod","getTransactionsFilterOptions","parse","isWithinInterval","Autocomplete","CreditNoteEditForm","TRANSACTIONS_FILTER_OPTIONS","headCells","id","numeric","disablePadding","label","CreditNotesPage","creditNotes","contacts","properties","handleItemSubmit","classes","creditNotesItems","setCreditNotesItems","filteredCreditNotesItems","setFilteredCreditNotesItems","propertyFilter","setPropertyFilter","periodFilter","setPeriodFilter","fromDateFilter","setFromDateFilter","toDateFilter","setToDateFilter","contactFilter","setContactFilter","editCreditNoteModalState","setEditCreditNoteModalState","selected","setSelected","creditNoteToEditId","setCreditNoteToEditId","filterCreditNotesByCriteria","creditNotesToFilter","filteredCreditNotes","startDate","endDate","filter","creditNoteItem","creditNoteDate","credit_issue_date","Date","start","end","tenant_id","property_id","toggleEditCreditNoteModalState","handleSearchFormSubmit","event","preventDefault","resetSearchForm","length","includes","form","target","value","shrink","map","filterOption","index","text","property","ref","option","newValue","tenant","first_name","last_name","width","params","find","selectedRowIndex","mapStateToProps","state","creditNote","contact","tenantUnit","propertyUnits","unit_id","Object","assign","tenant_name","tenant_id_number","id_number","unit_ref","sort","creditNote1","creditNote2","mapDispatchToProps","dispatch","item","url","handleItemDelete","itemId"],"mappings":"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","sourcesContent":["import Layout from \"../components/PrivateLayout\";\nimport Grid from \"@material-ui/core/Grid\";\nimport PageHeading from \"../components/PageHeading\";\nimport React, { useEffect, useState } from \"react\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Box from \"@material-ui/core/Box\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport ExportToExcelBtn from \"../components/ExportToExcelBtn\";\nimport { connect } from \"react-redux\";\nimport { handleItemFormSubmit, handleDelete } from \"../actions/actions\";\nimport CommonTable from \"../components/table/commonTable\";\nimport { withRouter } from \"react-router-dom\";\nimport { commonStyles } from \"../components/commonStyles\";\nimport PrintArrayToPdf from \"../components/PrintArrayToPdfBtn\";\nimport { getStartEndDatesForPeriod, getTransactionsFilterOptions } from \"../assets/commonAssets\";\nimport { parse, isWithinInterval } from \"date-fns\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport CreditNoteEditForm from \"../components/charges/EditCreditNote\";\n\n\nconst TRANSACTIONS_FILTER_OPTIONS = getTransactionsFilterOptions()\n\nconst headCells = [\n    { id: \"credit_issue_date\", numeric: false, disablePadding: true, label: \"Date Issued\" },\n    { id: \"unit_ref\", numeric: false, disablePadding: true, label: \"Unit Number/Ref\" },\n    { id: \"tenant_name\", numeric: false, disablePadding: true, label: \"Tenant Name\" },\n    { id: \"tenant_id_number\", numeric: false, disablePadding: true, label: \"Tenant ID\" },\n    { id: \"credit_amount\", numeric: true, disablePadding: true, label: \"Credit Amount\" },\n    { id: \"edit\", numeric: false, disablePadding: true, label: \"Edit\" },\n    { id: \"delete\", numeric: false, disablePadding: true, label: \"Delete\" },\n];\n\n\nlet CreditNotesPage = ({\n    creditNotes,\n    contacts,\n    properties,\n    handleItemSubmit,\n}) => {\n    const classes = commonStyles();\n    const [creditNotesItems, setCreditNotesItems] = useState([]);\n    const [filteredCreditNotesItems, setFilteredCreditNotesItems] = useState([]);\n    const [propertyFilter, setPropertyFilter] = useState(\"all\");\n    const [periodFilter, setPeriodFilter] = useState(\"month-to-date\");\n    const [fromDateFilter, setFromDateFilter] = useState(\"\");\n    const [toDateFilter, setToDateFilter] = useState(\"\");\n    const [contactFilter, setContactFilter] = useState(null);\n    const [editCreditNoteModalState, setEditCreditNoteModalState] = useState(false);\n\n    const [selected, setSelected] = useState([]);\n    const [creditNoteToEditId, setCreditNoteToEditId] = useState();\n\n    useEffect(() => {\n        setCreditNotesItems(creditNotes);\n        setFilteredCreditNotesItems(filterCreditNotesByCriteria(creditNotes));\n    }, [creditNotes]);\n\n    const filterCreditNotesByCriteria = (creditNotesToFilter) => {\n        //filter the creditNotes according to the search criteria here\n        let filteredCreditNotes = creditNotesToFilter\n        if (periodFilter) {\n            const { startDate, endDate } = getStartEndDatesForPeriod(periodFilter)\n            filteredCreditNotes = filteredCreditNotes.filter((creditNoteItem) => {\n                const creditNoteDate = parse(creditNoteItem.credit_issue_date, 'yyyy-MM-dd', new Date())\n                return isWithinInterval(creditNoteDate, { start: startDate, end: endDate })\n            })\n        }\n        filteredCreditNotes = filteredCreditNotes\n            .filter(({ credit_issue_date, tenant_id, property_id }) =>\n                (!fromDateFilter ? true : credit_issue_date >= fromDateFilter)\n                && (!toDateFilter ? true : credit_issue_date <= toDateFilter)\n                && (propertyFilter === \"all\" ? true : property_id === propertyFilter)\n                && (!contactFilter ? true : tenant_id === contactFilter.id)\n            )\n        return filteredCreditNotes;\n    }\n\n    const toggleEditCreditNoteModalState = () => {\n        setEditCreditNoteModalState(!editCreditNoteModalState)\n    }\n\n    const handleSearchFormSubmit = (event) => {\n        event.preventDefault();\n        setFilteredCreditNotesItems(filterCreditNotesByCriteria(creditNotesItems));\n    }\n\n    const resetSearchForm = (event) => {\n        event.preventDefault();\n        setPropertyFilter(\"all\");\n        setPeriodFilter(\"month-to-date\");\n        setFromDateFilter(\"\");\n        setToDateFilter(\"\");\n        setContactFilter(\"\");\n    };\n\n    return (\n        <Layout pageTitle=\"Credit Notes\">\n            <Grid\n                container\n                spacing={3}\n                alignItems=\"center\"\n            >\n                <Grid item key={2}>\n                    <PageHeading text={'Credit Notes'} />\n                </Grid>\n                <Grid\n                    container\n                    spacing={2}\n                    item\n                    alignItems=\"center\"\n                    direction=\"row\"\n                    key={1}\n                >\n\n                    <Grid item>\n                        <PrintArrayToPdf\n                            disabled={!selected.length}\n                            reportName={'Credit Notes Records'}\n                            reportTitle={'Credit Notes Data'}\n                            headCells={headCells}\n                            dataToPrint={filteredCreditNotesItems.filter(({ id }) => selected.includes(id))}\n                        />\n                    </Grid>\n                    <Grid item>\n                        <ExportToExcelBtn\n                            disabled={!selected.length}\n                            reportName={'Credit Notes Records'}\n                            reportTitle={'Credit Notes Data'}\n                            headCells={headCells}\n                            dataToPrint={filteredCreditNotesItems.filter(({ id }) => selected.includes(id))}\n                        />\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    <Box\n                        border={1}\n                        borderRadius=\"borderRadius\"\n                        borderColor=\"grey.400\"\n                    >\n                        <form\n                            className={classes.form}\n                            id=\"creditNoteSearchForm\"\n                            onSubmit={handleSearchFormSubmit}\n                        >\n                            <Grid\n                                container\n                                spacing={2}\n                                justify=\"center\"\n                            >\n                                <Grid item container spacing={2}>\n                                    <Grid item container direction=\"row\" spacing={2}>\n                                        <Grid item container xs={12} md={6} direction=\"row\" spacing={2}>\n                                            <Grid item xs={12} md={6}>\n                                                <TextField\n                                                    fullWidth\n                                                    variant=\"outlined\"\n                                                    type=\"date\"\n                                                    id=\"from_date_filter\"\n                                                    name=\"from_date_filter\"\n                                                    label=\"From Date\"\n                                                    value={fromDateFilter}\n                                                    onChange={(event) => {\n                                                        setFromDateFilter(\n                                                            event.target.value\n                                                        );\n                                                    }}\n                                                    InputLabelProps={{ shrink: true }}\n                                                />\n                                            </Grid>\n                                            <Grid item xs={12} md={6}>\n                                                <TextField\n                                                    fullWidth\n                                                    variant=\"outlined\"\n                                                    type=\"date\"\n                                                    name=\"to_date_filter\"\n                                                    label=\"To Date\"\n                                                    id=\"to_date_filter\"\n                                                    onChange={(event) => {\n                                                        setToDateFilter(event.target.value);\n                                                    }}\n                                                    value={toDateFilter}\n                                                    InputLabelProps={{ shrink: true }}\n                                                />\n                                            </Grid>\n                                        </Grid>\n                                        <Grid item xs={12} md={6}>\n                                            <TextField\n                                                fullWidth\n                                                variant=\"outlined\"\n                                                select\n                                                id=\"period_filter\"\n                                                name=\"period_filter\"\n                                                label=\"Period\"\n                                                value={periodFilter}\n                                                onChange={(event) => {\n                                                    setPeriodFilter(\n                                                        event.target.value\n                                                    );\n                                                }}\n                                                InputLabelProps={{ shrink: true }}\n                                            >\n                                                {TRANSACTIONS_FILTER_OPTIONS.map((filterOption, index) => (\n                                                    <MenuItem\n                                                        key={index}\n                                                        value={filterOption.id}\n                                                    >\n                                                        {filterOption.text}\n                                                    </MenuItem>\n                                                ))}\n                                            </TextField>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item container direction=\"row\" spacing={2}>\n                                        <Grid item md={6} xs={12}>\n                                            <TextField\n                                                fullWidth\n                                                select\n                                                variant=\"outlined\"\n                                                name=\"property_filter\"\n                                                label=\"Property\"\n                                                id=\"property_filter\"\n                                                onChange={(event) => {\n                                                    setPropertyFilter(\n                                                        event.target.value\n                                                    );\n                                                }}\n                                                value={propertyFilter}\n                                            >\n                                                <MenuItem key={\"all\"} value={\"all\"}>All</MenuItem>\n                                                {properties.map(\n                                                    (property, index) => (\n                                                        <MenuItem\n                                                            key={index}\n                                                            value={property.id}\n                                                        >\n                                                            {property.ref}\n                                                        </MenuItem>\n                                                    )\n                                                )}\n                                            </TextField>\n                                        </Grid>\n                                        <Grid item xs={12} md={6}>\n                                            <Autocomplete\n                                                id=\"contact_filter\"\n                                                options={contacts}\n                                                getOptionSelected={(option, value) => option.id === value.id}\n                                                name=\"contact_filter\"\n                                                onChange={(event, newValue) => {\n                                                    setContactFilter(newValue);\n                                                }}\n                                                value={contactFilter}\n                                                getOptionLabel={(tenant) => tenant ? `${tenant.first_name} ${tenant.last_name}` : ''}\n                                                style={{ width: \"100%\" }}\n                                                renderInput={(params) => <TextField {...params} label=\"Tenant\" variant=\"outlined\" />}\n                                            />\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                                <Grid\n                                    container\n                                    spacing={2}\n                                    item\n                                    justify=\"flex-end\"\n                                    alignItems=\"center\"\n                                    direction=\"row\"\n                                    key={1}\n                                >\n                                    <Grid item>\n                                        <Button\n                                            type=\"submit\"\n                                            form=\"creditNoteSearchForm\"\n                                            color=\"primary\"\n                                            variant=\"contained\"\n                                            size=\"medium\"\n                                            startIcon={<SearchIcon />}\n                                        >\n                                            SEARCH\n                                    </Button>\n                                    </Grid>\n                                    <Grid item>\n                                        <Button\n                                            onClick={(event) => resetSearchForm(event)}\n                                            type=\"reset\"\n                                            form=\"creditNoteSearchForm\"\n                                            color=\"primary\"\n                                            variant=\"contained\"\n                                            size=\"medium\"\n                                            startIcon={<UndoIcon />}\n                                        >\n                                            RESET\n                                    </Button>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </form>\n                    </Box>\n                </Grid>\n                {\n                    editCreditNoteModalState ?\n                        <CreditNoteEditForm open={editCreditNoteModalState}\n                            creditNoteToEdit={creditNotesItems.find(({ id }) => id === creditNoteToEditId)}\n                            handleClose={toggleEditCreditNoteModalState}\n                            handleItemSubmit={handleItemSubmit} /> : null\n                }\n                <Grid item xs={12}>\n                    <CommonTable\n                        selected={selected}\n                        setSelected={setSelected}\n                        rows={filteredCreditNotesItems}\n                        headCells={headCells}\n                        optionalEditHandler={(selectedRowIndex) => {setCreditNoteToEditId(selectedRowIndex); toggleEditCreditNoteModalState()}}\n                        deleteUrl={\"credit-notes\"}\n                    />\n                </Grid>\n\n            </Grid>\n        </Layout>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        creditNotes: state.creditNotes\n            .map((creditNote) => {\n                const tenant = state.contacts.find((contact) => contact.id === creditNote.tenant_id) || {};\n                const tenantUnit = state.propertyUnits.find(({ id }) => id === creditNote.unit_id) || {};\n\n                return Object.assign({}, creditNote, {\n                    tenant_name: `${tenant.first_name} ${tenant.last_name}`,\n                    tenant_id_number: tenant.id_number,\n                    unit_ref: tenantUnit.ref\n                })\n            })\n            .sort((creditNote1, creditNote2) => parse(creditNote2.credit_issue_date, 'yyyy-MM-dd', new Date()) -\n                parse(creditNote1.credit_issue_date, 'yyyy-MM-dd', new Date())),\n        properties: state.properties,\n        contacts: state.contacts,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleItemSubmit: (item, url) => dispatch(handleItemFormSubmit(item, url)),\n        handleItemDelete: (itemId, url) => dispatch(handleDelete(itemId, url)),\n    };\n};\n\nCreditNotesPage = connect(mapStateToProps, mapDispatchToProps)(CreditNotesPage);\n\nexport default withRouter(CreditNotesPage);\n"]},"metadata":{},"sourceType":"module"}