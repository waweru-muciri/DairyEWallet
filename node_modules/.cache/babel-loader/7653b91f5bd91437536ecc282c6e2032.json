{"ast":null,"code":"var _jsxFileName = \"/home/brianmuciri/Projects/farm-ledger-ld/src/Routes/PropertySummaryPage.js\";\nimport React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport TenantInfoDisplayCard from \"../components/TenantInfoDisplayCard\";\nimport TEAL from '@material-ui/core/colors/teal';\nimport RED from '@material-ui/core/colors/red';\nimport GREEN from '@material-ui/core/colors/green';\nimport { Doughnut } from 'react-chartjs-2';\nimport GREY from \"@material-ui/core/colors/grey\";\nimport { isWithinInterval, startOfMonth, startOfToday, endOfMonth, parse } from 'date-fns';\nimport { getUnitTypes } from \"../assets/commonAssets\";\nconst UNIT_TYPES_WITH_DETAILS = getUnitTypes();\nconst legendOpts = {\n  display: true,\n  position: 'top',\n  fullWidth: true,\n  reverse: false,\n  labels: {\n    fontColor: GREY[800],\n    fontSize: 14\n  }\n};\n\nlet PropertySummaryPage = props => {\n  let {\n    classes,\n    propertyActiveLeasesNumber,\n    propertyToShowDetails,\n    propertyUnits,\n    rentalPayments,\n    users\n  } = props; //get current month income data\n\n  const curentMonthIncomeData = {\n    datasets: [],\n    labels: []\n  };\n  const totalPaymentsByType = [];\n  const rentalPaymentsForCurrentMonth = rentalPayments.filter(payment => {\n    return isWithinInterval(parse(payment.payment_date, 'yyyy-MM-dd', new Date()), {\n      start: startOfMonth(startOfToday()),\n      end: endOfMonth(startOfToday())\n    });\n  });\n  const totalCurrentMonthRentPayments = rentalPaymentsForCurrentMonth.filter(payment => payment.payment_type === 'rent').reduce((totalValue, currentValue) => totalValue += parseFloat(currentValue.payment_amount) || 0, 0);\n  const totalCurrentMonthOtherPayments = rentalPaymentsForCurrentMonth.filter(payment => payment.payment_type !== 'rent').reduce((totalValue, currentValue) => totalValue += parseFloat(currentValue.payment_amount) || 0, 0);\n  totalPaymentsByType.push({\n    type: \"rent\",\n    totalAmount: totalCurrentMonthRentPayments,\n    label: \"Rent\"\n  });\n  totalPaymentsByType.push({\n    type: \"other\",\n    totalAmount: totalCurrentMonthOtherPayments,\n    label: \"Others\"\n  });\n  curentMonthIncomeData.labels.push(totalPaymentsByType.map(totalPayment => totalPayment.label));\n  curentMonthIncomeData.datasets.push({\n    data: totalPaymentsByType.map(totalPayment => totalPayment.totalAmount),\n    backgroundColor: [GREEN[800], GREEN[200]]\n  }); //get occupancy graph data\n\n  const rentalUnitsOccupancyData = {\n    datasets: [],\n    labels: []\n  };\n  rentalUnitsOccupancyData.labels.push('Occupied Units', 'Vacant Units');\n  rentalUnitsOccupancyData.datasets.push({\n    data: [propertyActiveLeasesNumber, propertyUnits.length - propertyActiveLeasesNumber],\n    backgroundColor: [RED[800], RED[200]]\n  }); //get the number of the different units by category\n\n  const rentalUnitsDistributionData = {\n    datasets: [],\n    labels: []\n  };\n  const unitTypes = Array.from(new Set(propertyUnits.map(unit => unit.unit_type)));\n  const unitNamesForDisplay = unitTypes.map(unitType => {\n    const unitTypeDetails = UNIT_TYPES_WITH_DETAILS.find(({\n      id\n    }) => id === unitType) || {};\n    return `${unitTypeDetails.displayValue}s`;\n  }); //push the unit names for display to the labels array \n\n  rentalUnitsDistributionData.labels.push(...unitNamesForDisplay); //push the display data to the datasets array\n\n  rentalUnitsDistributionData.datasets.push({\n    data: unitTypes.map(unit_type => {\n      return propertyUnits.filter(property => property.unit_type === unit_type).length;\n    }),\n    backgroundColor: unitTypes.map((_unit_type, key) => TEAL[(key + 1) * 100])\n  });\n  const propertyManager = users.find(user => user.id === propertyToShowDetails.assigned_to) || {\n    first_name: 'R',\n    last_name: 'O'\n  };\n  const propertyOwner = users.find(user => user.id === propertyToShowDetails.owner) || {\n    first_name: 'R',\n    last_name: 'M'\n  };\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    direction: \"column\",\n    spacing: 2,\n    alignItems: \"stretch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    key: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, \"Property Details\")), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    item: true,\n    alignItems: \"stretch\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.fullHeightWidthContainer,\n    variant: \"outlined\",\n    elevation: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CardActionArea, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CardMedia, {\n    height: \"200\",\n    component: \"img\",\n    image: propertyToShowDetails.property_image_url || '/apartmentImage.png',\n    title: \"Property Image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"subtitle1\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 29\n    }\n  }, \"Name: \", propertyToShowDetails.ref), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 29\n    }\n  }, \"Address: \", propertyToShowDetails.address), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 29\n    }\n  }, \"City: \", propertyToShowDetails.city)))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TenantInfoDisplayCard, {\n    title: \"Property Owner\",\n    subheader: \"Owner of this property\",\n    avatar: `${propertyOwner.first_name[0]}${propertyOwner.last_name[0]}`,\n    cardContent: [{\n      name: 'Name:',\n      value: `${propertyOwner.first_name} ${propertyOwner.last_name}`\n    }, {\n      name: 'Mobile Phone Number',\n      value: propertyOwner.phone_number || '-'\n    }, {\n      name: 'Work Phone Number',\n      value: propertyOwner.home_phone_number || '-'\n    }, {\n      name: 'Primary Email',\n      value: propertyOwner.primary_email || '-'\n    }, {\n      name: 'Current Address',\n      value: propertyOwner.address || '-'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TenantInfoDisplayCard, {\n    title: \"Rental Manager\",\n    subheader: \"Landlord for this property\",\n    avatar: `${propertyManager.first_name[0]}${propertyManager.last_name[0]}`,\n    cardContent: [{\n      name: 'Name:',\n      value: `${propertyManager.first_name} ${propertyManager.last_name}`\n    }, {\n      name: 'Mobile Phone Number',\n      value: propertyManager.phone_number || '-'\n    }, {\n      name: 'Work Phone Number',\n      value: propertyManager.home_phone_number || '-'\n    }, {\n      name: 'Primary Email',\n      value: propertyManager.primary_email || '-'\n    }, {\n      name: 'Current Address',\n      value: propertyManager.address || '-'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    item: true,\n    alignItems: \"stretch\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.fullHeightWidthContainer,\n    variant: \"outlined\",\n    elevation: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    align: \"center\",\n    variant: \"subtitle1\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 29\n    }\n  }, \"Rental Units Distribution\"), /*#__PURE__*/React.createElement(Doughnut, {\n    height: 200,\n    data: rentalUnitsDistributionData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.fullHeightWidthContainer,\n    variant: \"outlined\",\n    elevation: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    align: \"center\",\n    variant: \"subtitle1\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 29\n    }\n  }, \"Current Occupancy\"), /*#__PURE__*/React.createElement(Doughnut, {\n    height: 200,\n    data: rentalUnitsOccupancyData,\n    legend: legendOpts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.fullHeightWidthContainer,\n    variant: \"outlined\",\n    elevation: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    align: \"center\",\n    variant: \"subtitle1\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 29\n    }\n  }, \"Current Month Income\"), /*#__PURE__*/React.createElement(Doughnut, {\n    height: 200,\n    data: curentMonthIncomeData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 29\n    }\n  }))))));\n};\n\nexport default PropertySummaryPage;","map":{"version":3,"sources":["/home/brianmuciri/Projects/farm-ledger-ld/src/Routes/PropertySummaryPage.js"],"names":["React","Typography","Grid","Card","CardContent","CardMedia","CardActionArea","TenantInfoDisplayCard","TEAL","RED","GREEN","Doughnut","GREY","isWithinInterval","startOfMonth","startOfToday","endOfMonth","parse","getUnitTypes","UNIT_TYPES_WITH_DETAILS","legendOpts","display","position","fullWidth","reverse","labels","fontColor","fontSize","PropertySummaryPage","props","classes","propertyActiveLeasesNumber","propertyToShowDetails","propertyUnits","rentalPayments","users","curentMonthIncomeData","datasets","totalPaymentsByType","rentalPaymentsForCurrentMonth","filter","payment","payment_date","Date","start","end","totalCurrentMonthRentPayments","payment_type","reduce","totalValue","currentValue","parseFloat","payment_amount","totalCurrentMonthOtherPayments","push","type","totalAmount","label","map","totalPayment","data","backgroundColor","rentalUnitsOccupancyData","length","rentalUnitsDistributionData","unitTypes","Array","from","Set","unit","unit_type","unitNamesForDisplay","unitType","unitTypeDetails","find","id","displayValue","property","_unit_type","key","propertyManager","user","assigned_to","first_name","last_name","propertyOwner","owner","fullHeightWidthContainer","property_image_url","ref","address","city","name","value","phone_number","home_phone_number","primary_email"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport TenantInfoDisplayCard from \"../components/TenantInfoDisplayCard\";\nimport TEAL from '@material-ui/core/colors/teal';\nimport RED from '@material-ui/core/colors/red';\nimport GREEN from '@material-ui/core/colors/green';\nimport { Doughnut } from 'react-chartjs-2';\nimport GREY from \"@material-ui/core/colors/grey\";\nimport { isWithinInterval, startOfMonth, startOfToday, endOfMonth, parse } from 'date-fns';\nimport { getUnitTypes } from \"../assets/commonAssets\";\n\nconst UNIT_TYPES_WITH_DETAILS = getUnitTypes();\n\nconst legendOpts = {\n    display: true,\n    position: 'top',\n    fullWidth: true,\n    reverse: false,\n    labels: {\n        fontColor: GREY[800],\n        fontSize: 14,\n    }\n};\n\nlet PropertySummaryPage = (props) => {\n    let { classes, propertyActiveLeasesNumber, propertyToShowDetails, propertyUnits, rentalPayments, users } = props\n    //get current month income data\n    const curentMonthIncomeData = { datasets: [], labels: []}\n    const totalPaymentsByType = []\n    const rentalPaymentsForCurrentMonth = rentalPayments\n        .filter(payment => {\n            return isWithinInterval(parse(payment.payment_date, 'yyyy-MM-dd', new Date()),\n                { start: startOfMonth(startOfToday()), end: endOfMonth(startOfToday()) })\n        })\n    const totalCurrentMonthRentPayments = rentalPaymentsForCurrentMonth\n        .filter(payment => payment.payment_type === 'rent')\n        .reduce((totalValue, currentValue) => (totalValue += parseFloat(currentValue.payment_amount) || 0), 0)\n    const totalCurrentMonthOtherPayments = rentalPaymentsForCurrentMonth\n        .filter(payment => payment.payment_type !== 'rent')\n        .reduce((totalValue, currentValue) => (totalValue += parseFloat(currentValue.payment_amount) || 0), 0)\n    totalPaymentsByType.push({ type: \"rent\", totalAmount: totalCurrentMonthRentPayments, label: \"Rent\" })\n    totalPaymentsByType.push({ type: \"other\", totalAmount: totalCurrentMonthOtherPayments, label: \"Others\" })\n    curentMonthIncomeData.labels.push(totalPaymentsByType.map(totalPayment => totalPayment.label))\n    curentMonthIncomeData.datasets.push({\n        data: totalPaymentsByType.map(totalPayment => totalPayment.totalAmount),\n        backgroundColor: [GREEN[800], GREEN[200]]\n    })\n    //get occupancy graph data\n    const rentalUnitsOccupancyData = { datasets: [], labels: [] }\n    rentalUnitsOccupancyData.labels.push('Occupied Units', 'Vacant Units');\n    rentalUnitsOccupancyData.datasets.push(\n        {\n            data: [propertyActiveLeasesNumber, (propertyUnits.length - propertyActiveLeasesNumber)],\n            backgroundColor: [RED[800], RED[200]]\n        })\n    //get the number of the different units by category\n    const rentalUnitsDistributionData = {\n        datasets: [],\n        labels: [],\n    }\n    const unitTypes = Array.from(new Set(propertyUnits.map(unit => unit.unit_type)));\n    const unitNamesForDisplay = unitTypes.map(unitType => {\n        const unitTypeDetails = UNIT_TYPES_WITH_DETAILS.find(({ id }) => id === unitType) || {}\n        return `${unitTypeDetails.displayValue}s`\n    })\n    //push the unit names for display to the labels array \n    rentalUnitsDistributionData.labels.push(...unitNamesForDisplay);\n    //push the display data to the datasets array\n    rentalUnitsDistributionData.datasets.push({\n        data: unitTypes\n        .map(unit_type => {\n            return propertyUnits.filter((property) => property.unit_type === unit_type).length\n        }),\n        backgroundColor: unitTypes.map((_unit_type, key) => TEAL[(key + 1) * 100])\n    })\n\n    const propertyManager = users.find((user) => user.id === propertyToShowDetails.assigned_to) ||\n        { first_name: 'R', last_name: 'O' }\n    const propertyOwner = users.find((user) => user.id === propertyToShowDetails.owner) ||\n        { first_name: 'R', last_name: 'M' }\n    return (\n        <Grid container justify=\"center\" direction=\"column\" spacing={2} alignItems=\"stretch\">\n            <Grid item key={0}>\n                <Typography variant=\"h6\">Property Details</Typography>\n            </Grid>\n            <Grid\n                container\n                direction=\"row\"\n                item\n                alignItems=\"stretch\"\n                spacing={2}\n            >\n                <Grid item xs={12} md>\n                    <Card className={classes.fullHeightWidthContainer} variant=\"outlined\" elevation={1}>\n                        <CardActionArea>\n                            <CardMedia\n                                height=\"200\"\n                                component=\"img\"\n                                image={propertyToShowDetails.property_image_url || '/apartmentImage.png'}\n                                title=\"Property Image\"\n                            />\n                        </CardActionArea>\n                        <CardContent>\n                            <Typography gutterBottom variant=\"subtitle1\" component=\"h2\">\n                                Name: {propertyToShowDetails.ref}\n                            </Typography>\n                            <Typography variant=\"body2\" component=\"p\">\n                                Address: {propertyToShowDetails.address}\n                            </Typography>\n                            <Typography variant=\"body2\" component=\"p\">\n                                City: {propertyToShowDetails.city}\n                            </Typography>\n                        </CardContent>\n                    </Card>\n                </Grid>\n                <Grid item xs={12} md>\n                    <TenantInfoDisplayCard title=\"Property Owner\"\n                        subheader=\"Owner of this property\"\n                        avatar={`${propertyOwner.first_name[0]}${propertyOwner.last_name[0]}`}\n                        cardContent={[\n                            { name: 'Name:', value: `${propertyOwner.first_name} ${propertyOwner.last_name}` },\n                            { name: 'Mobile Phone Number', value: propertyOwner.phone_number || '-' },\n                            { name: 'Work Phone Number', value: propertyOwner.home_phone_number || '-' },\n                            { name: 'Primary Email', value: propertyOwner.primary_email || '-' },\n                            { name: 'Current Address', value: propertyOwner.address || '-' },\n                        ]}\n                    />\n                </Grid>\n                <Grid item xs={12} md>\n                    <TenantInfoDisplayCard title=\"Rental Manager\"\n                        subheader=\"Landlord for this property\"\n                        avatar={`${propertyManager.first_name[0]}${propertyManager.last_name[0]}`}\n                        cardContent={[\n                            { name: 'Name:', value: `${propertyManager.first_name} ${propertyManager.last_name}` },\n                            { name: 'Mobile Phone Number', value: propertyManager.phone_number || '-' },\n                            { name: 'Work Phone Number', value: propertyManager.home_phone_number || '-' },\n                            { name: 'Primary Email', value: propertyManager.primary_email || '-' },\n                            { name: 'Current Address', value: propertyManager.address || '-' },\n                        ]}\n                    />\n                </Grid>\n            </Grid>\n            <Grid\n                container\n                direction=\"row\"\n                item\n                alignItems=\"stretch\"\n                spacing={2}\n            >\n                <Grid item xs={12} md>\n                    <Card className={classes.fullHeightWidthContainer} variant=\"outlined\" elevation={1}>\n                        <CardContent>\n                            <Typography gutterBottom align=\"center\" variant=\"subtitle1\" component=\"h2\">\n                                Rental Units Distribution\n                            </Typography>\n                            <Doughnut height={200} data={rentalUnitsDistributionData} />\n                        </CardContent>\n                    </Card>\n                </Grid>\n                <Grid item xs={12} md>\n                    <Card className={classes.fullHeightWidthContainer} variant=\"outlined\" elevation={1}>\n                        <CardContent>\n                            <Typography gutterBottom align=\"center\" variant=\"subtitle1\" component=\"h2\">\n                                Current Occupancy\n                            </Typography>\n                            <Doughnut height={200} data={rentalUnitsOccupancyData} legend={legendOpts} />\n                        </CardContent>\n                    </Card>\n                </Grid>\n                <Grid item xs={12} md>\n                    <Card className={classes.fullHeightWidthContainer} variant=\"outlined\" elevation={1}>\n                        <CardContent>\n                            <Typography gutterBottom align=\"center\" variant=\"subtitle1\" component=\"h2\">\n                                Current Month Income\n                            </Typography>\n                            <Doughnut height={200} data={curentMonthIncomeData} />\n                        </CardContent>\n                    </Card>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default PropertySummaryPage;\n"]},"metadata":{},"sourceType":"module"}