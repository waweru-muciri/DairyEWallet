{"ast":null,"code":"var _jsxFileName = \"/home/brianmuciri/Projects/farm-ledger-ld/src/components/payments/PaymentEditForm.js\";\nimport React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport CustomSnackbar from '../CustomSnackbar';\nimport { Formik } from \"formik\";\nimport { commonStyles } from \"../commonStyles\";\nimport * as Yup from \"yup\";\nimport { format, startOfToday } from \"date-fns\";\nimport CustomCircularProgress from \"../CustomCircularProgress\";\nconst defaultDate = format(startOfToday(), 'yyyy-MM-dd');\nconst PaymentSchema = Yup.object().shape({\n  memo: Yup.string().trim().max(50, \"Memo details should be less than 50\").default(''),\n  reference_id: Yup.string().trim().max(20, \"Reference Id should be <= 20 characters\").default(''),\n  payment_amount: Yup.number().typeError('Amount must be a number').positive(\"Amount must be a positive number\").required(\"Payment amount is required\"),\n  payment_date: Yup.date().required('Payment Date is Required')\n});\nexport default function PaymentEditForm({\n  paymentToEdit,\n  handleItemSubmit,\n  open,\n  handleClose\n}) {\n  const classes = commonStyles(); // Get the action to complete.\n\n  const paymentValues = {\n    id: paymentToEdit.id,\n    payment_amount: paymentToEdit.payment_amount || 0,\n    memo: paymentToEdit.memo || '',\n    payment_date: paymentToEdit.payment_date || defaultDate,\n    reference_id: paymentToEdit.reference_id || ''\n  };\n  return /*#__PURE__*/React.createElement(Dialog, {\n    fullWidth: true,\n    maxWidth: \"sm\",\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"alert-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }\n  }, \"Edit Payment Details\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: paymentValues,\n    enableReinitialize: true,\n    validationSchema: PaymentSchema,\n    onSubmit: async (values, {\n      resetForm,\n      setStatus\n    }) => {\n      try {\n        const chargePayment = {\n          id: paymentToEdit.id,\n          payment_amount: values.payment_amount,\n          memo: values.memo,\n          payment_date: values.payment_date,\n          reference_id: values.reference_id\n        };\n        await handleItemSubmit(chargePayment, 'sales');\n        resetForm({});\n        setStatus({\n          sent: true,\n          msg: \"Payment saved.\"\n        });\n        handleClose();\n      } catch (error) {\n        setStatus({\n          sent: false,\n          msg: `Error! ${error}.`\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, ({\n    values,\n    status,\n    handleSubmit,\n    touched,\n    errors,\n    handleChange,\n    handleBlur,\n    isSubmitting\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    method: \"post\",\n    noValidate: true,\n    id: \"paymentEditForm\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 8\n    }\n  }, status && status.msg && /*#__PURE__*/React.createElement(CustomSnackbar, {\n    variant: status.sent ? \"success\" : \"error\",\n    message: status.msg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }), isSubmitting && /*#__PURE__*/React.createElement(CustomCircularProgress, {\n    open: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    spacing: 2,\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    id: \"payment_date\",\n    type: \"date\",\n    name: \"payment_date\",\n    label: \"Payment Date\",\n    value: values.payment_date,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    InputLabelProps: {\n      shrink: true\n    },\n    error: errors.payment_date && touched.payment_date,\n    helperText: touched.payment_date && errors.payment_date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    type: \"text\",\n    variant: \"outlined\",\n    name: \"payment_amount\",\n    id: \"payment_amount\",\n    label: \"Payment Amount\",\n    value: values.payment_amount,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    error: errors.payment_amount && touched.payment_amount,\n    helperText: touched.payment_amount && errors.payment_amount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    type: \"text\",\n    variant: \"outlined\",\n    name: \"reference_id\",\n    id: \"reference_id\",\n    label: \"Reference Id\",\n    value: values.reference_id,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    error: errors.reference_id && touched.reference_id,\n    helperText: touched.reference_id && errors.reference_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    type: \"text\",\n    multiline: true,\n    rows: 2,\n    variant: \"outlined\",\n    name: \"memo\",\n    id: \"memo\",\n    label: \"Payment Details/Memo\",\n    value: values.memo,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    error: errors.memo && touched.memo,\n    helperText: errors.memo || \"Include details for the payments here (max 50)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    justify: \"flex-start\",\n    direction: \"row\",\n    className: classes.buttonBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    variant: \"contained\",\n    size: \"medium\",\n    startIcon: /*#__PURE__*/React.createElement(CancelIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 23\n      }\n    }),\n    onClick: () => handleClose(),\n    disableElevation: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  }, \"Cancel\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"medium\",\n    startIcon: /*#__PURE__*/React.createElement(SaveIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 23\n      }\n    }),\n    form: \"paymentEditForm\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }\n  }, \"Save Payment\"))))))));\n}\n;","map":{"version":3,"sources":["/home/brianmuciri/Projects/farm-ledger-ld/src/components/payments/PaymentEditForm.js"],"names":["React","Grid","Dialog","DialogTitle","DialogContent","TextField","Button","SaveIcon","CancelIcon","CustomSnackbar","Formik","commonStyles","Yup","format","startOfToday","CustomCircularProgress","defaultDate","PaymentSchema","object","shape","memo","string","trim","max","default","reference_id","payment_amount","number","typeError","positive","required","payment_date","date","PaymentEditForm","paymentToEdit","handleItemSubmit","open","handleClose","classes","paymentValues","id","values","resetForm","setStatus","chargePayment","sent","msg","error","status","handleSubmit","touched","errors","handleChange","handleBlur","isSubmitting","form","shrink","buttonBox"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport CustomSnackbar from '../CustomSnackbar'\nimport { Formik } from \"formik\";\nimport { commonStyles } from \"../commonStyles\";\nimport * as Yup from \"yup\";\nimport { format, startOfToday } from \"date-fns\";\nimport CustomCircularProgress from \"../CustomCircularProgress\";\n\n\nconst defaultDate = format(startOfToday(), 'yyyy-MM-dd')\nconst PaymentSchema = Yup.object().shape({\n\tmemo: Yup.string().trim().max(50, \"Memo details should be less than 50\").default(''),\n\treference_id: Yup.string().trim().max(20, \"Reference Id should be <= 20 characters\").default(''),\n\tpayment_amount: Yup.number().typeError('Amount must be a number').positive(\"Amount must be a positive number\")\n\t\t.required(\"Payment amount is required\"),\n\tpayment_date: Yup.date().required('Payment Date is Required'),\n});\n\n\nexport default function PaymentEditForm ({ paymentToEdit, handleItemSubmit, open, handleClose }) {\n\tconst classes = commonStyles();\n\t// Get the action to complete.\n\tconst paymentValues = {\n\t\tid: paymentToEdit.id,\n\t\tpayment_amount: paymentToEdit.payment_amount || 0,\n\t\tmemo: paymentToEdit.memo || '',\n\t\tpayment_date: paymentToEdit.payment_date || defaultDate,\n\t\treference_id: paymentToEdit.reference_id || '',\n\t};\n\n\treturn (\n\t\t<Dialog\n\t\t\tfullWidth\n\t\t\tmaxWidth=\"sm\"\n\t\t\topen={open}\n\t\t\tonClose={handleClose}\n\t\t\taria-labelledby=\"form-dialog-title\"\n\t\t>\n\t\t\t<DialogTitle id=\"alert-dialog-title\">Edit Payment Details</DialogTitle>\n\t\t\t<DialogContent>\n\t\t\t\t<Formik\n\t\t\t\t\tinitialValues={paymentValues}\n\t\t\t\t\tenableReinitialize validationSchema={PaymentSchema}\n\t\t\t\t\tonSubmit={async (values, { resetForm, setStatus }) => {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst chargePayment = {\n\t\t\t\t\t\t\t\tid: paymentToEdit.id,\n\t\t\t\t\t\t\t\tpayment_amount: values.payment_amount,\n\t\t\t\t\t\t\t\tmemo: values.memo,\n\t\t\t\t\t\t\t\tpayment_date: values.payment_date,\n\t\t\t\t\t\t\t\treference_id: values.reference_id,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tawait handleItemSubmit(chargePayment, 'sales')\n\t\t\t\t\t\t\tresetForm({});\n\t\t\t\t\t\t\tsetStatus({ sent: true, msg: \"Payment saved.\" })\n\t\t\t\t\t\t\thandleClose();\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tsetStatus({ sent: false, msg: `Error! ${error}.` })\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{({\n\t\t\t\t\t\tvalues,\n\t\t\t\t\t\tstatus,\n\t\t\t\t\t\thandleSubmit,\n\t\t\t\t\t\ttouched,\n\t\t\t\t\t\terrors,\n\t\t\t\t\t\thandleChange,\n\t\t\t\t\t\thandleBlur,\n\t\t\t\t\t\tisSubmitting,\n\t\t\t\t\t}) => (\n\t\t\t\t\t\t<form\n\t\t\t\t\t\t\tclassName={classes.form}\n\t\t\t\t\t\t\tmethod=\"post\"\n\t\t\t\t\t\t\tnoValidate\n\t\t\t\t\t\t\tid=\"paymentEditForm\"\n\t\t\t\t\t\t\tonSubmit={handleSubmit}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Grid container>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tstatus && status.msg && (\n\t\t\t\t\t\t\t\t\t\t<CustomSnackbar\n\t\t\t\t\t\t\t\t\t\t\tvariant={status.sent ? \"success\" : \"error\"}\n\t\t\t\t\t\t\t\t\t\t\tmessage={status.msg}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tisSubmitting && (<CustomCircularProgress open={true} />)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t<Grid item container spacing={2} direction=\"column\">\n\t\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\tid=\"payment_date\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"payment_date\"\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Payment Date\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.payment_date}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\t\tInputLabelProps={{ shrink: true }}\n\t\t\t\t\t\t\t\t\t\t\terror={errors.payment_date && touched.payment_date}\n\t\t\t\t\t\t\t\t\t\t\thelperText={touched.payment_date && errors.payment_date}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"payment_amount\"\n\t\t\t\t\t\t\t\t\t\t\tid=\"payment_amount\"\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Payment Amount\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.payment_amount}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\t\terror={errors.payment_amount && touched.payment_amount}\n\t\t\t\t\t\t\t\t\t\t\thelperText={touched.payment_amount && errors.payment_amount}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"reference_id\"\n\t\t\t\t\t\t\t\t\t\t\tid=\"reference_id\"\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Reference Id\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.reference_id}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\t\terror={errors.reference_id && touched.reference_id}\n\t\t\t\t\t\t\t\t\t\t\thelperText={touched.reference_id && errors.reference_id}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tmultiline\n\t\t\t\t\t\t\t\t\t\t\trows={2}\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"memo\"\n\t\t\t\t\t\t\t\t\t\t\tid=\"memo\"\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Payment Details/Memo\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={values.memo}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\t\terror={errors.memo && touched.memo}\n\t\t\t\t\t\t\t\t\t\t\thelperText={errors.memo || \"Include details for the payments here (max 50)\"}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\t\t\titem\n\t\t\t\t\t\t\t\t\tcontainer\n\t\t\t\t\t\t\t\t\tjustify=\"flex-start\"\n\t\t\t\t\t\t\t\t\tdirection=\"row\"\n\t\t\t\t\t\t\t\t\tclassName={classes.buttonBox}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\t\t\t\t\tstartIcon={<CancelIcon />}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleClose()}\n\t\t\t\t\t\t\t\t\t\t\tdisableElevation\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\t\t\t\t\tstartIcon={<SaveIcon />}\n\t\t\t\t\t\t\t\t\t\t\tform=\"paymentEditForm\"\n\t\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tSave Payment\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</Formik >\n\t\t\t</DialogContent>\n\t\t</Dialog >\n\t);\n};"]},"metadata":{},"sourceType":"module"}