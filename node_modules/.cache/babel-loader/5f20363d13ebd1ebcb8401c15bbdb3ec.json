{"ast":null,"code":"var _jsxFileName = \"/home/brianmuciri/Projects/farm-ledger-ld/src/Routes/TenantDetailsPage.js\";\nimport React from \"react\";\nimport Layout from \"../components/PrivateLayout\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Tab from '@material-ui/core/Tab';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport { handleDelete } from \"../actions/actions\";\nimport IndividualTenantChargesStatement from \"./IndividualTenantChargesStatement\";\nimport TabPanel from \"../components/TabPanel\";\nimport DataGridTable from '../components/DataGridTable';\nimport TenantInfoDisplayCard from \"../components/TenantInfoDisplayCard\";\nimport { commonStyles } from '../components/commonStyles';\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { startOfToday, startOfMonth, endOfMonth, parse, isWithinInterval } from \"date-fns\";\nconst chargesColumns = [{\n  field: 'charge_label',\n  headerName: 'Charge Type',\n  width: 200\n}, {\n  field: 'charge_date',\n  headerName: 'Date Charged',\n  width: 200\n}, {\n  field: 'charge_amount',\n  headerName: 'Amount',\n  type: \"number\",\n  width: 90\n}];\nconst salesColumns = [{\n  field: 'sale_label',\n  headerName: 'Payment For',\n  width: 200\n}, {\n  field: 'sale_date',\n  headerName: 'Date Made',\n  width: 200\n}, {\n  field: 'sale_amount',\n  headerName: 'Amount',\n  type: \"number\",\n  width: 90\n}];\n\nlet TenantDetailsPage = ({\n  sales,\n  customerAccountDeposits,\n  contactDetails,\n  handleItemDelete\n}) => {\n  const classes = commonStyles();\n  const [tabValue, setTabValue] = React.useState(0);\n\n  const handleTabChange = (event, newValue) => {\n    setTabValue(newValue);\n  };\n\n  const currentMonthCustomerSales = sales.filter(sale => {\n    const saleDate = parse(sale.charge_date, 'yyyy-MM-dd', new Date());\n    return isWithinInterval(saleDate, {\n      start: startOfMonth(startOfToday()),\n      end: endOfMonth(startOfToday())\n    });\n  });\n  const currentMonthCustomerDeposits = customerAccountDeposits.filter(creditItem => {\n    const creditItemDate = parse(creditItem.deposit_date, 'yyyy-MM-dd', new Date());\n    return isWithinInterval(creditItemDate, {\n      start: startOfMonth(startOfToday()),\n      end: endOfMonth(startOfToday())\n    });\n  });\n  return /*#__PURE__*/React.createElement(Layout, {\n    pageTitle: \"Customer Summary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Tabs, {\n    value: tabValue,\n    onChange: handleTabChange,\n    \"aria-label\": \"simple tabs example\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Tab, {\n    label: \"Customer Details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Tab, {\n    label: \"Customer Deposits & Sales\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(TabPanel, {\n    value: tabValue,\n    index: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IndividualTenantChargesStatement, {\n    tenantSaleCharges: sales,\n    contactDetails: contactDetails,\n    handleItemDelete: handleItemDelete,\n    classes: classes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(TabPanel, {\n    value: tabValue,\n    index: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    direction: \"column\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    key: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }, \"Customer Details\")), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    item: true,\n    alignItems: \"stretch\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TenantInfoDisplayCard, {\n    title: \"Customer Details\",\n    subheader: \"Personal Info\",\n    avatarSrc: contactDetails.contact_avatar_url,\n    cardContent: [{\n      name: 'Name',\n      value: `${contactDetails.title} ${contactDetails.first_name} ${contactDetails.last_name}`\n    }, {\n      name: 'ID Number',\n      value: contactDetails.id_number || '-'\n    }, {\n      name: 'Personal Phone Number',\n      value: contactDetails.phone_number || ''\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    item: true,\n    alignItems: \"stretch\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.fullHeightWidthContainer,\n    variant: \"outlined\",\n    elevation: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    align: \"center\",\n    variant: \"subtitle1\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 37\n    }\n  }, \"Recent Sales History\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: 400,\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(DataGridTable, {\n    rows: currentMonthCustomerSales,\n    headCells: chargesColumns,\n    pageSize: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 41\n    }\n  }))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.fullHeightWidthContainer,\n    variant: \"outlined\",\n    elevation: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    align: \"center\",\n    variant: \"subtitle1\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 37\n    }\n  }, \"Recent Deposits History\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: 400,\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(DataGridTable, {\n    rows: currentMonthCustomerDeposits,\n    headCells: salesColumns,\n    pageSize: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 41\n    }\n  })))))))));\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    sales: state.sales.filter(sale => sale.contact_id === ownProps.match.params.contactId),\n    customerAccountDeposits: state.customerAccountDeposits.filter(accountDeposit => accountDeposit.contact_id === ownProps.match.params.contactId),\n    contactDetails: state.contacts.find(({\n      id\n    }) => id === ownProps.match.params.contactId) || {}\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleItemDelete: (itemId, url) => dispatch(handleDelete(itemId, url))\n  };\n};\n\nTenantDetailsPage = connect(mapStateToProps, mapDispatchToProps)(TenantDetailsPage);\nexport default withRouter(TenantDetailsPage);","map":{"version":3,"sources":["/home/brianmuciri/Projects/farm-ledger-ld/src/Routes/TenantDetailsPage.js"],"names":["React","Layout","Typography","Grid","Card","CardContent","Tab","AppBar","Tabs","handleDelete","IndividualTenantChargesStatement","TabPanel","DataGridTable","TenantInfoDisplayCard","commonStyles","connect","withRouter","startOfToday","startOfMonth","endOfMonth","parse","isWithinInterval","chargesColumns","field","headerName","width","type","salesColumns","TenantDetailsPage","sales","customerAccountDeposits","contactDetails","handleItemDelete","classes","tabValue","setTabValue","useState","handleTabChange","event","newValue","currentMonthCustomerSales","filter","sale","saleDate","charge_date","Date","start","end","currentMonthCustomerDeposits","creditItem","creditItemDate","deposit_date","contact_avatar_url","name","value","title","first_name","last_name","id_number","phone_number","fullHeightWidthContainer","height","mapStateToProps","state","ownProps","contact_id","match","params","contactId","accountDeposit","contacts","find","id","mapDispatchToProps","dispatch","itemId","url"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Layout from \"../components/PrivateLayout\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Tab from '@material-ui/core/Tab';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport { handleDelete } from \"../actions/actions\";\nimport IndividualTenantChargesStatement from \"./IndividualTenantChargesStatement\";\nimport TabPanel from \"../components/TabPanel\";\nimport DataGridTable from '../components/DataGridTable'\nimport TenantInfoDisplayCard from \"../components/TenantInfoDisplayCard\";\nimport { commonStyles } from '../components/commonStyles'\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { startOfToday, startOfMonth, endOfMonth, parse, isWithinInterval } from \"date-fns\";\n\nconst chargesColumns = [\n    { field: 'charge_label', headerName: 'Charge Type', width: 200 },\n    { field: 'charge_date', headerName: 'Date Charged', width: 200 },\n    { field: 'charge_amount', headerName: 'Amount', type: \"number\", width: 90 },\n]\n\nconst salesColumns = [\n    { field: 'sale_label', headerName: 'Payment For', width: 200 },\n    { field: 'sale_date', headerName: 'Date Made', width: 200 },\n    { field: 'sale_amount', headerName: 'Amount', type: \"number\", width: 90 },\n]\n\nlet TenantDetailsPage = ({\n    sales,\n    customerAccountDeposits,\n    contactDetails,\n    handleItemDelete,\n}) => {\n    const classes = commonStyles()\n\n    const [tabValue, setTabValue] = React.useState(0);\n\n    const handleTabChange = (event, newValue) => {\n        setTabValue(newValue);\n    };\n\n    const currentMonthCustomerSales = sales.filter((sale) => {\n        const saleDate = parse(sale.charge_date, 'yyyy-MM-dd', new Date())\n        return isWithinInterval(saleDate, { start: startOfMonth(startOfToday()), end: endOfMonth(startOfToday()) })\n    })\n\n    const currentMonthCustomerDeposits = customerAccountDeposits.filter((creditItem) => {\n        const creditItemDate = parse(creditItem.deposit_date, 'yyyy-MM-dd', new Date())\n        return isWithinInterval(creditItemDate, { start: startOfMonth(startOfToday()), end: endOfMonth(startOfToday()) })\n    })\n\n    return (\n        <Layout pageTitle=\"Customer Summary\">\n            <AppBar position=\"static\">\n                <Tabs value={tabValue} onChange={handleTabChange} aria-label=\"simple tabs example\">\n                    <Tab label=\"Customer Details\" />\n                    <Tab label=\"Customer Deposits &amp; Sales\" />\n                </Tabs>\n            </AppBar>\n            <TabPanel value={tabValue} index={1}>\n                <IndividualTenantChargesStatement tenantSaleCharges={sales}\n                    contactDetails={contactDetails} handleItemDelete={handleItemDelete} classes={classes} />\n            </TabPanel>\n            <TabPanel value={tabValue} index={0}>\n                <Grid container justify=\"center\" direction=\"column\" spacing={2}>\n                    <Grid item key={0}>\n                        <Typography variant=\"h6\">Customer Details</Typography>\n                    </Grid>\n                    <Grid\n                        container\n                        direction=\"row\"\n                        item\n                        alignItems=\"stretch\"\n                        spacing={2}\n                    >\n                        <Grid item xs={12} md>\n                            <TenantInfoDisplayCard title=\"Customer Details\"\n                                subheader=\"Personal Info\"\n                                avatarSrc={contactDetails.contact_avatar_url}\n                                cardContent={[\n                                    { name: 'Name', value: `${contactDetails.title} ${contactDetails.first_name} ${contactDetails.last_name}` },\n                                    { name: 'ID Number', value: contactDetails.id_number || '-' },\n                                    { name: 'Personal Phone Number', value: contactDetails.phone_number || '' },\n                                ]}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Grid container direction=\"row\" item alignItems=\"stretch\" spacing={2}>\n                        <Grid item xs={12} md>\n                            <Card className={classes.fullHeightWidthContainer} variant=\"outlined\" elevation={1}>\n                                <CardContent>\n                                    <Typography gutterBottom align=\"center\" variant=\"subtitle1\" component=\"h2\">\n                                        Recent Sales History\n                                    </Typography>\n                                    <div style={{ height: 400, width: '100%' }}>\n                                        <DataGridTable rows={currentMonthCustomerSales} headCells={chargesColumns} pageSize={5} />\n                                    </div>\n                                </CardContent>\n                            </Card>\n                        </Grid>\n                        <Grid item xs={12} md>\n                            <Card className={classes.fullHeightWidthContainer} variant=\"outlined\" elevation={1}>\n                                <CardContent>\n                                    <Typography gutterBottom align=\"center\" variant=\"subtitle1\" component=\"h2\">\n                                        Recent Deposits History\n                                    </Typography>\n                                    <div style={{ height: 400, width: '100%' }}>\n                                        <DataGridTable rows={currentMonthCustomerDeposits} headCells={salesColumns} pageSize={5} />\n                                    </div>\n                                </CardContent>\n                            </Card>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </TabPanel>\n        </Layout>\n    );\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        sales: state.sales.filter((sale) => sale.contact_id === ownProps.match.params.contactId),\n        customerAccountDeposits: state.customerAccountDeposits\n        .filter((accountDeposit) => accountDeposit.contact_id === ownProps.match.params.contactId),\n        contactDetails: state.contacts.find(({ id }) => id === ownProps.match.params.contactId) || {}\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleItemDelete: (itemId, url) => dispatch(handleDelete(itemId, url)),\n    };\n};\n\nTenantDetailsPage = connect(mapStateToProps, mapDispatchToProps)(TenantDetailsPage);\n\nexport default withRouter(TenantDetailsPage);\n"]},"metadata":{},"sourceType":"module"}