{"ast":null,"code":"var _jsxFileName = \"/home/brianmuciri/Projects/farm-ledger-ld/src/components/AppNav.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { firebaseSignOutUser, setPaginationPage, toggleDrawer } from \"../actions/actions\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport clsx from \"clsx\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport PaymentIcon from '@material-ui/icons/Payment';\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport AccountBalanceWalletIcon from \"@material-ui/icons/AccountBalanceWallet\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ContactsIcon from \"@material-ui/icons/Contacts\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nconst navigationLinks = [{\n  text: \"Home\",\n  to: \"/app/\",\n  icon: /*#__PURE__*/React.createElement(DashboardIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 40\n    }\n  })\n}, {\n  text: \"Customers\",\n  to: \"/app/contacts\",\n  icon: /*#__PURE__*/React.createElement(ContactsIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 53\n    }\n  })\n}, {\n  text: \"Products\",\n  to: \"/app/products\",\n  icon: /*#__PURE__*/React.createElement(MonetizationOnIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 52\n    }\n  })\n}, {\n  text: \"Sales\",\n  to: \"/app/Sales\",\n  icon: /*#__PURE__*/React.createElement(PaymentIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 46\n    }\n  })\n}, {\n  text: \"Property Products\",\n  to: \"/app/property_expenditure\",\n  icon: /*#__PURE__*/React.createElement(AccountBalanceWalletIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 73\n    }\n  })\n}];\n\nlet AppNavLayout = ({\n  setDrawerToggleState,\n  drawerOpen,\n  selectedTab,\n  setSelectedTab,\n  classes\n}) => {\n  const theme = useTheme();\n\n  const handleDrawerToggle = () => {\n    setDrawerToggleState(!drawerOpen);\n  };\n\n  const handleListItemClick = indexObject => {\n    setSelectedTab(Object.assign({}, selectedTab, { ...indexObject\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"fixed\",\n    className: clsx(classes.appBar, {\n      [classes.appBarShift]: drawerOpen\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    color: \"inherit\",\n    \"aria-label\": \"open drawer\",\n    onClick: handleDrawerToggle,\n    edge: \"start\",\n    className: clsx(classes.menuButton, drawerOpen && classes.hide),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(MenuIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    noWrap: true,\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, \"Dairy E-Wallet\"))), /*#__PURE__*/React.createElement(Drawer, {\n    className: classes.drawer,\n    variant: \"temporary\",\n    anchor: \"left\",\n    open: drawerOpen,\n    classes: {\n      paper: classes.drawerPaper\n    },\n    ModalProps: {\n      onBackdropClick: handleDrawerToggle\n    },\n    BackdropProps: {\n      invisible: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.drawerHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleDrawerToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, theme.direction === \"ltr\" ? /*#__PURE__*/React.createElement(ChevronLeftIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 29\n    }\n  }) : /*#__PURE__*/React.createElement(ChevronRightIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    component: \"div\",\n    disablePadding: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, navigationLinks.map((linkItem, listIndex) => {\n    const parentIndex = listIndex + 2;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: parentIndex,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(ListItem, {\n      component: Link,\n      to: linkItem.to,\n      button: true,\n      key: linkItem.text,\n      selected: selectedTab.parent === parentIndex,\n      onClick: event => {\n        handleListItemClick({\n          parent: parentIndex\n        });\n        handleDrawerToggle();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(ListItemIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 37\n      }\n    }, linkItem.icon), /*#__PURE__*/React.createElement(ListItemText, {\n      primary: linkItem.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 37\n      }\n    })));\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.drawerHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    drawerOpen: state.drawerOpen,\n    selectedTab: state.selectedTab\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleUserSignOut: () => dispatch(firebaseSignOutUser()),\n    setSelectedTab: index => dispatch(setPaginationPage(index)),\n    setDrawerToggleState: toggleValue => dispatch(toggleDrawer(toggleValue))\n  };\n};\n\nAppNavLayout = connect(mapStateToProps, mapDispatchToProps)(AppNavLayout);\nexport default withRouter(AppNavLayout);","map":{"version":3,"sources":["/home/brianmuciri/Projects/farm-ledger-ld/src/components/AppNav.js"],"names":["React","connect","firebaseSignOutUser","setPaginationPage","toggleDrawer","withRouter","Link","clsx","useTheme","Drawer","MenuIcon","AppBar","Toolbar","List","Typography","Divider","ListItem","IconButton","PaymentIcon","ListItemIcon","MonetizationOnIcon","ListItemText","ChevronLeftIcon","AccountBalanceWalletIcon","ChevronRightIcon","ContactsIcon","DashboardIcon","navigationLinks","text","to","icon","AppNavLayout","setDrawerToggleState","drawerOpen","selectedTab","setSelectedTab","classes","theme","handleDrawerToggle","handleListItemClick","indexObject","Object","assign","root","appBar","appBarShift","menuButton","hide","title","drawer","paper","drawerPaper","onBackdropClick","invisible","drawerHeader","direction","map","linkItem","listIndex","parentIndex","parent","event","mapStateToProps","state","mapDispatchToProps","dispatch","handleUserSignOut","index","toggleValue"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n    firebaseSignOutUser, setPaginationPage, toggleDrawer\n} from \"../actions/actions\";\nimport {\n    withRouter,\n    Link,\n} from \"react-router-dom\";\nimport clsx from \"clsx\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport PaymentIcon from '@material-ui/icons/Payment';\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport AccountBalanceWalletIcon from \"@material-ui/icons/AccountBalanceWallet\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ContactsIcon from \"@material-ui/icons/Contacts\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\n\n\nconst navigationLinks = [\n    { text: \"Home\", to: \"/app/\", icon: <DashboardIcon /> },\n    { text: \"Customers\", to: \"/app/contacts\", icon: <ContactsIcon /> },\n    { text: \"Products\", to: \"/app/products\", icon: <MonetizationOnIcon /> },\n    { text: \"Sales\", to: \"/app/Sales\", icon: <PaymentIcon /> },\n    { text: \"Property Products\", to: \"/app/property_expenditure\", icon: <AccountBalanceWalletIcon /> },\n];\n\n\nlet AppNavLayout = ({\n    setDrawerToggleState,\n    drawerOpen,\n    selectedTab,\n    setSelectedTab,\n    classes,\n}) => {\n    const theme = useTheme();\n\n    const handleDrawerToggle = () => {\n        setDrawerToggleState(!drawerOpen);\n    };\n\n    const handleListItemClick = (indexObject) => {\n        setSelectedTab(Object.assign({}, selectedTab, { ...indexObject }));\n    };\n\n    return (\n        <div className={classes.root}>\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: drawerOpen,\n                })}\n            >\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerToggle}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, drawerOpen && classes.hide)}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap className={classes.title}>\n                        Dairy E-Wallet\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                className={classes.drawer}\n                variant=\"temporary\"\n                anchor=\"left\"\n                open={drawerOpen}\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n                ModalProps={{ onBackdropClick: handleDrawerToggle }}\n                BackdropProps={{ invisible: true }}\n            >\n                <div className={classes.drawerHeader}>\n                    <IconButton onClick={handleDrawerToggle}>\n                        {theme.direction === \"ltr\" ? (\n                            <ChevronLeftIcon />\n                        ) : (\n                            <ChevronRightIcon />\n                        )}\n                    </IconButton>\n                </div>\n                <Divider />\n                <List component=\"div\" disablePadding>\n                    {navigationLinks.map((linkItem, listIndex) => {\n                        const parentIndex = listIndex + 2;\n                        return (\n                            <React.Fragment key={parentIndex}>\n                                <ListItem\n                                    component={Link}\n                                    to={linkItem.to}\n                                    button\n                                    key={linkItem.text}\n                                    selected={selectedTab.parent === parentIndex}\n                                    onClick={(event) => {\n                                        handleListItemClick({\n                                            parent: parentIndex,\n                                        });\n                                        handleDrawerToggle();\n                                    }}\n                                >\n                                    <ListItemIcon>{linkItem.icon}</ListItemIcon>\n                                    <ListItemText primary={linkItem.text} />\n                                </ListItem>\n                            </React.Fragment>\n                        )\n                    })}\n                </List>\n            </Drawer>\n            <div className={classes.drawerHeader} />\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        drawerOpen: state.drawerOpen,\n        selectedTab: state.selectedTab,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleUserSignOut: () => dispatch(firebaseSignOutUser()),\n        setSelectedTab: (index) => dispatch(setPaginationPage(index)),\n        setDrawerToggleState: (toggleValue) => dispatch(toggleDrawer(toggleValue)),\n    };\n};\n\nAppNavLayout = connect(mapStateToProps, mapDispatchToProps)(AppNavLayout);\n\nexport default withRouter(AppNavLayout);\n"]},"metadata":{},"sourceType":"module"}