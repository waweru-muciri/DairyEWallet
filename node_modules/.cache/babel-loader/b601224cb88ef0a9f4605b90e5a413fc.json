{"ast":null,"code":"var _jsxFileName = \"/home/brianmuciri/Projects/farm-ledger-ld/src/Routes/DocumentTemplatePage.js\";\nimport React from \"react\";\nimport PageHeading from \"../components/PageHeading\";\nimport Layout from \"../components/PrivateLayout\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CustomSnackbar from '../components/CustomSnackbar';\nimport { Formik } from \"formik\";\nimport ReactQuill from 'react-quill'; // ES6\n\nimport 'react-quill/dist/quill.snow.css'; // ES6\n\nimport { commonStyles } from \"../components/commonStyles\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { handleItemFormSubmit } from \"../actions/actions\";\nimport * as Yup from \"yup\";\nconst TemplateSchema = Yup.object().shape({\n  template_name: Yup.string().trim().required(\"Template Name is Required\"),\n  template_contents: Yup.string().trim().required(\"Template Content is Required\")\n});\nconst quillEditorModules = {\n  toolbar: [[{\n    'header': [1, 2, 3, 4, 5, 6, false]\n  }, {\n    'font': []\n  }], [{\n    size: []\n  }], ['bold', 'italic', 'underline', 'strike', 'blockquote'], [{\n    'list': 'ordered'\n  }, {\n    'list': 'bullet'\n  }, {\n    'indent': '-1'\n  }, {\n    'indent': '+1'\n  }], ['link', 'image', 'video'], ['clean']],\n  clipboard: {\n    // toggle to add extra line breaks when pasting HTML:\n    matchVisual: false\n  }\n};\n/* \n * Quill editor formats\n * See https://quilljs.com/docs/formats/\n */\n\nconst quillEditorFormats = ['header', 'font', 'size', 'bold', 'italic', 'underline', 'strike', 'blockquote', 'list', 'bullet', 'indent', 'link', 'image', 'video'];\n\nlet DocumentTemplatePage = ({\n  emailTemplateToEdit,\n  history,\n  handleItemSubmit\n}) => {\n  const templateValues = {\n    id: emailTemplateToEdit.id,\n    template_name: emailTemplateToEdit.template_name || '',\n    template_contents: emailTemplateToEdit.template_contents || ''\n  };\n  let pageTitle = emailTemplateToEdit.id ? \"Edit Template\" : \"New Template\";\n  let classes = commonStyles();\n  return /*#__PURE__*/React.createElement(Layout, {\n    pageTitle: \"Template Details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    key: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PageHeading, {\n    text: pageTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    justify: \"center\",\n    item: true,\n    key: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: templateValues,\n    validationSchema: TemplateSchema,\n    onSubmit: async (values, {\n      resetForm,\n      setStatus\n    }) => {\n      const templateDetails = {\n        id: values.id,\n        template_name: values.template_name,\n        last_edit: new Date().toLocaleString(),\n        template_contents: values.template_contents\n      };\n\n      try {\n        await handleItemSubmit(templateDetails, \"email-templates\");\n        resetForm({});\n\n        if (values.id) {\n          history.goBack();\n        }\n\n        setStatus({\n          sent: true,\n          msg: \"Template saved successfully.\"\n        });\n      } catch (error) {\n        setStatus({\n          sent: false,\n          msg: `Error! ${error}.`\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, ({\n    values,\n    status,\n    handleSubmit,\n    isSubmitting,\n    touched,\n    setFieldValue,\n    errors,\n    handleChange,\n    handleBlur\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    method: \"post\",\n    id: \"templateInputForm\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"center\",\n    alignItems: \"stretch\",\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, status && status.msg && /*#__PURE__*/React.createElement(CustomSnackbar, {\n    variant: status.sent ? \"success\" : \"error\",\n    message: status.msg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 14\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    spacing: 2,\n    alignItems: \"stretch\",\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    InputLabelProps: {\n      shrink: true\n    },\n    variant: \"outlined\",\n    id: \"template_name\",\n    name: \"template_name\",\n    label: \"Template Name\",\n    value: values.template_name,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    error: errors.template_name && touched.template_name,\n    helperText: touched.template_name && errors.template_name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 14\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    paragraph: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 14\n    }\n  }, \"Template Contents\"), /*#__PURE__*/React.createElement(ReactQuill, {\n    className: classes.quillEditor,\n    value: values.template_contents,\n    onChange: content => {\n      setFieldValue('template_contents', content);\n    },\n    theme: \"snow\",\n    modules: quillEditorModules,\n    formats: quillEditorFormats,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 14\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"row\",\n    className: classes.buttonBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    variant: \"contained\",\n    size: \"medium\",\n    startIcon: /*#__PURE__*/React.createElement(CancelIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 26\n      }\n    }),\n    onClick: () => history.goBack(),\n    disableElevation: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 14\n    }\n  }, \"Cancel\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"medium\",\n    startIcon: /*#__PURE__*/React.createElement(SaveIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 26\n      }\n    }),\n    form: \"templateInputForm\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 14\n    }\n  }, \"Save\"))))))))));\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    emailTemplateToEdit: state.emailTemplates.find(({\n      id\n    }) => id === ownProps.match.params.templateId) || {}\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleItemSubmit: (item, url) => dispatch(handleItemFormSubmit(item, url))\n  };\n};\n\nDocumentTemplatePage = connect(mapStateToProps, mapDispatchToProps)(DocumentTemplatePage);\nexport default withRouter(DocumentTemplatePage);","map":{"version":3,"sources":["/home/brianmuciri/Projects/farm-ledger-ld/src/Routes/DocumentTemplatePage.js"],"names":["React","PageHeading","Layout","TextField","Grid","Button","CancelIcon","SaveIcon","Typography","CustomSnackbar","Formik","ReactQuill","commonStyles","withRouter","connect","handleItemFormSubmit","Yup","TemplateSchema","object","shape","template_name","string","trim","required","template_contents","quillEditorModules","toolbar","size","clipboard","matchVisual","quillEditorFormats","DocumentTemplatePage","emailTemplateToEdit","history","handleItemSubmit","templateValues","id","pageTitle","classes","values","resetForm","setStatus","templateDetails","last_edit","Date","toLocaleString","goBack","sent","msg","error","status","handleSubmit","isSubmitting","touched","setFieldValue","errors","handleChange","handleBlur","form","shrink","quillEditor","content","buttonBox","mapStateToProps","state","ownProps","emailTemplates","find","match","params","templateId","mapDispatchToProps","dispatch","item","url"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PageHeading from \"../components/PageHeading\";\nimport Layout from \"../components/PrivateLayout\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CustomSnackbar from '../components/CustomSnackbar'\nimport { Formik } from \"formik\";\nimport ReactQuill from 'react-quill'; // ES6\nimport 'react-quill/dist/quill.snow.css'; // ES6\nimport { commonStyles } from \"../components/commonStyles\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {\n\thandleItemFormSubmit,\n} from \"../actions/actions\";\nimport * as Yup from \"yup\";\n\nconst TemplateSchema = Yup.object().shape({\n\ttemplate_name: Yup.string().trim().required(\"Template Name is Required\"),\n\ttemplate_contents: Yup.string().trim().required(\"Template Content is Required\"),\n});\n\nconst quillEditorModules = {\n\ttoolbar: [\n\t\t[{ 'header': [1, 2, 3, 4, 5, 6, false] }, { 'font': [] }],\n\t\t[{ size: [] }],\n\t\t['bold', 'italic', 'underline', 'strike', 'blockquote'],\n\t\t[{ 'list': 'ordered' }, { 'list': 'bullet' },\n\t\t{ 'indent': '-1' }, { 'indent': '+1' }],\n\t\t['link', 'image', 'video'],\n\t\t['clean']\n\t],\n\tclipboard: {\n\t\t// toggle to add extra line breaks when pasting HTML:\n\t\tmatchVisual: false,\n\t}\n}\n/* \n * Quill editor formats\n * See https://quilljs.com/docs/formats/\n */\nconst quillEditorFormats = [\n\t'header', 'font', 'size',\n\t'bold', 'italic', 'underline', 'strike', 'blockquote',\n\t'list', 'bullet', 'indent',\n\t'link', 'image', 'video'\n]\n\nlet DocumentTemplatePage = ({ emailTemplateToEdit, history, handleItemSubmit }) => {\n\n\tconst templateValues = {\n\t\tid: emailTemplateToEdit.id,\n\t\ttemplate_name: emailTemplateToEdit.template_name || '',\n\t\ttemplate_contents: emailTemplateToEdit.template_contents || '',\n\t}\n\n\tlet pageTitle = emailTemplateToEdit.id ? \"Edit Template\" : \"New Template\";\n\tlet classes = commonStyles();\n\n\treturn (\n\t\t<Layout pageTitle=\"Template Details\">\n\t\t\t<Grid container justify=\"center\" direction=\"column\">\n\t\t\t\t<Grid item key={2}>\n\t\t\t\t\t<PageHeading text={pageTitle} />\n\t\t\t\t</Grid>\n\t\t\t\t<Grid\n\t\t\t\t\tcontainer\n\t\t\t\t\tdirection=\"column\"\n\t\t\t\t\tjustify=\"center\"\n\t\t\t\t\titem\n\t\t\t\t\tkey={3}\n\t\t\t\t>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Formik\n\t\t\t\t\t\t\tinitialValues={templateValues}\n\t\t\t\t\t\t\tvalidationSchema={TemplateSchema}\n\t\t\t\t\t\t\tonSubmit={async (values, { resetForm, setStatus }) => {\n\t\t\t\t\t\t\t\tconst templateDetails = {\n\t\t\t\t\t\t\t\t\tid: values.id,\n\t\t\t\t\t\t\t\t\ttemplate_name: values.template_name,\n\t\t\t\t\t\t\t\t\tlast_edit: new Date().toLocaleString(),\n\t\t\t\t\t\t\t\t\ttemplate_contents: values.template_contents,\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tawait handleItemSubmit(templateDetails, \"email-templates\")\n\t\t\t\t\t\t\t\t\tresetForm({});\n\t\t\t\t\t\t\t\t\tif (values.id) {\n\t\t\t\t\t\t\t\t\t\thistory.goBack();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tsetStatus({ sent: true, msg: \"Template saved successfully.\" })\n\t\t\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\t\t\tsetStatus({ sent: false, msg: `Error! ${error}.` })\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{({\n\t\t\t\t\t\t\t\tvalues,\n\t\t\t\t\t\t\t\tstatus,\n\t\t\t\t\t\t\t\thandleSubmit,\n\t\t\t\t\t\t\t\tisSubmitting,\n\t\t\t\t\t\t\t\ttouched,\n\t\t\t\t\t\t\t\tsetFieldValue,\n\t\t\t\t\t\t\t\terrors,\n\t\t\t\t\t\t\t\thandleChange,\n\t\t\t\t\t\t\t\thandleBlur,\n\t\t\t\t\t\t\t}) => (\n\t\t\t\t\t\t\t\t\t<form\n\t\t\t\t\t\t\t\t\t\tclassName={classes.form}\n\t\t\t\t\t\t\t\t\t\tmethod=\"post\"\n\t\t\t\t\t\t\t\t\t\tid=\"templateInputForm\"\n\t\t\t\t\t\t\t\t\t\tonSubmit={handleSubmit}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\t\t\t\t\tcontainer\n\t\t\t\t\t\t\t\t\t\t\tspacing={2}\n\t\t\t\t\t\t\t\t\t\t\tjustify=\"center\"\n\t\t\t\t\t\t\t\t\t\t\talignItems=\"stretch\"\n\t\t\t\t\t\t\t\t\t\t\tdirection=\"column\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tstatus && status.msg && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CustomSnackbar\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant={status.sent ? \"success\" : \"error\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage={status.msg}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t<Grid item container spacing={2} alignItems=\"stretch\" direction=\"column\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tInputLabelProps={{ shrink: true }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"template_name\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"template_name\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"Template Name\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.template_name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\terrors.template_name && touched.template_name\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttouched.template_name && errors.template_name\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography variant='body1' paragraph>Template Contents</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<ReactQuill\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.quillEditor}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.template_contents}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(content) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue('template_contents', content)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttheme=\"snow\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmodules={quillEditorModules}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tformats={quillEditorFormats} >\n\t\t\t\t\t\t\t\t\t\t\t\t\t</ReactQuill>\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\t\t\t\t\t\titem\n\t\t\t\t\t\t\t\t\t\t\t\tcontainer\n\t\t\t\t\t\t\t\t\t\t\t\tdirection=\"row\"\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.buttonBox}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstartIcon={<CancelIcon />}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => history.goBack()}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisableElevation\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstartIcon={<SaveIcon />}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tform=\"templateInputForm\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tSave\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t\t</Grid >\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Formik>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Layout>\n\t);\n};\n\nconst mapStateToProps = (state, ownProps) => {\n\treturn {\n\t\temailTemplateToEdit: state.emailTemplates.find(({ id }) => id === ownProps.match.params.templateId) || {},\n\t};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\thandleItemSubmit: (item, url) => dispatch(handleItemFormSubmit(item, url)),\n\t}\n};\n\n\nDocumentTemplatePage = connect(mapStateToProps, mapDispatchToProps)(DocumentTemplatePage);\n\nexport default withRouter(DocumentTemplatePage);\n"]},"metadata":{},"sourceType":"module"}