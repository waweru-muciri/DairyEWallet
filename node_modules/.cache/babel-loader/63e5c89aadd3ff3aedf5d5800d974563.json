{"ast":null,"code":"var _jsxFileName = \"/home/brianmuciri/Projects/farm-ledger-ld/src/components/charges/AddCreditNote.js\";\nimport React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport CustomSnackbar from '../CustomSnackbar';\nimport { Formik } from \"formik\";\nimport { commonStyles } from \"../commonStyles\";\nimport * as Yup from \"yup\";\nimport { format, startOfToday } from \"date-fns\";\nimport CustomCircularProgress from \"../CustomCircularProgress\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nconst defaultDate = format(startOfToday(), 'yyyy-MM-dd');\nconst PaymentSchema = Yup.object().shape({\n  tenant_id: Yup.string().trim().required('Tenant is required'),\n  memo: Yup.string().trim().max(50, \"Memo details should be less than 50 characters\").default(''),\n  charge_balance: Yup.number().typeError('Charge Balance must be a number').required(\"Charge balance is required\"),\n  credit_amount: Yup.number().typeError('Amount must be a number').positive(\"Amount must be a positive number\").max(Yup.ref('charge_balance'), 'Credit amount cannot be greater than remaining balance').required(\"Credit amount is required\"),\n  credit_issue_date: Yup.date().required('Credit Date is Required')\n});\nexport default function CreditNoteInputForm({\n  open,\n  handleClose,\n  chargeToAddCreditNote,\n  handleItemSubmit\n}) {\n  const classes = commonStyles();\n  const paymentValues = {\n    charge_id: chargeToAddCreditNote.id,\n    unit_ref: chargeToAddCreditNote.unit_ref,\n    tenant_name: chargeToAddCreditNote.tenant_name,\n    unit_id: chargeToAddCreditNote.unit_id,\n    charge_amount: chargeToAddCreditNote.charge_amount || 0,\n    charge_balance: chargeToAddCreditNote.balance || 0,\n    charge_label: chargeToAddCreditNote.charge_label || 0,\n    charge_type: chargeToAddCreditNote.charge_type || 0,\n    credit_amount: \"\",\n    memo: \"\",\n    credit_issue_date: defaultDate,\n    tenant_id: chargeToAddCreditNote.tenant_id,\n    property_id: chargeToAddCreditNote.property_id\n  };\n  return /*#__PURE__*/React.createElement(Dialog, {\n    fullWidth: true,\n    maxWidth: \"sm\",\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"alert-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }\n  }, \"Credit Note for - \", paymentValues.unit_ref, \" \\u2022 \", paymentValues.tenant_name), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: paymentValues,\n    enableReinitialize: true,\n    validationSchema: PaymentSchema,\n    onSubmit: async (values, {\n      resetForm,\n      setStatus\n    }) => {\n      try {\n        const creditNote = {\n          charge_id: values.charge_id,\n          credit_amount: values.credit_amount,\n          memo: values.memo,\n          credit_issue_date: values.credit_issue_date,\n          tenant_id: values.tenant_id,\n          unit_id: values.unit_id,\n          property_id: values.property_id\n        };\n        await handleItemSubmit(creditNote, 'credit-notes');\n        await handleItemSubmit({\n          id: values.charge_id,\n          payed: true\n        }, 'transactions-charges');\n        setStatus({\n          sent: true,\n          msg: \"Credit Note saved successfully.\"\n        });\n        handleClose();\n      } catch (error) {\n        setStatus({\n          sent: false,\n          msg: `Error! ${error}.`\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, ({\n    values,\n    status,\n    handleSubmit,\n    touched,\n    errors,\n    handleChange,\n    handleBlur,\n    isSubmitting\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    method: \"post\",\n    id: \"creditNoteForm\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 8\n    }\n  }, status && status.msg && /*#__PURE__*/React.createElement(CustomSnackbar, {\n    variant: status.sent ? \"success\" : \"error\",\n    message: status.msg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }), isSubmitting && /*#__PURE__*/React.createElement(CustomCircularProgress, {\n    open: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 10\n    }\n  }, \" Charge Details : \", values.charge_label)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 10\n    }\n  }, \"Total Charge Amount : \", values.charge_amount)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 10\n    }\n  }, \"Charge Balance: \", values.charge_balance)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    id: \"credit_issue_date\",\n    type: \"date\",\n    name: \"credit_issue_date\",\n    label: \"Credit Issue Date\",\n    value: values.credit_issue_date,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    InputLabelProps: {\n      shrink: true\n    },\n    error: errors.credit_issue_date && touched.credit_issue_date,\n    helperText: touched.credit_issue_date && errors.credit_issue_date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 10\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    type: \"text\",\n    variant: \"outlined\",\n    name: \"credit_amount\",\n    id: \"credit_amount\",\n    label: \"Credit Amount\",\n    value: values.credit_amount,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    error: errors.credit_amount && touched.credit_amount,\n    helperText: touched.credit_amount && errors.credit_amount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 10\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    type: \"text\",\n    multiline: true,\n    rows: 2,\n    variant: \"outlined\",\n    name: \"memo\",\n    id: \"memo\",\n    label: \"Credit Details/Memo\",\n    value: values.memo,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    error: errors.memo && touched.memo,\n    helperText: \"Include details for the credit here (max 50)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 10\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    justify: \"flex-start\",\n    direction: \"row\",\n    className: classes.buttonBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    variant: \"contained\",\n    size: \"medium\",\n    startIcon: /*#__PURE__*/React.createElement(CancelIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 23\n      }\n    }),\n    onClick: () => {\n      handleClose();\n    },\n    disableElevation: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }, \"Cancel\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"medium\",\n    startIcon: /*#__PURE__*/React.createElement(SaveIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 23\n      }\n    }),\n    form: \"creditNoteForm\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 11\n    }\n  }, \"Save Note\"))))))));\n}\n;","map":{"version":3,"sources":["/home/brianmuciri/Projects/farm-ledger-ld/src/components/charges/AddCreditNote.js"],"names":["React","Typography","Grid","TextField","Button","SaveIcon","CancelIcon","CustomSnackbar","Formik","commonStyles","Yup","format","startOfToday","CustomCircularProgress","Dialog","DialogTitle","DialogContent","defaultDate","PaymentSchema","object","shape","tenant_id","string","trim","required","memo","max","default","charge_balance","number","typeError","credit_amount","positive","ref","credit_issue_date","date","CreditNoteInputForm","open","handleClose","chargeToAddCreditNote","handleItemSubmit","classes","paymentValues","charge_id","id","unit_ref","tenant_name","unit_id","charge_amount","balance","charge_label","charge_type","property_id","values","resetForm","setStatus","creditNote","payed","sent","msg","error","status","handleSubmit","touched","errors","handleChange","handleBlur","isSubmitting","form","shrink","buttonBox"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,MAAT,EAAiBC,YAAjB,QAAqC,UAArC;AACA,OAAOC,sBAAP,MAAmC,2BAAnC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AAGA,MAAMC,WAAW,GAAGN,MAAM,CAACC,YAAY,EAAb,EAAiB,YAAjB,CAA1B;AAEA,MAAMM,aAAa,GAAGR,GAAG,CAACS,MAAJ,GAAaC,KAAb,CAAmB;AACxCC,EAAAA,SAAS,EAAEX,GAAG,CAACY,MAAJ,GAAaC,IAAb,GAAoBC,QAApB,CAA6B,oBAA7B,CAD6B;AAExCC,EAAAA,IAAI,EAAEf,GAAG,CAACY,MAAJ,GAAaC,IAAb,GAAoBG,GAApB,CAAwB,EAAxB,EAA4B,gDAA5B,EAA8EC,OAA9E,CAAsF,EAAtF,CAFkC;AAGxCC,EAAAA,cAAc,EAAElB,GAAG,CAACmB,MAAJ,GAAaC,SAAb,CAAuB,iCAAvB,EAA0DN,QAA1D,CAAmE,4BAAnE,CAHwB;AAIxCO,EAAAA,aAAa,EAAErB,GAAG,CAACmB,MAAJ,GAAaC,SAAb,CAAuB,yBAAvB,EACbE,QADa,CACJ,kCADI,EAEbN,GAFa,CAEThB,GAAG,CAACuB,GAAJ,CAAQ,gBAAR,CAFS,EAEkB,wDAFlB,EAGbT,QAHa,CAGJ,2BAHI,CAJyB;AAQxCU,EAAAA,iBAAiB,EAAExB,GAAG,CAACyB,IAAJ,GAAWX,QAAX,CAAoB,yBAApB;AARqB,CAAnB,CAAtB;AAYA,eAAe,SAASY,mBAAT,CAA6B;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,WAAR;AAAqBC,EAAAA,qBAArB;AAA4CC,EAAAA;AAA5C,CAA7B,EAA6F;AAC3G,QAAMC,OAAO,GAAGhC,YAAY,EAA5B;AACA,QAAMiC,aAAa,GAAG;AACrBC,IAAAA,SAAS,EAAEJ,qBAAqB,CAACK,EADZ;AAErBC,IAAAA,QAAQ,EAAEN,qBAAqB,CAACM,QAFX;AAGrBC,IAAAA,WAAW,EAAEP,qBAAqB,CAACO,WAHd;AAIrBC,IAAAA,OAAO,EAAER,qBAAqB,CAACQ,OAJV;AAKrBC,IAAAA,aAAa,EAAET,qBAAqB,CAACS,aAAtB,IAAuC,CALjC;AAMrBpB,IAAAA,cAAc,EAAEW,qBAAqB,CAACU,OAAtB,IAAiC,CAN5B;AAOrBC,IAAAA,YAAY,EAAEX,qBAAqB,CAACW,YAAtB,IAAsC,CAP/B;AAQrBC,IAAAA,WAAW,EAAEZ,qBAAqB,CAACY,WAAtB,IAAqC,CAR7B;AASrBpB,IAAAA,aAAa,EAAE,EATM;AAUrBN,IAAAA,IAAI,EAAE,EAVe;AAWrBS,IAAAA,iBAAiB,EAAEjB,WAXE;AAYrBI,IAAAA,SAAS,EAAEkB,qBAAqB,CAAClB,SAZZ;AAarB+B,IAAAA,WAAW,EAAEb,qBAAqB,CAACa;AAbd,GAAtB;AAgBA,sBACC,oBAAC,MAAD;AACC,IAAA,SAAS,MADV;AAEC,IAAA,QAAQ,EAAC,IAFV;AAGC,IAAA,IAAI,EAAEf,IAHP;AAIC,IAAA,OAAO,EAAEC,WAJV;AAKC,uBAAgB,mBALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOC,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAwDI,aAAa,CAACG,QAAtE,cAAmFH,aAAa,CAACI,WAAjG,CAPD,eAQC,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,MAAD;AACC,IAAA,aAAa,EAAEJ,aADhB;AAEC,IAAA,kBAAkB,MAFnB;AAEoB,IAAA,gBAAgB,EAAExB,aAFtC;AAGC,IAAA,QAAQ,EAAE,OAAOmC,MAAP,EAAe;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,KAAf,KAA4C;AACrD,UAAI;AACH,cAAMC,UAAU,GAAG;AAClBb,UAAAA,SAAS,EAAEU,MAAM,CAACV,SADA;AAElBZ,UAAAA,aAAa,EAAEsB,MAAM,CAACtB,aAFJ;AAGlBN,UAAAA,IAAI,EAAE4B,MAAM,CAAC5B,IAHK;AAIlBS,UAAAA,iBAAiB,EAAEmB,MAAM,CAACnB,iBAJR;AAKlBb,UAAAA,SAAS,EAAEgC,MAAM,CAAChC,SALA;AAMlB0B,UAAAA,OAAO,EAAEM,MAAM,CAACN,OANE;AAOlBK,UAAAA,WAAW,EAAEC,MAAM,CAACD;AAPF,SAAnB;AASA,cAAMZ,gBAAgB,CAACgB,UAAD,EAAa,cAAb,CAAtB;AACA,cAAMhB,gBAAgB,CAAC;AAAEI,UAAAA,EAAE,EAAES,MAAM,CAACV,SAAb;AAAwBc,UAAAA,KAAK,EAAE;AAA/B,SAAD,EAAwC,sBAAxC,CAAtB;AACAF,QAAAA,SAAS,CAAC;AAAEG,UAAAA,IAAI,EAAE,IAAR;AAAcC,UAAAA,GAAG,EAAE;AAAnB,SAAD,CAAT;AACArB,QAAAA,WAAW;AACX,OAdD,CAcE,OAAOsB,KAAP,EAAc;AACfL,QAAAA,SAAS,CAAC;AAAEG,UAAAA,IAAI,EAAE,KAAR;AAAeC,UAAAA,GAAG,EAAG,UAASC,KAAM;AAApC,SAAD,CAAT;AACA;AACD,KArBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAuBE,CAAC;AACDP,IAAAA,MADC;AAEDQ,IAAAA,MAFC;AAGDC,IAAAA,YAHC;AAIDC,IAAAA,OAJC;AAKDC,IAAAA,MALC;AAMDC,IAAAA,YANC;AAODC,IAAAA,UAPC;AAQDC,IAAAA;AARC,GAAD,kBAUA;AACC,IAAA,SAAS,EAAE1B,OAAO,CAAC2B,IADpB;AAEC,IAAA,MAAM,EAAC,MAFR;AAGC,IAAA,EAAE,EAAC,gBAHJ;AAIC,IAAA,QAAQ,EAAEN,YAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMC,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAA4B,IAAA,SAAS,EAAC,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEED,MAAM,IAAIA,MAAM,CAACF,GAAjB,iBACC,oBAAC,cAAD;AACC,IAAA,OAAO,EAAEE,MAAM,CAACH,IAAP,GAAc,SAAd,GAA0B,OADpC;AAEC,IAAA,OAAO,EAAEG,MAAM,CAACF,GAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHH,EAUEQ,YAAY,iBAAK,oBAAC,sBAAD;AAAwB,IAAA,IAAI,EAAE,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVnB,eAYC,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAmDd,MAAM,CAACH,YAA1D,CADD,CAZD,eAeC,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAuDG,MAAM,CAACL,aAA9D,CADD,CAfD,eAkBC,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAiDK,MAAM,CAACzB,cAAxD,CADD,CAlBD,eAqBC,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,SAAD;AACC,IAAA,SAAS,MADV;AAEC,IAAA,OAAO,EAAC,UAFT;AAGC,IAAA,EAAE,EAAC,mBAHJ;AAIC,IAAA,IAAI,EAAC,MAJN;AAKC,IAAA,IAAI,EAAC,mBALN;AAMC,IAAA,KAAK,EAAC,mBANP;AAOC,IAAA,KAAK,EAAEyB,MAAM,CAACnB,iBAPf;AAQC,IAAA,QAAQ,EAAE+B,YARX;AASC,IAAA,MAAM,EAAEC,UATT;AAUC,IAAA,eAAe,EAAE;AAAEG,MAAAA,MAAM,EAAE;AAAV,KAVlB;AAWC,IAAA,KAAK,EAAEL,MAAM,CAAC9B,iBAAP,IAA4B6B,OAAO,CAAC7B,iBAX5C;AAYC,IAAA,UAAU,EAAE6B,OAAO,CAAC7B,iBAAR,IAA6B8B,MAAM,CAAC9B,iBAZjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CArBD,eAqCC,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,SAAD;AACC,IAAA,SAAS,MADV;AAEC,IAAA,IAAI,EAAC,MAFN;AAGC,IAAA,OAAO,EAAC,UAHT;AAIC,IAAA,IAAI,EAAC,eAJN;AAKC,IAAA,EAAE,EAAC,eALJ;AAMC,IAAA,KAAK,EAAC,eANP;AAOC,IAAA,KAAK,EAAEmB,MAAM,CAACtB,aAPf;AAQC,IAAA,QAAQ,EAAEkC,YARX;AASC,IAAA,MAAM,EAAEC,UATT;AAUC,IAAA,KAAK,EAAEF,MAAM,CAACjC,aAAP,IAAwBgC,OAAO,CAAChC,aAVxC;AAWC,IAAA,UAAU,EAAEgC,OAAO,CAAChC,aAAR,IAAyBiC,MAAM,CAACjC,aAX7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CArCD,eAoDC,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,SAAD;AACC,IAAA,SAAS,MADV;AAEC,IAAA,IAAI,EAAC,MAFN;AAGC,IAAA,SAAS,MAHV;AAIC,IAAA,IAAI,EAAE,CAJP;AAKC,IAAA,OAAO,EAAC,UALT;AAMC,IAAA,IAAI,EAAC,MANN;AAOC,IAAA,EAAE,EAAC,MAPJ;AAQC,IAAA,KAAK,EAAC,qBARP;AASC,IAAA,KAAK,EAAEsB,MAAM,CAAC5B,IATf;AAUC,IAAA,QAAQ,EAAEwC,YAVX;AAWC,IAAA,MAAM,EAAEC,UAXT;AAYC,IAAA,KAAK,EAAEF,MAAM,CAACvC,IAAP,IAAesC,OAAO,CAACtC,IAZ/B;AAaC,IAAA,UAAU,EAAE,8CAbb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CApDD,eAqEC,oBAAC,IAAD;AACC,IAAA,IAAI,MADL;AAEC,IAAA,SAAS,MAFV;AAGC,IAAA,OAAO,EAAC,YAHT;AAIC,IAAA,SAAS,EAAC,KAJX;AAKC,IAAA,SAAS,EAAEgB,OAAO,CAAC6B,SALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOC,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,MAAD;AACC,IAAA,KAAK,EAAC,WADP;AAEC,IAAA,OAAO,EAAC,WAFT;AAGC,IAAA,IAAI,EAAC,QAHN;AAIC,IAAA,SAAS,eAAE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJZ;AAKC,IAAA,OAAO,EAAE,MAAM;AAAEhC,MAAAA,WAAW;AAAI,KALjC;AAMC,IAAA,gBAAgB,MANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,CAPD,eAmBC,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,MAAD;AACC,IAAA,IAAI,EAAC,QADN;AAEC,IAAA,KAAK,EAAC,SAFP;AAGC,IAAA,OAAO,EAAC,WAHT;AAIC,IAAA,IAAI,EAAC,QAJN;AAKC,IAAA,SAAS,eAAE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALZ;AAMC,IAAA,IAAI,EAAC,gBANN;AAOC,IAAA,QAAQ,EAAE6B,YAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADD,CAnBD,CArED,CAND,CAjCF,CADD,CARD,CADD;AA+JA;AAAA","sourcesContent":["import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport CustomSnackbar from '../CustomSnackbar'\nimport { Formik } from \"formik\";\nimport { commonStyles } from \"../commonStyles\";\nimport * as Yup from \"yup\";\nimport { format, startOfToday } from \"date-fns\";\nimport CustomCircularProgress from \"../CustomCircularProgress\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\n\n\nconst defaultDate = format(startOfToday(), 'yyyy-MM-dd')\n\nconst PaymentSchema = Yup.object().shape({\n\ttenant_id: Yup.string().trim().required('Tenant is required'),\n\tmemo: Yup.string().trim().max(50, \"Memo details should be less than 50 characters\").default(''),\n\tcharge_balance: Yup.number().typeError('Charge Balance must be a number').required(\"Charge balance is required\"),\n\tcredit_amount: Yup.number().typeError('Amount must be a number')\n\t\t.positive(\"Amount must be a positive number\")\n\t\t.max(Yup.ref('charge_balance'), 'Credit amount cannot be greater than remaining balance')\n\t\t.required(\"Credit amount is required\"),\n\tcredit_issue_date: Yup.date().required('Credit Date is Required'),\n});\n\n\nexport default function CreditNoteInputForm({ open, handleClose, chargeToAddCreditNote, handleItemSubmit }) {\n\tconst classes = commonStyles();\n\tconst paymentValues = {\n\t\tcharge_id: chargeToAddCreditNote.id,\n\t\tunit_ref: chargeToAddCreditNote.unit_ref,\n\t\ttenant_name: chargeToAddCreditNote.tenant_name,\n\t\tunit_id: chargeToAddCreditNote.unit_id,\n\t\tcharge_amount: chargeToAddCreditNote.charge_amount || 0,\n\t\tcharge_balance: chargeToAddCreditNote.balance || 0,\n\t\tcharge_label: chargeToAddCreditNote.charge_label || 0,\n\t\tcharge_type: chargeToAddCreditNote.charge_type || 0,\n\t\tcredit_amount: \"\",\n\t\tmemo: \"\",\n\t\tcredit_issue_date: defaultDate,\n\t\ttenant_id: chargeToAddCreditNote.tenant_id,\n\t\tproperty_id: chargeToAddCreditNote.property_id,\n\t};\n\n\treturn (\n\t\t<Dialog\n\t\t\tfullWidth\n\t\t\tmaxWidth=\"sm\"\n\t\t\topen={open}\n\t\t\tonClose={handleClose}\n\t\t\taria-labelledby=\"form-dialog-title\"\n\t\t>\n\t\t\t<DialogTitle id=\"alert-dialog-title\">Credit Note for - {paymentValues.unit_ref} • {paymentValues.tenant_name}</DialogTitle>\n\t\t\t<DialogContent>\n\t\t\t\t<Formik\n\t\t\t\t\tinitialValues={paymentValues}\n\t\t\t\t\tenableReinitialize validationSchema={PaymentSchema}\n\t\t\t\t\tonSubmit={async (values, { resetForm, setStatus }) => {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst creditNote = {\n\t\t\t\t\t\t\t\tcharge_id: values.charge_id,\n\t\t\t\t\t\t\t\tcredit_amount: values.credit_amount,\n\t\t\t\t\t\t\t\tmemo: values.memo,\n\t\t\t\t\t\t\t\tcredit_issue_date: values.credit_issue_date,\n\t\t\t\t\t\t\t\ttenant_id: values.tenant_id,\n\t\t\t\t\t\t\t\tunit_id: values.unit_id,\n\t\t\t\t\t\t\t\tproperty_id: values.property_id,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tawait handleItemSubmit(creditNote, 'credit-notes')\n\t\t\t\t\t\t\tawait handleItemSubmit({ id: values.charge_id, payed: true }, 'transactions-charges')\n\t\t\t\t\t\t\tsetStatus({ sent: true, msg: \"Credit Note saved successfully.\" })\n\t\t\t\t\t\t\thandleClose();\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tsetStatus({ sent: false, msg: `Error! ${error}.` })\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{({\n\t\t\t\t\t\tvalues,\n\t\t\t\t\t\tstatus,\n\t\t\t\t\t\thandleSubmit,\n\t\t\t\t\t\ttouched,\n\t\t\t\t\t\terrors,\n\t\t\t\t\t\thandleChange,\n\t\t\t\t\t\thandleBlur,\n\t\t\t\t\t\tisSubmitting,\n\t\t\t\t\t}) => (\n\t\t\t\t\t\t<form\n\t\t\t\t\t\t\tclassName={classes.form}\n\t\t\t\t\t\t\tmethod=\"post\"\n\t\t\t\t\t\t\tid=\"creditNoteForm\"\n\t\t\t\t\t\t\tonSubmit={handleSubmit}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Grid container spacing={2} direction=\"column\">\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tstatus && status.msg && (\n\t\t\t\t\t\t\t\t\t\t<CustomSnackbar\n\t\t\t\t\t\t\t\t\t\t\tvariant={status.sent ? \"success\" : \"error\"}\n\t\t\t\t\t\t\t\t\t\t\tmessage={status.msg}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tisSubmitting && (<CustomCircularProgress open={true} />)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<Typography variant=\"subtitle1\"> Charge Details : {values.charge_label}</Typography>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<Typography variant=\"subtitle1\">Total Charge Amount : {values.charge_amount}</Typography>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<Typography variant=\"subtitle1\">Charge Balance: {values.charge_balance}</Typography>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\tid=\"credit_issue_date\"\n\t\t\t\t\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\t\t\t\t\tname=\"credit_issue_date\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Credit Issue Date\"\n\t\t\t\t\t\t\t\t\t\tvalue={values.credit_issue_date}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\tInputLabelProps={{ shrink: true }}\n\t\t\t\t\t\t\t\t\t\terror={errors.credit_issue_date && touched.credit_issue_date}\n\t\t\t\t\t\t\t\t\t\thelperText={touched.credit_issue_date && errors.credit_issue_date}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\tname=\"credit_amount\"\n\t\t\t\t\t\t\t\t\t\tid=\"credit_amount\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Credit Amount\"\n\t\t\t\t\t\t\t\t\t\tvalue={values.credit_amount}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\terror={errors.credit_amount && touched.credit_amount}\n\t\t\t\t\t\t\t\t\t\thelperText={touched.credit_amount && errors.credit_amount}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tmultiline\n\t\t\t\t\t\t\t\t\t\trows={2}\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\tname=\"memo\"\n\t\t\t\t\t\t\t\t\t\tid=\"memo\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Credit Details/Memo\"\n\t\t\t\t\t\t\t\t\t\tvalue={values.memo}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\terror={errors.memo && touched.memo}\n\t\t\t\t\t\t\t\t\t\thelperText={\"Include details for the credit here (max 50)\"}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid\n\t\t\t\t\t\t\t\t\titem\n\t\t\t\t\t\t\t\t\tcontainer\n\t\t\t\t\t\t\t\t\tjustify=\"flex-start\"\n\t\t\t\t\t\t\t\t\tdirection=\"row\"\n\t\t\t\t\t\t\t\t\tclassName={classes.buttonBox}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\t\t\t\t\tstartIcon={<CancelIcon />}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => { handleClose() }}\n\t\t\t\t\t\t\t\t\t\t\tdisableElevation\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\t\t\t\t\tstartIcon={<SaveIcon />}\n\t\t\t\t\t\t\t\t\t\t\tform=\"creditNoteForm\"\n\t\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tSave Note\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</Formik >\n\t\t\t</DialogContent>\n\t\t</Dialog >\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}