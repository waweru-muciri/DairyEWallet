{"ast":null,"code":"var _jsxFileName = \"/home/brianmuciri/Projects/farm-ledger-ld/src/Routes/RentBalancesPage.js\";\nimport React, { useEffect, useState } from \"react\";\nimport PageHeading from \"../components/PageHeading\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Box from \"@material-ui/core/Box\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport ExportToExcelBtn from \"../components/ExportToExcelBtn\";\nimport PrintArrayToPdf from \"../components/PrintArrayToPdfBtn\";\nimport CommonTable from \"../components/table/commonTable\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { currencyFormatter } from \"../assets/commonAssets\";\nimport { parse, isWithinInterval, startOfToday, subDays } from \"date-fns\";\nconst headCells = [{\n  id: \"tenant_name\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Tenant\"\n}, {\n  id: \"unit_ref\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Unit Ref/Number\"\n}, {\n  id: \"last_thirty\",\n  numeric: true,\n  disablePadding: true,\n  label: \"0-30 Days\"\n}, {\n  id: \"last_sixty\",\n  numeric: true,\n  disablePadding: true,\n  label: \"31-60 Days\"\n}, {\n  id: \"last_ninety\",\n  numeric: true,\n  disablePadding: true,\n  label: \"61-90 Days\"\n}, {\n  id: \"ninety_plus\",\n  numeric: true,\n  disablePadding: true,\n  label: \"90+ Days\"\n}, {\n  id: \"totalTenantRentBalance\",\n  numeric: true,\n  disablePadding: true,\n  label: \"Balance\"\n}];\nconst endOfLastThirtyDays = subDays(startOfToday(), 30);\nconst endOfLastSixtyDays = subDays(startOfToday(), 60);\nconst endOfLastNinetyDays = subDays(startOfToday(), 90);\nconst defaultEarliestTime = new Date(2000, 1, 1);\n\nlet RentBalancesPage = ({\n  properties,\n  contacts,\n  rentalCharges,\n  classes\n}) => {\n  let [filteredMappedRentBalancesItems, setFilteredMappedRentalBalances] = useState([]);\n  let [mappedRentBalances, setMappedRentBalances] = useState([]);\n  let [contactFilter, setContactFilter] = useState(null);\n  let [propertyFilter, setPropertyFilter] = useState(\"all\");\n  let [totalBalancesAmount, setTotalBalancesAmount] = useState(0);\n  let [uniqueTenantsWithBalances, setUniqueTenantsWithBalances] = useState(0);\n  const [selected, setSelected] = useState([]);\n  useEffect(() => {\n    const uniqueTenantIdsWithCharges = new Set(rentalCharges.map(rentCharge => rentCharge.tenant_id));\n    const tenantsWithCharges = rentalCharges.map(rentCharge => ({\n      id: rentCharge.tenant_id,\n      tenant_id: rentCharge.tenant_id,\n      tenant_name: rentCharge.tenant_name,\n      property_id: rentCharge.property_id,\n      unit_ref: rentCharge.unit_details\n    }));\n    let totalRentBalances = 0;\n    const mappedTenantsRentBalances = Array.from(uniqueTenantIdsWithCharges).map(tenantId => {\n      const tenantDetails = tenantsWithCharges.find(({\n        tenant_id\n      }) => tenant_id === tenantId) || {};\n      const tenantBalancesDetails = {};\n      let totalTenantRentBalance = 0;\n      rentalCharges.filter(({\n        tenant_id\n      }) => tenant_id === tenantId).forEach(rentCharge => {\n        const rentChargeDueDate = parse(rentCharge.due_date, 'yyyy-MM-dd', new Date());\n        totalTenantRentBalance += parseFloat(rentCharge.balance) || 0; //check if due date is within a month ago\n\n        if (isWithinInterval(rentChargeDueDate, {\n          start: endOfLastThirtyDays,\n          end: startOfToday()\n        })) {\n          tenantBalancesDetails['last_thirty'] = rentCharge.balance;\n        } //check if due date is within 31-60 days ago\n        else if (isWithinInterval(rentChargeDueDate, {\n            start: endOfLastSixtyDays,\n            end: endOfLastThirtyDays\n          })) {\n            tenantBalancesDetails['last_sixty'] = rentCharge.balance;\n          } //check if due date is within 61-90 days ago\n          else if (isWithinInterval(rentChargeDueDate, {\n              start: endOfLastNinetyDays,\n              end: endOfLastSixtyDays\n            })) {\n              tenantBalancesDetails['last_ninety'] = rentCharge.balance;\n            } //check if due date is within 91+ days ago\n            else if (isWithinInterval(rentChargeDueDate, {\n                start: defaultEarliestTime,\n                end: endOfLastNinetyDays\n              })) {\n                tenantBalancesDetails['ninety_plus'] = rentCharge.balance;\n              }\n      });\n      tenantBalancesDetails.totalTenantRentBalance = totalTenantRentBalance;\n      totalRentBalances += totalTenantRentBalance;\n      return Object.assign(tenantBalancesDetails, tenantDetails);\n    });\n    setUniqueTenantsWithBalances(uniqueTenantIdsWithCharges.size);\n    setTotalBalancesAmount(totalRentBalances);\n    setMappedRentBalances(mappedTenantsRentBalances);\n    setFilteredMappedRentalBalances(mappedTenantsRentBalances);\n  }, [rentalCharges]);\n\n  const handleSearchFormSubmit = event => {\n    event.preventDefault(); //filter the rentalCharges according to the search criteria here\n\n    const filteredMappedRentBalances = mappedRentBalances.filter(({\n      tenant_id,\n      property_id\n    }) => (!contactFilter ? true : tenant_id === contactFilter.id) && (propertyFilter === \"all\" ? true : property_id === propertyFilter));\n    setFilteredMappedRentalBalances(filteredMappedRentBalances);\n  };\n\n  const resetSearchForm = event => {\n    event.preventDefault();\n    setContactFilter(null);\n    setPropertyFilter('all');\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"center\",\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    key: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(PageHeading, {\n    text: \"Outstanding Rent Balances\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    item: true,\n    alignItems: \"center\",\n    direction: \"row\",\n    key: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ExportToExcelBtn, {\n    disabled: !selected.length,\n    reportName: `Tenants Outstanding Rent Balances Records`,\n    reportTitle: 'Tenants Outstanding Rent Balances Data',\n    headCells: headCells,\n    dataToPrint: mappedRentBalances.filter(({\n      id\n    }) => selected.includes(id)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PrintArrayToPdf, {\n    disabled: !selected.length,\n    reportName: 'Tenants Outstanding Rent Balances Data',\n    reportTitle: `Tenants Outstanding Rent Balances Records`,\n    headCells: headCells,\n    dataToPrint: mappedRentBalances.filter(({\n      id\n    }) => selected.includes(id)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    border: 1,\n    borderRadius: \"borderRadius\",\n    borderColor: \"grey.400\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    id: \"contactSearchForm\",\n    onSubmit: handleSearchFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"center\",\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"row\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    select: true,\n    variant: \"outlined\",\n    name: \"property_filter\",\n    label: \"Property\",\n    id: \"property_filter\",\n    onChange: event => {\n      setPropertyFilter(event.target.value);\n    },\n    value: propertyFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    key: \"all\",\n    value: \"all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 49\n    }\n  }, \"All\"), properties.map((property, index) => /*#__PURE__*/React.createElement(MenuItem, {\n    key: index,\n    value: property.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 57\n    }\n  }, property.ref)))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    id: \"contact_filter\",\n    options: contacts,\n    getOptionSelected: (option, value) => option.id === value.id,\n    name: \"contact_filter\",\n    defaultValue: \"\",\n    onChange: (event, newValue) => {\n      setContactFilter(newValue);\n    },\n    value: contactFilter,\n    getOptionLabel: tenant => tenant ? `${tenant.first_name} ${tenant.last_name}` : '',\n    style: {\n      width: \"100%\"\n    },\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"Tenant\",\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 74\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 45\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    item: true,\n    justify: \"flex-end\",\n    alignItems: \"center\",\n    direction: \"row\",\n    key: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: event => handleSearchFormSubmit(event),\n    type: \"submit\",\n    form: \"contactSearchForm\",\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"medium\",\n    startIcon: /*#__PURE__*/React.createElement(SearchIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 56\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 41\n    }\n  }, \"SEARCH\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: event => resetSearchForm(event),\n    type: \"reset\",\n    form: \"contactSearchForm\",\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"medium\",\n    startIcon: /*#__PURE__*/React.createElement(UndoIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 56\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 41\n    }\n  }, \"RESET\")))))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    border: 1,\n    borderRadius: \"borderRadius\",\n    borderColor: \"grey.400\",\n    className: classes.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 37\n    }\n  }, \"Total Balances Amount: \", currencyFormatter.format(totalBalancesAmount)))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 37\n    }\n  }, \"Unique Tenants With Balances: \", uniqueTenantsWithBalances))))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CommonTable, {\n    selected: selected,\n    setSelected: setSelected,\n    rows: filteredMappedRentBalancesItems,\n    headCells: headCells,\n    noDetailsCol: true,\n    noEditCol: true,\n    noDeleteCol: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default RentBalancesPage;","map":{"version":3,"sources":["/home/brianmuciri/Projects/farm-ledger-ld/src/Routes/RentBalancesPage.js"],"names":["React","useEffect","useState","PageHeading","Typography","Grid","MenuItem","Button","TextField","Box","SearchIcon","UndoIcon","ExportToExcelBtn","PrintArrayToPdf","CommonTable","Autocomplete","currencyFormatter","parse","isWithinInterval","startOfToday","subDays","headCells","id","numeric","disablePadding","label","endOfLastThirtyDays","endOfLastSixtyDays","endOfLastNinetyDays","defaultEarliestTime","Date","RentBalancesPage","properties","contacts","rentalCharges","classes","filteredMappedRentBalancesItems","setFilteredMappedRentalBalances","mappedRentBalances","setMappedRentBalances","contactFilter","setContactFilter","propertyFilter","setPropertyFilter","totalBalancesAmount","setTotalBalancesAmount","uniqueTenantsWithBalances","setUniqueTenantsWithBalances","selected","setSelected","uniqueTenantIdsWithCharges","Set","map","rentCharge","tenant_id","tenantsWithCharges","tenant_name","property_id","unit_ref","unit_details","totalRentBalances","mappedTenantsRentBalances","Array","from","tenantId","tenantDetails","find","tenantBalancesDetails","totalTenantRentBalance","filter","forEach","rentChargeDueDate","due_date","parseFloat","balance","start","end","Object","assign","size","handleSearchFormSubmit","event","preventDefault","filteredMappedRentBalances","resetSearchForm","length","includes","form","target","value","property","index","ref","option","newValue","tenant","first_name","last_name","width","params","format"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PageHeading from \"../components/PageHeading\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Box from \"@material-ui/core/Box\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport ExportToExcelBtn from \"../components/ExportToExcelBtn\";\nimport PrintArrayToPdf from \"../components/PrintArrayToPdfBtn\";\nimport CommonTable from \"../components/table/commonTable\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { currencyFormatter } from \"../assets/commonAssets\";\nimport { parse, isWithinInterval, startOfToday, subDays } from \"date-fns\";\n\nconst headCells = [\n    { id: \"tenant_name\", numeric: false, disablePadding: true, label: \"Tenant\", },\n    { id: \"unit_ref\", numeric: false, disablePadding: true, label: \"Unit Ref/Number\", },\n    { id: \"last_thirty\", numeric: true, disablePadding: true, label: \"0-30 Days\" },\n    { id: \"last_sixty\", numeric: true, disablePadding: true, label: \"31-60 Days\" },\n    { id: \"last_ninety\", numeric: true, disablePadding: true, label: \"61-90 Days\" },\n    { id: \"ninety_plus\", numeric: true, disablePadding: true, label: \"90+ Days\" },\n    { id: \"totalTenantRentBalance\", numeric: true, disablePadding: true, label: \"Balance\" },\n\n];\n\nconst endOfLastThirtyDays = subDays(startOfToday(), 30);\nconst endOfLastSixtyDays = subDays(startOfToday(), 60);\nconst endOfLastNinetyDays = subDays(startOfToday(), 90);\nconst defaultEarliestTime = new Date(2000, 1, 1);\n\nlet RentBalancesPage = ({\n    properties,\n    contacts,\n    rentalCharges,\n    classes\n}) => {\n    let [filteredMappedRentBalancesItems, setFilteredMappedRentalBalances] = useState([]);\n    let [mappedRentBalances, setMappedRentBalances] = useState([]);\n    let [contactFilter, setContactFilter] = useState(null);\n    let [propertyFilter, setPropertyFilter] = useState(\"all\");\n    let [totalBalancesAmount, setTotalBalancesAmount] = useState(0);\n    let [uniqueTenantsWithBalances, setUniqueTenantsWithBalances] = useState(0);\n\n    const [selected, setSelected] = useState([]);\n\n    useEffect(() => {\n        const uniqueTenantIdsWithCharges = new Set(rentalCharges.map(rentCharge => rentCharge.tenant_id))\n        const tenantsWithCharges = rentalCharges\n            .map(rentCharge => ({\n                id: rentCharge.tenant_id, tenant_id: rentCharge.tenant_id, tenant_name: rentCharge.tenant_name,\n                property_id: rentCharge.property_id,\n                unit_ref: rentCharge.unit_details\n            }))\n        let totalRentBalances = 0\n        const mappedTenantsRentBalances = Array.from(uniqueTenantIdsWithCharges).map(tenantId => {\n            const tenantDetails = tenantsWithCharges.find(({ tenant_id }) => tenant_id === tenantId) || {}\n            const tenantBalancesDetails = {}\n            let totalTenantRentBalance = 0\n            rentalCharges.filter(({ tenant_id }) => tenant_id === tenantId).forEach(rentCharge => {\n                const rentChargeDueDate = parse(rentCharge.due_date, 'yyyy-MM-dd', new Date())\n                totalTenantRentBalance += parseFloat(rentCharge.balance) || 0\n                //check if due date is within a month ago\n                if (isWithinInterval(rentChargeDueDate, { start: endOfLastThirtyDays, end: startOfToday() })) {\n                    tenantBalancesDetails['last_thirty'] = rentCharge.balance\n                }\n                //check if due date is within 31-60 days ago\n                else if (isWithinInterval(rentChargeDueDate, { start: endOfLastSixtyDays, end: endOfLastThirtyDays })) {\n                    tenantBalancesDetails['last_sixty'] = rentCharge.balance\n                }\n                //check if due date is within 61-90 days ago\n                else if (isWithinInterval(rentChargeDueDate, { start: endOfLastNinetyDays, end: endOfLastSixtyDays })) {\n                    tenantBalancesDetails['last_ninety'] = rentCharge.balance\n                }\n                //check if due date is within 91+ days ago\n                else if (isWithinInterval(rentChargeDueDate, { start: defaultEarliestTime, end: endOfLastNinetyDays })) {\n                    tenantBalancesDetails['ninety_plus'] = rentCharge.balance\n                }\n            })\n            tenantBalancesDetails.totalTenantRentBalance = totalTenantRentBalance\n            totalRentBalances += totalTenantRentBalance\n            return Object.assign(tenantBalancesDetails, tenantDetails)\n        })\n        setUniqueTenantsWithBalances(uniqueTenantIdsWithCharges.size)\n        setTotalBalancesAmount(totalRentBalances)\n        setMappedRentBalances(mappedTenantsRentBalances)\n        setFilteredMappedRentalBalances(mappedTenantsRentBalances);\n    }, [rentalCharges]);\n\n    const handleSearchFormSubmit = (event) => {\n        event.preventDefault();\n        //filter the rentalCharges according to the search criteria here\n        const filteredMappedRentBalances = mappedRentBalances\n            .filter(({ tenant_id, property_id }) =>\n                (!contactFilter ? true : tenant_id === contactFilter.id)\n                && (propertyFilter === \"all\" ? true : property_id === propertyFilter)\n            )\n        setFilteredMappedRentalBalances(filteredMappedRentBalances)\n    };\n\n\n    const resetSearchForm = (event) => {\n        event.preventDefault();\n        setContactFilter(null)\n        setPropertyFilter('all')\n    };\n\n    return (\n        <Grid\n            container\n            spacing={2}\n            justify=\"center\" direction=\"column\"\n        >\n            <Grid item key={2}>\n                <PageHeading text={\"Outstanding Rent Balances\"} />\n            </Grid>\n            <Grid\n                container\n                spacing={2}\n                item\n                alignItems=\"center\"\n                direction=\"row\"\n                key={1}\n            >\n                <Grid item>\n                    <ExportToExcelBtn\n                        disabled={!selected.length}\n                        reportName={`Tenants Outstanding Rent Balances Records`}\n                        reportTitle={'Tenants Outstanding Rent Balances Data'}\n                        headCells={headCells}\n                        dataToPrint={mappedRentBalances.filter(({ id }) => selected.includes(id))}\n                    />\n                </Grid>\n                <Grid item>\n                    <PrintArrayToPdf\n                        disabled={!selected.length}\n                        reportName={'Tenants Outstanding Rent Balances Data'}\n                        reportTitle={`Tenants Outstanding Rent Balances Records`}\n                        headCells={headCells}\n                        dataToPrint={mappedRentBalances.filter(({ id }) => selected.includes(id))}\n                    />\n                </Grid>\n            </Grid>\n            <Grid item container>\n                <Grid item sm={12}>\n                    <Box\n                        border={1}\n                        borderRadius=\"borderRadius\"\n                        borderColor=\"grey.400\"\n                    >\n                        <form\n                            className={classes.form}\n                            id=\"contactSearchForm\"\n                            onSubmit={handleSearchFormSubmit}\n                        >\n                            <Grid\n                                container\n                                spacing={2}\n                                justify=\"center\"\n                                direction=\"column\"\n                            >\n                                <Grid item container direction=\"column\">\n                                    <Grid item container direction=\"row\" spacing={2}>\n                                        <Grid item xs={12} md={6}>\n                                            <TextField\n                                                fullWidth\n                                                select\n                                                variant=\"outlined\"\n                                                name=\"property_filter\"\n                                                label=\"Property\"\n                                                id=\"property_filter\"\n                                                onChange={(event) => {\n                                                    setPropertyFilter(\n                                                        event.target.value\n                                                    );\n                                                }}\n                                                value={propertyFilter}\n                                            >\n                                                <MenuItem key={\"all\"} value={\"all\"}>All</MenuItem>\n                                                {properties.map(\n                                                    (property, index) => (\n                                                        <MenuItem\n                                                            key={index}\n                                                            value={property.id}\n                                                        >\n                                                            {property.ref}\n                                                        </MenuItem>\n                                                    )\n                                                )}\n                                            </TextField>\n                                        </Grid>\n                                        <Grid item xs={12} md={6}>\n                                            <Autocomplete\n                                                id=\"contact_filter\"\n                                                options={contacts}\n                                                getOptionSelected={(option, value) => option.id === value.id}\n                                                name=\"contact_filter\"\n                                                defaultValue=\"\"\n                                                onChange={(event, newValue) => {\n                                                    setContactFilter(newValue);\n                                                }}\n                                                value={contactFilter}\n                                                getOptionLabel={(tenant) => tenant ? `${tenant.first_name} ${tenant.last_name}` : ''}\n                                                style={{ width: \"100%\" }}\n                                                renderInput={(params) => <TextField {...params} label=\"Tenant\" variant=\"outlined\" />}\n                                            />\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                                <Grid\n                                    container\n                                    spacing={2}\n                                    item\n                                    justify=\"flex-end\"\n                                    alignItems=\"center\"\n                                    direction=\"row\"\n                                    key={1}\n                                >\n                                    <Grid item>\n                                        <Button\n                                            onClick={(event) => handleSearchFormSubmit(event)}\n                                            type=\"submit\"\n                                            form=\"contactSearchForm\"\n                                            color=\"primary\"\n                                            variant=\"contained\"\n                                            size=\"medium\"\n                                            startIcon={<SearchIcon />}\n                                        >\n                                            SEARCH\n                                    </Button>\n                                    </Grid>\n                                    <Grid item>\n                                        <Button\n                                            onClick={(event) => resetSearchForm(event)}\n                                            type=\"reset\"\n                                            form=\"contactSearchForm\"\n                                            color=\"primary\"\n                                            variant=\"contained\"\n                                            size=\"medium\"\n                                            startIcon={<UndoIcon />}\n                                        >\n                                            RESET\n                                    </Button>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </form>\n                    </Box>\n                </Grid>\n            </Grid>\n            <Grid item container>\n                <Grid item sm={12}>\n                    <Box border={1} borderRadius=\"borderRadius\" borderColor=\"grey.400\" className={classes.form}>\n                        <Grid container direction=\"row\" spacing={1}>\n                            <Grid item container md={6}>\n                                <Grid item sm={12}>\n                                    <Typography variant=\"subtitle1\" align=\"center\">\n                                        Total Balances Amount: {currencyFormatter.format(totalBalancesAmount)}\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                            <Grid item container md={6}>\n                                <Grid item sm={12}>\n                                    <Typography variant=\"subtitle1\" align=\"center\">\n                                        Unique Tenants With Balances: {uniqueTenantsWithBalances}\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Box>\n                </Grid>\n            </Grid>\n            <Grid item container>\n                <Grid item sm={12}>\n                    <CommonTable\n                        selected={selected}\n                        setSelected={setSelected}\n                        rows={filteredMappedRentBalancesItems}\n                        headCells={headCells}\n                        noDetailsCol={true}\n                        noEditCol={true}\n                        noDeleteCol={true}\n                    />\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default RentBalancesPage;\n"]},"metadata":{},"sourceType":"module"}