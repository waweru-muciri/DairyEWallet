{"ast":null,"code":"var _jsxFileName = \"/home/brianmuciri/Projects/farm-ledger-ld/src/Routes/TenantsPaymentsStatement.js\";\nimport Grid from \"@material-ui/core/Grid\";\nimport PageHeading from \"../components/PageHeading\";\nimport React, { useEffect, useState } from \"react\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Box from \"@material-ui/core/Box\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport ExportToExcelBtn from \"../components/ExportToExcelBtn\";\nimport CommonTable from \"../components/table/commonTable\";\nimport PrintArrayToPdf from \"../components/PrintArrayToPdfBtn\";\nimport { getStartEndDatesForPeriod, getTransactionsFilterOptions } from \"../assets/commonAssets\";\nimport { parse, isWithinInterval } from \"date-fns\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nconst TRANSACTIONS_FILTER_OPTIONS = getTransactionsFilterOptions();\nconst headCells = [{\n  id: \"tenant_name\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Tenant Name\"\n}, {\n  id: \"tenant_id_number\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Tenant ID\"\n}, {\n  id: \"unit_ref\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Unit Number/Ref\"\n}, {\n  id: \"sale_date\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Payment Date\"\n}, {\n  id: \"sale_label\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Payment Type\"\n}, {\n  id: \"sale_amount\",\n  numeric: true,\n  disablePadding: true,\n  label: \"Payment Amount\"\n}, {\n  id: \"memo\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Payment Notes/Memo\"\n}, {\n  id: \"edit\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Edit\"\n}, {\n  id: \"delete\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Delete\"\n}];\n\nlet TenantsPaymentsPage = ({\n  rentalPayments,\n  contacts,\n  properties,\n  classes\n}) => {\n  let [filteredPaymentsItems, setFilteredPaymentsItems] = useState([]);\n  let [propertyFilter, setPropertyFilter] = useState(\"all\");\n  let [periodFilter, setPeriodFilter] = useState(\"month-to-date\");\n  let [fromDateFilter, setFromDateFilter] = useState(\"\");\n  let [toDateFilter, setToDateFilter] = useState(\"\");\n  let [contactFilter, setContactFilter] = useState(null);\n  const [selected, setSelected] = useState([]);\n  useEffect(() => {\n    setFilteredPaymentsItems(filterPaymentsByCriteria(rentalPayments));\n  }, [rentalPayments]);\n\n  const filterPaymentsByCriteria = salesToFilter => {\n    //filter the sales according to the search criteria here\n    let filteredPayments = salesToFilter; //filter the sales according to the search criteria here\n\n    if (periodFilter) {\n      const {\n        startDate,\n        endDate\n      } = getStartEndDatesForPeriod(periodFilter);\n      filteredPayments = filteredPayments.filter(sale => {\n        const saleDate = parse(sale.sale_date, 'yyyy-MM-dd', new Date());\n        return isWithinInterval(saleDate, {\n          start: startDate,\n          end: endDate\n        });\n      });\n    }\n\n    filteredPayments = filteredPayments.filter(({\n      sale_date,\n      tenant_id,\n      property_id\n    }) => (!fromDateFilter ? true : sale_date >= fromDateFilter) && (!toDateFilter ? true : sale_date <= toDateFilter) && (propertyFilter === \"all\" ? true : property_id === propertyFilter) && (!contactFilter ? true : tenant_id === contactFilter.id));\n    return filteredPayments;\n  };\n\n  const handleSearchFormSubmit = event => {\n    event.preventDefault();\n    setFilteredPaymentsItems(filterPaymentsByCriteria(rentalPayments));\n  };\n\n  const resetSearchForm = event => {\n    event.preventDefault();\n    setPropertyFilter(\"all\");\n    setPeriodFilter(\"month-to-date\");\n    setFromDateFilter(\"\");\n    setToDateFilter(\"\");\n    setContactFilter(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    key: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(PageHeading, {\n    text: 'Tenants Payments Statement',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    item: true,\n    alignItems: \"center\",\n    direction: \"row\",\n    key: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PrintArrayToPdf, {\n    disabled: !selected.length,\n    reportName: 'Tenants Payments Records',\n    reportTitle: 'Tenants Payments Data',\n    headCells: headCells,\n    dataToPrint: rentalPayments.filter(({\n      id\n    }) => selected.includes(id)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ExportToExcelBtn, {\n    disabled: !selected.length,\n    reportName: 'Tenants Payments Records',\n    reportTitle: 'Tenants Payments Data',\n    headCells: headCells,\n    dataToPrint: rentalPayments.filter(({\n      id\n    }) => selected.includes(id)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    border: 1,\n    borderRadius: \"borderRadius\",\n    borderColor: \"grey.400\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    id: \"tenantPaymentsSearchForm\",\n    onSubmit: handleSearchFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"row\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    xs: 12,\n    md: 6,\n    direction: \"row\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    type: \"date\",\n    id: \"from_date_filter\",\n    name: \"from_date_filter\",\n    label: \"From Date\",\n    value: fromDateFilter,\n    onChange: event => {\n      setFromDateFilter(event.target.value);\n    },\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    type: \"date\",\n    name: \"to_date_filter\",\n    label: \"To Date\",\n    id: \"to_date_filter\",\n    onChange: event => {\n      setToDateFilter(event.target.value);\n    },\n    value: toDateFilter,\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 45\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    select: true,\n    id: \"period_filter\",\n    name: \"period_filter\",\n    label: \"Period\",\n    value: periodFilter,\n    onChange: event => {\n      setPeriodFilter(event.target.value);\n    },\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 41\n    }\n  }, TRANSACTIONS_FILTER_OPTIONS.map((filterOption, index) => /*#__PURE__*/React.createElement(MenuItem, {\n    key: index,\n    value: filterOption.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 49\n    }\n  }, filterOption.text))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"row\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    select: true,\n    variant: \"outlined\",\n    name: \"property_filter\",\n    label: \"Property\",\n    id: \"property_filter\",\n    onChange: event => {\n      setPropertyFilter(event.target.value);\n    },\n    value: propertyFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    key: \"all\",\n    value: \"all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 45\n    }\n  }, \"All\"), properties.map((property, index) => /*#__PURE__*/React.createElement(MenuItem, {\n    key: index,\n    value: property.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 53\n    }\n  }, property.ref)))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    id: \"contact_filter\",\n    options: contacts,\n    getOptionSelected: (option, value) => option.id === value.id,\n    name: \"contact_filter\",\n    onChange: (event, newValue) => {\n      setContactFilter(newValue);\n    },\n    value: contactFilter,\n    getOptionLabel: tenant => tenant ? `${tenant.first_name} ${tenant.last_name}` : '',\n    style: {\n      width: \"100%\"\n    },\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"Tenant\",\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 70\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 41\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    item: true,\n    justify: \"flex-end\",\n    alignItems: \"center\",\n    direction: \"row\",\n    key: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: event => handleSearchFormSubmit(event),\n    type: \"submit\",\n    form: \"tenantPaymentsSearchForm\",\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"medium\",\n    startIcon: /*#__PURE__*/React.createElement(SearchIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 52\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 37\n    }\n  }, \"SEARCH\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: event => resetSearchForm(event),\n    type: \"reset\",\n    form: \"tenantPaymentsSearchForm\",\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"medium\",\n    startIcon: /*#__PURE__*/React.createElement(UndoIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 52\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 37\n    }\n  }, \"RESET\"))))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CommonTable, {\n    selected: selected,\n    setSelected: setSelected,\n    rows: filteredPaymentsItems,\n    headCells: headCells,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default TenantsPaymentsPage;","map":{"version":3,"sources":["/home/brianmuciri/Projects/farm-ledger-ld/src/Routes/TenantsPaymentsStatement.js"],"names":["Grid","PageHeading","React","useEffect","useState","MenuItem","Button","TextField","Box","SearchIcon","UndoIcon","ExportToExcelBtn","CommonTable","PrintArrayToPdf","getStartEndDatesForPeriod","getTransactionsFilterOptions","parse","isWithinInterval","Autocomplete","TRANSACTIONS_FILTER_OPTIONS","headCells","id","numeric","disablePadding","label","TenantsPaymentsPage","rentalPayments","contacts","properties","classes","filteredPaymentsItems","setFilteredPaymentsItems","propertyFilter","setPropertyFilter","periodFilter","setPeriodFilter","fromDateFilter","setFromDateFilter","toDateFilter","setToDateFilter","contactFilter","setContactFilter","selected","setSelected","filterPaymentsByCriteria","salesToFilter","filteredPayments","startDate","endDate","filter","sale","saleDate","sale_date","Date","start","end","tenant_id","property_id","handleSearchFormSubmit","event","preventDefault","resetSearchForm","length","includes","form","target","value","shrink","map","filterOption","index","text","property","ref","option","newValue","tenant","first_name","last_name","width","params"],"mappings":"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","sourcesContent":["import Grid from \"@material-ui/core/Grid\";\nimport PageHeading from \"../components/PageHeading\";\nimport React, { useEffect, useState } from \"react\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Box from \"@material-ui/core/Box\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport ExportToExcelBtn from \"../components/ExportToExcelBtn\";\nimport CommonTable from \"../components/table/commonTable\";\nimport PrintArrayToPdf from \"../components/PrintArrayToPdfBtn\";\nimport { getStartEndDatesForPeriod, getTransactionsFilterOptions } from \"../assets/commonAssets\";\nimport { parse, isWithinInterval } from \"date-fns\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n\nconst TRANSACTIONS_FILTER_OPTIONS = getTransactionsFilterOptions()\n\nconst headCells = [\n    { id: \"tenant_name\", numeric: false, disablePadding: true, label: \"Tenant Name\" },\n    { id: \"tenant_id_number\", numeric: false, disablePadding: true, label: \"Tenant ID\" },\n    { id: \"unit_ref\", numeric: false, disablePadding: true, label: \"Unit Number/Ref\" },\n    { id: \"sale_date\", numeric: false, disablePadding: true, label: \"Payment Date\" },\n    { id: \"sale_label\", numeric: false, disablePadding: true, label: \"Payment Type\" },\n    { id: \"sale_amount\", numeric: true, disablePadding: true, label: \"Payment Amount\" },\n    { id: \"memo\", numeric: false, disablePadding: true, label: \"Payment Notes/Memo\" },\n    { id: \"edit\", numeric: false, disablePadding: true, label: \"Edit\" },\n    { id: \"delete\", numeric: false, disablePadding: true, label: \"Delete\" },\n];\n\n\nlet TenantsPaymentsPage = ({\n    rentalPayments,\n    contacts,\n    properties,\n    classes,\n}) => {\n    let [filteredPaymentsItems, setFilteredPaymentsItems] = useState([]);\n    let [propertyFilter, setPropertyFilter] = useState(\"all\");\n    let [periodFilter, setPeriodFilter] = useState(\"month-to-date\");\n    let [fromDateFilter, setFromDateFilter] = useState(\"\");\n    let [toDateFilter, setToDateFilter] = useState(\"\");\n    let [contactFilter, setContactFilter] = useState(null);\n\n    const [selected, setSelected] = useState([]);\n\n    useEffect(() => {\n        setFilteredPaymentsItems(filterPaymentsByCriteria(rentalPayments));\n    }, [rentalPayments]);\n\n    const filterPaymentsByCriteria = (salesToFilter) => {\n        //filter the sales according to the search criteria here\n        let filteredPayments = salesToFilter;\n        //filter the sales according to the search criteria here\n        if (periodFilter) {\n            const { startDate, endDate } = getStartEndDatesForPeriod(periodFilter)\n            filteredPayments = filteredPayments.filter((sale) => {\n                const saleDate = parse(sale.sale_date, 'yyyy-MM-dd', new Date())\n                return isWithinInterval(saleDate, { start: startDate, end: endDate })\n            })\n        }\n        filteredPayments = filteredPayments\n            .filter(({ sale_date, tenant_id, property_id }) =>\n                (!fromDateFilter ? true : sale_date >= fromDateFilter)\n                && (!toDateFilter ? true : sale_date <= toDateFilter)\n                && (propertyFilter === \"all\" ? true : property_id === propertyFilter)\n                && (!contactFilter ? true : tenant_id === contactFilter.id)\n            )\n        return filteredPayments;\n    }\n\n    const handleSearchFormSubmit = (event) => {\n        event.preventDefault();\n        setFilteredPaymentsItems(filterPaymentsByCriteria(rentalPayments));\n    }\n\n    const resetSearchForm = (event) => {\n        event.preventDefault();\n        setPropertyFilter(\"all\");\n        setPeriodFilter(\"month-to-date\");\n        setFromDateFilter(\"\");\n        setToDateFilter(\"\");\n        setContactFilter(\"\");\n    };\n\n    return (\n        <Grid\n            container\n            spacing={3}\n            alignItems=\"center\"\n        >\n            <Grid item key={2}>\n                <PageHeading text={'Tenants Payments Statement'} />\n            </Grid>\n            <Grid\n                container\n                spacing={2}\n                item\n                alignItems=\"center\"\n                direction=\"row\"\n                key={1}\n            >\n                <Grid item>\n                    <PrintArrayToPdf\n                        disabled={!selected.length}\n                        reportName={'Tenants Payments Records'}\n                        reportTitle={'Tenants Payments Data'}\n                        headCells={headCells}\n                        dataToPrint={rentalPayments.filter(({ id }) => selected.includes(id))}\n                    />\n                </Grid>\n                <Grid item>\n                    <ExportToExcelBtn\n                        disabled={!selected.length}\n                        reportName={'Tenants Payments Records'}\n                        reportTitle={'Tenants Payments Data'}\n                        headCells={headCells}\n                        dataToPrint={rentalPayments.filter(({ id }) => selected.includes(id))}\n                    />\n                </Grid>\n            </Grid>\n            <Grid item xs={12}>\n                <Box\n                    border={1}\n                    borderRadius=\"borderRadius\"\n                    borderColor=\"grey.400\"\n                >\n                    <form\n                        className={classes.form}\n                        id=\"tenantPaymentsSearchForm\"\n                        onSubmit={handleSearchFormSubmit}\n                    >\n                        <Grid\n                            container\n                            spacing={2}\n                            justify=\"center\"\n                        >\n                            <Grid item container spacing={2}>\n                                <Grid item container direction=\"row\" spacing={2}>\n                                    <Grid item container xs={12} md={6} direction=\"row\" spacing={2}>\n                                        <Grid item xs={12} md={6}>\n                                            <TextField\n                                                fullWidth\n                                                variant=\"outlined\"\n                                                type=\"date\"\n                                                id=\"from_date_filter\"\n                                                name=\"from_date_filter\"\n                                                label=\"From Date\"\n                                                value={fromDateFilter}\n                                                onChange={(event) => {\n                                                    setFromDateFilter(\n                                                        event.target.value\n                                                    );\n                                                }}\n                                                InputLabelProps={{ shrink: true }}\n                                            />\n                                        </Grid>\n                                        <Grid item xs={12} md={6}>\n                                            <TextField\n                                                fullWidth\n                                                variant=\"outlined\"\n                                                type=\"date\"\n                                                name=\"to_date_filter\"\n                                                label=\"To Date\"\n                                                id=\"to_date_filter\"\n                                                onChange={(event) => {\n                                                    setToDateFilter(event.target.value);\n                                                }}\n                                                value={toDateFilter}\n                                                InputLabelProps={{ shrink: true }}\n                                            />\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12} md={6}>\n                                        <TextField\n                                            fullWidth\n                                            variant=\"outlined\"\n                                            select\n                                            id=\"period_filter\"\n                                            name=\"period_filter\"\n                                            label=\"Period\"\n                                            value={periodFilter}\n                                            onChange={(event) => {\n                                                setPeriodFilter(\n                                                    event.target.value\n                                                );\n                                            }}\n                                            InputLabelProps={{ shrink: true }}\n                                        >\n                                            {TRANSACTIONS_FILTER_OPTIONS.map((filterOption, index) => (\n                                                <MenuItem\n                                                    key={index}\n                                                    value={filterOption.id}\n                                                >\n                                                    {filterOption.text}\n                                                </MenuItem>\n                                            ))}\n                                        </TextField>\n                                    </Grid>\n                                </Grid>\n                                <Grid item container direction=\"row\" spacing={2}>\n                                    <Grid item md={6} xs={12}>\n                                        <TextField\n                                            fullWidth\n                                            select\n                                            variant=\"outlined\"\n                                            name=\"property_filter\"\n                                            label=\"Property\"\n                                            id=\"property_filter\"\n                                            onChange={(event) => {\n                                                setPropertyFilter(\n                                                    event.target.value\n                                                );\n                                            }}\n                                            value={propertyFilter}\n                                        >\n                                            <MenuItem key={\"all\"} value={\"all\"}>All</MenuItem>\n                                            {properties.map(\n                                                (property, index) => (\n                                                    <MenuItem\n                                                        key={index}\n                                                        value={property.id}\n                                                    >\n                                                        {property.ref}\n                                                    </MenuItem>\n                                                )\n                                            )}\n                                        </TextField>\n                                    </Grid>\n                                    <Grid item xs={12} md={6}>\n                                        <Autocomplete\n                                            id=\"contact_filter\"\n                                            options={contacts}\n                                            getOptionSelected={(option, value) => option.id === value.id}\n                                            name=\"contact_filter\"\n                                            onChange={(event, newValue) => {\n                                                setContactFilter(newValue);\n                                            }}\n                                            value={contactFilter}\n                                            getOptionLabel={(tenant) => tenant ? `${tenant.first_name} ${tenant.last_name}` : ''}\n                                            style={{ width: \"100%\" }}\n                                            renderInput={(params) => <TextField {...params} label=\"Tenant\" variant=\"outlined\" />}\n                                        />\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid\n                                container\n                                spacing={2}\n                                item\n                                justify=\"flex-end\"\n                                alignItems=\"center\"\n                                direction=\"row\"\n                                key={1}\n                            >\n                                <Grid item>\n                                    <Button\n                                        onClick={(event) => handleSearchFormSubmit(event)}\n                                        type=\"submit\"\n                                        form=\"tenantPaymentsSearchForm\"\n                                        color=\"primary\"\n                                        variant=\"contained\"\n                                        size=\"medium\"\n                                        startIcon={<SearchIcon />}\n                                    >\n                                        SEARCH\n                                    </Button>\n                                </Grid>\n                                <Grid item>\n                                    <Button\n                                        onClick={(event) => resetSearchForm(event)}\n                                        type=\"reset\"\n                                        form=\"tenantPaymentsSearchForm\"\n                                        color=\"primary\"\n                                        variant=\"contained\"\n                                        size=\"medium\"\n                                        startIcon={<UndoIcon />}\n                                    >\n                                        RESET\n                                    </Button>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </form>\n                </Box>\n            </Grid>\n            <Grid item xs={12}>\n                <CommonTable\n                    selected={selected}\n                    setSelected={setSelected}\n                    rows={filteredPaymentsItems}\n                    headCells={headCells}\n                />\n            </Grid>\n\n        </Grid>\n    );\n};\n\n\nexport default TenantsPaymentsPage;\n"]},"metadata":{},"sourceType":"module"}