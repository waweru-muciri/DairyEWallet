{"ast":null,"code":"var _jsxFileName = \"/home/brianmuciri/Projects/farm-ledger-ld/src/components/notices/NoticeInputForm.js\";\nimport React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CustomSnackbar from '../CustomSnackbar';\nimport { Formik } from \"formik\";\nimport { commonStyles } from \"../commonStyles\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Switch from '@material-ui/core/Switch';\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport * as Yup from \"yup\";\nimport { format, startOfToday } from \"date-fns\";\nimport CustomCircularProgress from \"../CustomCircularProgress\";\nconst defaultDate = format(startOfToday(), 'yyyy-MM-dd');\nconst VacatingNoticeSchema = Yup.object().shape({\n  lease_details: Yup.object().typeError(\"Rental agreement is required\").required(\"Rental agreement is required\"),\n  vacated: Yup.boolean(),\n  notification_date: Yup.date().required(\"Vacating Date Required\"),\n  vacating_date: Yup.date().required(\"Move Out Date is Required\"),\n  actual_vacated_date: Yup.date().when('vacated', {\n    is: true,\n    then: Yup.date().required(\"Actual Date Vacated is Required\")\n  })\n});\n\nconst NoticeInputForm = props => {\n  const {\n    activeLeases,\n    submitForm,\n    history\n  } = props;\n  const classes = commonStyles();\n  const noticeToEdit = props.noticeToEdit || {};\n  let noticeValues = {\n    id: noticeToEdit.id,\n    notification_date: noticeToEdit.notification_date || defaultDate,\n    vacating_date: noticeToEdit.vacating_date || defaultDate,\n    actual_vacated_date: noticeToEdit.actual_vacated_date || defaultDate,\n    lease_id: noticeToEdit.lease_id || '',\n    vacated: noticeToEdit.vacated || false,\n    lease_details: activeLeases.find(({\n      id\n    }) => id === noticeToEdit.lease_id) || null\n  };\n  return /*#__PURE__*/React.createElement(Formik, {\n    initialValues: noticeValues,\n    enableReinitialize: true,\n    validationSchema: VacatingNoticeSchema,\n    onSubmit: async (values, {\n      resetForm,\n      setStatus\n    }) => {\n      try {\n        const vacatingNotice = {\n          id: values.id,\n          lease_id: values.lease_details.id,\n          vacating_date: values.vacating_date,\n          actual_vacated_date: values.actual_vacated_date,\n          notification_date: values.notification_date,\n          unit_id: values.lease_details.unit_id,\n          property_id: values.lease_details.property_id,\n          tenant_id: values.lease_details.tenants[0],\n          vacated: values.vacated\n        };\n        await submitForm(vacatingNotice, \"notices\"); //if lease tenant is already terminated then automatically terminate lease\n\n        const leaseToEdit = {\n          id: values.lease_id,\n          end_date: values.vacated ? values.actual_vacated_date : '',\n          terminated: values.vacated\n        };\n        await submitForm(leaseToEdit, \"leases\");\n        resetForm({});\n\n        if (values.id) {\n          history.goBack();\n        }\n\n        setStatus({\n          sent: true,\n          msg: \"Notice saved successfully.\"\n        });\n      } catch (error) {\n        setStatus({\n          sent: false,\n          msg: `Error! ${error}.`\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, ({\n    values,\n    status,\n    handleSubmit,\n    touched,\n    errors,\n    handleChange,\n    setFieldValue,\n    handleBlur,\n    isSubmitting\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    method: \"post\",\n    id: \"noticeInputForm\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"center\",\n    alignItems: \"stretch\",\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, status && status.msg && /*#__PURE__*/React.createElement(CustomSnackbar, {\n    variant: status.sent ? \"success\" : \"error\",\n    message: status.msg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }), isSubmitting && /*#__PURE__*/React.createElement(CustomCircularProgress, {\n    open: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 32\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }, \"Recording every tenant's intention to move out will automatically end the agreement on the last move-out date.\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    spacing: 2,\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    id: \"lease_details\",\n    value: values.lease_details,\n    onChange: (event, newValue) => {\n      setFieldValue(\"lease_details\", newValue);\n    },\n    style: {\n      width: \"100%\"\n    },\n    options: activeLeases,\n    autoHighlight: true,\n    getOptionLabel: option => option ? `${option.tenant_name} ${option.unit_ref}` : '',\n    renderOption: option => /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }\n    }, option.tenant_name, \" \", option.unit_ref),\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"Tenants\",\n      variant: \"outlined\",\n      error: errors.lease_details && touched.lease_details,\n      helperText: touched.lease_details && errors.lease_details,\n      inputProps: { ...params.inputProps\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    disabled: true,\n    InputLabelProps: {\n      shrink: true\n    },\n    variant: \"outlined\",\n    id: \"unit\",\n    name: \"unit\",\n    label: \"Unit\",\n    value: values.lease_details ? values.lease_details.unit_ref : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    spacing: 2,\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    disabled: true,\n    fullWidth: true,\n    InputLabelProps: {\n      shrink: true\n    },\n    variant: \"outlined\",\n    id: \"lease_type\",\n    name: \"type\",\n    label: \"Agreement Type\",\n    value: values.lease_details ? values.lease_details.lease_type : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    disabled: true,\n    fullWidth: true,\n    InputLabelProps: {\n      shrink: true\n    },\n    variant: \"outlined\",\n    id: \"lease_start\",\n    name: \"lease_start\",\n    label: \"Start - End\",\n    value: values.lease_details ? `${values.lease_details.start_date} - ${values.vacating_date}` : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    spacing: 2,\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    type: \"date\",\n    InputLabelProps: {\n      shrink: true\n    },\n    variant: \"outlined\",\n    id: \"notification_date\",\n    name: \"notification_date\",\n    label: \"Notification Date\",\n    value: values.notification_date,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    error: \"notification_date\" in errors,\n    helperText: errors.notification_date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    type: \"date\",\n    InputLabelProps: {\n      shrink: true\n    },\n    variant: \"outlined\",\n    id: \"vacating_date\",\n    name: \"vacating_date\",\n    label: \"Move Out Date\",\n    value: values.vacating_date,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    error: \"vacating_date\" in errors,\n    helperText: errors.vacating_date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    spacing: 2,\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    error: errors.vacated && touched.vacated,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Switch, {\n      checked: values.vacated,\n      onChange: handleChange,\n      color: \"primary\",\n      name: \"vacated\",\n      inputProps: {\n        'aria-label': 'vacated status checkbox'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 30\n      }\n    }),\n    label: \"Tenant Has Moved Out\",\n    labelPlacement: \"start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 17\n    }\n  }, \"Select if tenant has moved out.\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    type: \"date\",\n    InputLabelProps: {\n      shrink: true\n    },\n    variant: \"outlined\",\n    id: \"actual_vacated_date\",\n    name: \"actual_vacated_date\",\n    label: \"Actual Date Vacated\",\n    value: values.actual_vacated_date,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    error: \"actual_vacated_date\" in errors,\n    helperText: errors.actual_vacated_date,\n    disabled: !values.vacated,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"row\",\n    className: classes.buttonBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    variant: \"contained\",\n    size: \"medium\",\n    startIcon: /*#__PURE__*/React.createElement(CancelIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 30\n      }\n    }),\n    onClick: () => history.goBack(),\n    disableElevation: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 17\n    }\n  }, \"Cancel\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"medium\",\n    startIcon: /*#__PURE__*/React.createElement(SaveIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 30\n      }\n    }),\n    form: \"noticeInputForm\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 17\n    }\n  }, \"Move Out\"))))));\n};\n\nexport default NoticeInputForm;","map":{"version":3,"sources":["/home/brianmuciri/Projects/farm-ledger-ld/src/components/notices/NoticeInputForm.js"],"names":["React","Button","TextField","Grid","Typography","CustomSnackbar","Formik","commonStyles","SaveIcon","Autocomplete","Switch","CancelIcon","FormControl","FormControlLabel","Yup","format","startOfToday","CustomCircularProgress","defaultDate","VacatingNoticeSchema","object","shape","lease_details","typeError","required","vacated","boolean","notification_date","date","vacating_date","actual_vacated_date","when","is","then","NoticeInputForm","props","activeLeases","submitForm","history","classes","noticeToEdit","noticeValues","id","lease_id","find","values","resetForm","setStatus","vacatingNotice","unit_id","property_id","tenant_id","tenants","leaseToEdit","end_date","terminated","goBack","sent","msg","error","status","handleSubmit","touched","errors","handleChange","setFieldValue","handleBlur","isSubmitting","form","event","newValue","width","option","tenant_name","unit_ref","params","inputProps","shrink","lease_type","start_date","buttonBox"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CustomSnackbar from '../CustomSnackbar'\nimport { Formik } from \"formik\";\nimport { commonStyles } from \"../commonStyles\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Switch from '@material-ui/core/Switch';\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport * as Yup from \"yup\";\nimport { format, startOfToday } from \"date-fns\";\nimport CustomCircularProgress from \"../CustomCircularProgress\";\n\nconst defaultDate = format(startOfToday(), 'yyyy-MM-dd')\n\nconst VacatingNoticeSchema = Yup.object().shape({\n  lease_details: Yup.object().typeError(\"Rental agreement is required\")\n    .required(\"Rental agreement is required\"),\n  vacated: Yup.boolean(),\n  notification_date: Yup.date().required(\"Vacating Date Required\"),\n  vacating_date: Yup.date().required(\"Move Out Date is Required\"),\n  actual_vacated_date: Yup.date().when('vacated', { is: true, then: Yup.date().required(\"Actual Date Vacated is Required\") }),\n});\n\nconst NoticeInputForm = (props) => {\n  const { activeLeases, submitForm, history } = props;\n  const classes = commonStyles();\n  const noticeToEdit = props.noticeToEdit || {}\n\n  let noticeValues = {\n    id: noticeToEdit.id,\n    notification_date: noticeToEdit.notification_date || defaultDate,\n    vacating_date: noticeToEdit.vacating_date || defaultDate,\n    actual_vacated_date: noticeToEdit.actual_vacated_date || defaultDate,\n    lease_id: noticeToEdit.lease_id || '',\n    vacated: noticeToEdit.vacated || false,\n    lease_details: activeLeases.find(({ id }) => id === noticeToEdit.lease_id) || null,\n  };\n\n  return (\n    <Formik\n      initialValues={noticeValues}\n      enableReinitialize\n      validationSchema={VacatingNoticeSchema}\n      onSubmit={async (values, { resetForm, setStatus }) => {\n        try {\n          const vacatingNotice = {\n            id: values.id,\n            lease_id: values.lease_details.id,\n            vacating_date: values.vacating_date,\n            actual_vacated_date: values.actual_vacated_date,\n            notification_date: values.notification_date,\n            unit_id: values.lease_details.unit_id,\n            property_id: values.lease_details.property_id,\n            tenant_id: values.lease_details.tenants[0],\n            vacated: values.vacated,\n          };\n          await submitForm(vacatingNotice, \"notices\")\n          //if lease tenant is already terminated then automatically terminate lease\n          const leaseToEdit = {\n            id: values.lease_id,\n            end_date: values.vacated ? values.actual_vacated_date : '',\n            terminated: values.vacated\n          }\n          await submitForm(leaseToEdit, \"leases\")\n          resetForm({});\n          if (values.id) {\n            history.goBack()\n          }\n          setStatus({ sent: true, msg: \"Notice saved successfully.\" })\n        } catch (error) {\n          setStatus({ sent: false, msg: `Error! ${error}.` })\n        }\n      }}\n    >\n      {({\n        values,\n        status,\n        handleSubmit,\n        touched,\n        errors,\n        handleChange,\n        setFieldValue,\n        handleBlur,\n        isSubmitting,\n      }) => (\n        <form\n          className={classes.form}\n          method=\"post\"\n          id=\"noticeInputForm\"\n          onSubmit={handleSubmit}\n        >\n          <Grid\n            container\n            spacing={2}\n            justify=\"center\"\n            alignItems=\"stretch\"\n            direction=\"column\"\n          >\n            {\n              status && status.msg && (\n                <CustomSnackbar\n                  variant={status.sent ? \"success\" : \"error\"}\n                  message={status.msg}\n                />\n              )\n            }\n            {\n              isSubmitting && (<CustomCircularProgress open={true} />)\n            }\n            <Grid item>\n              <Typography color=\"textSecondary\" component=\"p\">\n                Recording every tenant's intention to move out will automatically end the agreement\n                on the last move-out date.\n              </Typography>\n            </Grid>\n            <Grid item container spacing={2} direction=\"row\">\n              <Grid item xs={12} md={6}>\n                <Autocomplete\n                  id=\"lease_details\"\n                  value={values.lease_details}\n                  onChange={(event, newValue) => {\n                    setFieldValue(\"lease_details\", newValue);\n                  }}\n                  style={{ width: \"100%\" }}\n                  options={activeLeases}\n                  autoHighlight\n                  getOptionLabel={(option) => option ? `${option.tenant_name} ${option.unit_ref}` : ''}\n                  renderOption={(option) => (\n                    <React.Fragment>\n                      {option.tenant_name} {option.unit_ref}\n                    </React.Fragment>\n                  )}\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      label=\"Tenants\"\n                      variant=\"outlined\"\n                      error={errors.lease_details && touched.lease_details}\n                      helperText={touched.lease_details && errors.lease_details}\n                      inputProps={{\n                        ...params.inputProps,\n                      }}\n                    />\n                  )}\n                />\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <TextField\n                  fullWidth\n                  disabled\n                  InputLabelProps={{ shrink: true }}\n                  variant=\"outlined\"\n                  id=\"unit\"\n                  name=\"unit\"\n                  label=\"Unit\"\n                  value={values.lease_details ? values.lease_details.unit_ref : ''}\n                />\n              </Grid>\n            </Grid>\n            <Grid item container spacing={2} direction=\"row\">\n              <Grid item xs={12} md={6}>\n                <TextField\n                  disabled\n                  fullWidth\n                  InputLabelProps={{ shrink: true }}\n                  variant=\"outlined\"\n                  id=\"lease_type\"\n                  name=\"type\"\n                  label=\"Agreement Type\"\n                  value={values.lease_details ? values.lease_details.lease_type : \"\"}\n                />\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <TextField\n                  disabled\n                  fullWidth\n                  InputLabelProps={{ shrink: true }}\n                  variant=\"outlined\"\n                  id=\"lease_start\"\n                  name=\"lease_start\"\n                  label=\"Start - End\"\n                  value={values.lease_details ? `${values.lease_details.start_date} - ${values.vacating_date}` : ''}\n                />\n              </Grid>\n            </Grid>\n            <Grid item container spacing={2} direction=\"row\">\n              <Grid item xs={12} md={6}>\n                <TextField\n                  fullWidth\n                  type=\"date\"\n                  InputLabelProps={{ shrink: true }}\n                  variant=\"outlined\"\n                  id=\"notification_date\"\n                  name=\"notification_date\"\n                  label=\"Notification Date\"\n                  value={values.notification_date}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  error={\"notification_date\" in errors}\n                  helperText={errors.notification_date}\n                />\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <TextField\n                  fullWidth\n                  type=\"date\"\n                  InputLabelProps={{ shrink: true }}\n                  variant=\"outlined\"\n                  id=\"vacating_date\"\n                  name=\"vacating_date\"\n                  label=\"Move Out Date\"\n                  value={values.vacating_date}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  error={\"vacating_date\" in errors}\n                  helperText={errors.vacating_date}\n                />\n              </Grid>\n            </Grid>\n            <Grid item container spacing={2} direction=\"row\">\n              <Grid item xs={12} md={6}>\n                <FormControl error={errors.vacated && touched.vacated}>\n                  <FormControlLabel\n                    control={<Switch\n                      checked={values.vacated}\n                      onChange={handleChange}\n                      color=\"primary\"\n                      name=\"vacated\"\n                      inputProps={{ 'aria-label': 'vacated status checkbox' }}\n                    />}\n                    label=\"Tenant Has Moved Out\"\n                    labelPlacement=\"start\"\n                  />\n                </FormControl>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  Select if tenant has moved out.\n\t\t\t\t\t\t\t  </Typography>\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <TextField\n                  fullWidth\n                  type=\"date\"\n                  InputLabelProps={{ shrink: true }}\n                  variant=\"outlined\"\n                  id=\"actual_vacated_date\"\n                  name=\"actual_vacated_date\"\n                  label=\"Actual Date Vacated\"\n                  value={values.actual_vacated_date}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  error={\"actual_vacated_date\" in errors}\n                  helperText={errors.actual_vacated_date}\n                  disabled={!values.vacated}\n                />\n              </Grid>\n            </Grid>\n            <Grid item container direction=\"row\" className={classes.buttonBox}>\n              <Grid item>\n                <Button\n                  color=\"secondary\"\n                  variant=\"contained\"\n                  size=\"medium\"\n                  startIcon={<CancelIcon />}\n                  onClick={() => history.goBack()}\n                  disableElevation\n                >\n                  Cancel\n                  </Button>\n              </Grid>\n              <Grid item>\n                <Button\n                  type=\"submit\"\n                  color=\"primary\"\n                  variant=\"contained\"\n                  size=\"medium\"\n                  startIcon={<SaveIcon />}\n                  form=\"noticeInputForm\"\n                  disabled={isSubmitting}\n                >\n                  Move Out\n                  </Button>\n              </Grid>\n            </Grid>\n          </Grid>\n        </form>\n      )\n      }\n    </Formik >\n  );\n};\n\nexport default NoticeInputForm;\n"]},"metadata":{},"sourceType":"module"}