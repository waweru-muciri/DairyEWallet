{"ast":null,"code":"import * as actionTypes from \"../assets/actionTypes\";\nexport function propertySettings(state = [], action) {\n  switch (action.type) {\n    case actionTypes.PROPERTY_SETTINGS_FETCH_DATA_SUCCESS:\n      return action.propertySettings;\n\n    case actionTypes.EDIT_PROPERTY_SETTING:\n      return state.map(propertySetting => propertySetting.id === action.propertySetting.id ? Object.assign({}, propertySetting, action.propertySetting) : propertySetting);\n\n    case actionTypes.ADD_PROPERTY_SETTING:\n      return [...state, action.propertySetting];\n\n    case actionTypes.DELETE_PROPERTY_SETTING:\n      return state.filter(propertySetting => propertySetting.id !== action.propertySettingId);\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/brianmuciri/Projects/farm-ledger-ld/src/reducers/propertySettings.js"],"names":["actionTypes","propertySettings","state","action","type","PROPERTY_SETTINGS_FETCH_DATA_SUCCESS","EDIT_PROPERTY_SETTING","map","propertySetting","id","Object","assign","ADD_PROPERTY_SETTING","DELETE_PROPERTY_SETTING","filter","propertySettingId"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,uBAA7B;AAEA,OAAO,SAASC,gBAAT,CAA0BC,KAAK,GAAG,EAAlC,EAAsCC,MAAtC,EAA8C;AACjD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKJ,WAAW,CAACK,oCAAjB;AACI,aAAOF,MAAM,CAACF,gBAAd;;AAEJ,SAAKD,WAAW,CAACM,qBAAjB;AACI,aAAOJ,KAAK,CAACK,GAAN,CAAWC,eAAD,IACbA,eAAe,CAACC,EAAhB,KAAuBN,MAAM,CAACK,eAAP,CAAuBC,EAA9C,GAAmDC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,eAAlB,EAAmCL,MAAM,CAACK,eAA1C,CAAnD,GAAgHA,eAD7G,CAAP;;AAIJ,SAAKR,WAAW,CAACY,oBAAjB;AACI,aAAO,CAAC,GAAGV,KAAJ,EAAWC,MAAM,CAACK,eAAlB,CAAP;;AAEJ,SAAKR,WAAW,CAACa,uBAAjB;AACI,aAAOX,KAAK,CAACY,MAAN,CAAcN,eAAD,IAAqBA,eAAe,CAACC,EAAhB,KAAuBN,MAAM,CAACY,iBAAhE,CAAP;;AAEJ;AACI,aAAOb,KAAP;AAhBR;AAkBH","sourcesContent":["import * as actionTypes from \"../assets/actionTypes\";\n\nexport function propertySettings(state = [], action) {\n    switch (action.type) {\n        case actionTypes.PROPERTY_SETTINGS_FETCH_DATA_SUCCESS:\n            return action.propertySettings;\n\n        case actionTypes.EDIT_PROPERTY_SETTING:\n            return state.map((propertySetting) =>\n                propertySetting.id === action.propertySetting.id ? Object.assign({}, propertySetting, action.propertySetting) : propertySetting\n            );\n\n        case actionTypes.ADD_PROPERTY_SETTING:\n            return [...state, action.propertySetting];\n\n        case actionTypes.DELETE_PROPERTY_SETTING:\n            return state.filter((propertySetting) => propertySetting.id !== action.propertySettingId);\n\n        default:\n            return state;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}