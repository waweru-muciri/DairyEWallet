{"ast":null,"code":"import * as actionTypes from \"../assets/actionTypes\";\nexport function creditNotes(state = [], action) {\n  switch (action.type) {\n    case actionTypes.CREDIT_NOTES_FETCH_DATA_SUCCESS:\n      return action.creditNotes;\n\n    case actionTypes.EDIT_CREDIT_NOTE:\n      return state.map(creditNote => creditNote.id === action.creditNote.id ? Object.assign({}, creditNote, action.creditNote) : creditNote);\n\n    case actionTypes.ADD_CREDIT_NOTE:\n      return [...state, action.creditNote];\n\n    case actionTypes.DELETE_CREDIT_NOTE:\n      return state.filter(creditNote => creditNote.id !== action.creditNoteId);\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/brianmuciri/Projects/farm-ledger-ld/src/reducers/CreditNotes.js"],"names":["actionTypes","creditNotes","state","action","type","CREDIT_NOTES_FETCH_DATA_SUCCESS","EDIT_CREDIT_NOTE","map","creditNote","id","Object","assign","ADD_CREDIT_NOTE","DELETE_CREDIT_NOTE","filter","creditNoteId"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,uBAA7B;AAEA,OAAO,SAASC,WAAT,CAAqBC,KAAK,GAAG,EAA7B,EAAiCC,MAAjC,EAAyC;AAC5C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKJ,WAAW,CAACK,+BAAjB;AACI,aAAOF,MAAM,CAACF,WAAd;;AAEJ,SAAKD,WAAW,CAACM,gBAAjB;AACI,aAAOJ,KAAK,CAACK,GAAN,CAAWC,UAAD,IACbA,UAAU,CAACC,EAAX,KAAkBN,MAAM,CAACK,UAAP,CAAkBC,EAApC,GACMC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,UAAlB,EAA8BL,MAAM,CAACK,UAArC,CADN,GAEMA,UAHH,CAAP;;AAMJ,SAAKR,WAAW,CAACY,eAAjB;AACI,aAAO,CAAC,GAAGV,KAAJ,EAAWC,MAAM,CAACK,UAAlB,CAAP;;AAEJ,SAAKR,WAAW,CAACa,kBAAjB;AACI,aAAOX,KAAK,CAACY,MAAN,CAAcN,UAAD,IAAgBA,UAAU,CAACC,EAAX,KAAkBN,MAAM,CAACY,YAAtD,CAAP;;AAEJ;AACI,aAAOb,KAAP;AAlBR;AAoBH","sourcesContent":["import * as actionTypes from \"../assets/actionTypes\";\n\nexport function creditNotes(state = [], action) {\n    switch (action.type) {\n        case actionTypes.CREDIT_NOTES_FETCH_DATA_SUCCESS:\n            return action.creditNotes;\n\n        case actionTypes.EDIT_CREDIT_NOTE:\n            return state.map((creditNote) =>\n                creditNote.id === action.creditNote.id\n                    ? Object.assign({}, creditNote, action.creditNote)\n                    : creditNote\n            );\n\n        case actionTypes.ADD_CREDIT_NOTE:\n            return [...state, action.creditNote];\n\n        case actionTypes.DELETE_CREDIT_NOTE:\n            return state.filter((creditNote) => creditNote.id !== action.creditNoteId);\n\n        default:\n            return state;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}