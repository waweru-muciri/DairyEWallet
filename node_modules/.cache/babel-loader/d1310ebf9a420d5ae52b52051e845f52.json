{"ast":null,"code":"var _jsxFileName = \"/home/brianmuciri/Projects/farm-ledger-ld/src/Routes/Products.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { Grid, TextField, Button, MenuItem, Box } from \"@material-ui/core\";\nimport { handleDelete, itemsFetchData } from \"../actions/actions\";\nimport CommonTable from \"../components/table/commonTable\";\nimport { withRouter } from \"react-router-dom\";\nimport { commonStyles } from \"../components/commonStyles\";\nimport { connect } from \"react-redux\";\nimport Layout from \"../components/PrivateLayout\";\nimport PageHeading from \"../components/PageHeading\";\nimport PrintArrayToPdf from \"../components/PrintArrayToPdfBtn\";\nconst productsTableHeadCells = [{\n  id: \"reading_date\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Date Recorded\"\n}, {\n  id: \"unit_ref\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Unit Number/Ref\"\n}, {\n  id: \"tenant_name\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Tenant Name\"\n}, {\n  id: \"tenant_id_number\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Tenant Id Number\"\n}, {\n  id: \"meter_type\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Meter Type\"\n}, {\n  id: \"prior_value\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Prior Value\"\n}, {\n  id: \"current_value\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Curent Value\"\n}, {\n  id: \"usage\",\n  numeric: true,\n  disablePadding: true,\n  label: \"Usage\"\n}, {\n  id: \"base_charge\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Base Charge\"\n}, {\n  id: \"unit_charge\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Unit Charge\"\n}, {\n  id: \"amount\",\n  numeric: true,\n  disablePadding: true,\n  label: \"Amount(Ksh)\"\n}, {\n  id: \"edit\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Edit\"\n}, {\n  id: \"delete\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Delete\"\n}];\n\nlet ProductsPage = ({\n  fetchData,\n  products,\n  handleItemDelete,\n  match\n}) => {\n  const classes = commonStyles();\n  let [meterReadingItems, setMeterReadingItems] = useState([]);\n  let [filteredMeterReadingItems, setFilteredMeterReadingItems] = useState([]);\n  let [productNameFilter, setProductNameFilter] = useState(\"\");\n  const [selected, setSelected] = useState([]);\n  useEffect(() => {\n    fetchData(['products']);\n  }, [fetchData]);\n  useEffect(() => {\n    setMeterReadingItems(products);\n    setFilteredMeterReadingItems(filterproductsByCriteria(products));\n  }, [products]);\n\n  const filterproductsByCriteria = productsToFilter => {\n    let filteredproducts = productsToFilter.filter(({\n      product_name\n    }) => !productNameFilter ? true : product_name.toLowerCase().includes(productNameFilter.toLowerCase()));\n    return filteredproducts;\n  };\n\n  const handleSearchFormSubmit = event => {\n    event.preventDefault(); //filter the products here according to search criteria\n\n    setFilteredMeterReadingItems(filterproductsByCriteria(meterReadingItems));\n  };\n\n  const resetSearchForm = event => {\n    event.preventDefault();\n    setProductNameFilter(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(Layout, {\n    pageTitle: \"Products\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PageHeading, {\n    text: \"Products\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    item: true,\n    alignItems: \"center\",\n    direction: \"row\",\n    key: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"medium\",\n    startIcon: /*#__PURE__*/React.createElement(AddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 40\n      }\n    }),\n    component: Link,\n    to: `${match.url}/new`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 25\n    }\n  }, \"NEW\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"medium\",\n    startIcon: /*#__PURE__*/React.createElement(EditIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 40\n      }\n    }),\n    disabled: !selected.length,\n    component: Link,\n    to: `${match.url}/${selected[0]}/edit`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 25\n    }\n  }, \"Edit\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(PrintArrayToPdf, {\n    disabled: !selected.length,\n    reportName: 'Products Records',\n    reportTitle: 'Products Records',\n    headCells: productsTableHeadCells,\n    dataToPrint: meterReadingItems.filter(({\n      id\n    }) => selected.includes(id)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    border: 1,\n    borderRadius: \"borderRadius\",\n    borderColor: \"grey.400\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    id: \"contactSearchForm\",\n    onSubmit: handleSearchFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"center\",\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    spacing: 2,\n    justify: \"center\",\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"row\",\n    xs: 12,\n    md: 6,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    id: \"contact_first_name\",\n    name: \"contact_first_name\",\n    label: \"Product Name\",\n    value: productNameFilter,\n    onChange: event => {\n      setProductNameFilter(event.target.value.trim());\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 45\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    item: true,\n    justify: \"flex-end\",\n    alignItems: \"center\",\n    direction: \"row\",\n    key: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: event => handleSearchFormSubmit(event),\n    type: \"submit\",\n    form: \"contactSearchForm\",\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"medium\",\n    startIcon: /*#__PURE__*/React.createElement(SearchIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 56\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 41\n    }\n  }, \"SEARCH\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: event => resetSearchForm(event),\n    type: \"reset\",\n    form: \"propertySearchForm\",\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"medium\",\n    startIcon: /*#__PURE__*/React.createElement(UndoIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 56\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 41\n    }\n  }, \"RESET\"))))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CommonTable, {\n    selected: selected,\n    setSelected: setSelected,\n    rows: filteredMeterReadingItems,\n    headCells: productsTableHeadCells,\n    handleDelete: handleItemDelete,\n    deleteUrl: \"products\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 21\n    }\n  }))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    products: state.products\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchData: collectionsUrls => dispatch(itemsFetchData(collectionsUrls)),\n    handleItemDelete: (itemId, url) => dispatch(handleDelete(itemId, url))\n  };\n};\n\nProductsPage = connect(mapStateToProps, mapDispatchToProps)(ProductsPage);\nexport default withRouter(ProductsPage);","map":{"version":3,"sources":["/home/brianmuciri/Projects/farm-ledger-ld/src/Routes/Products.js"],"names":["React","useEffect","useState","Link","EditIcon","SearchIcon","UndoIcon","AddIcon","Grid","TextField","Button","MenuItem","Box","handleDelete","itemsFetchData","CommonTable","withRouter","commonStyles","connect","Layout","PageHeading","PrintArrayToPdf","productsTableHeadCells","id","numeric","disablePadding","label","ProductsPage","fetchData","products","handleItemDelete","match","classes","meterReadingItems","setMeterReadingItems","filteredMeterReadingItems","setFilteredMeterReadingItems","productNameFilter","setProductNameFilter","selected","setSelected","filterproductsByCriteria","productsToFilter","filteredproducts","filter","product_name","toLowerCase","includes","handleSearchFormSubmit","event","preventDefault","resetSearchForm","url","length","form","target","value","trim","mapStateToProps","state","mapDispatchToProps","dispatch","collectionsUrls","itemId"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { Grid, TextField, Button, MenuItem, Box } from \"@material-ui/core\";\nimport { handleDelete, itemsFetchData } from \"../actions/actions\";\nimport CommonTable from \"../components/table/commonTable\";\nimport { withRouter } from \"react-router-dom\";\nimport { commonStyles } from \"../components/commonStyles\";\nimport { connect } from \"react-redux\";\nimport Layout from \"../components/PrivateLayout\";\nimport PageHeading from \"../components/PageHeading\";\nimport PrintArrayToPdf from \"../components/PrintArrayToPdfBtn\";\n\n\n\n\nconst productsTableHeadCells = [\n    { id: \"reading_date\", numeric: false, disablePadding: true, label: \"Date Recorded\" },\n    { id: \"unit_ref\", numeric: false, disablePadding: true, label: \"Unit Number/Ref\" },\n    { id: \"tenant_name\", numeric: false, disablePadding: true, label: \"Tenant Name\" },\n    { id: \"tenant_id_number\", numeric: false, disablePadding: true, label: \"Tenant Id Number\" },\n    { id: \"meter_type\", numeric: false, disablePadding: true, label: \"Meter Type\" },\n    { id: \"prior_value\", numeric: false, disablePadding: true, label: \"Prior Value\" },\n    { id: \"current_value\", numeric: false, disablePadding: true, label: \"Curent Value\" },\n    { id: \"usage\", numeric: true, disablePadding: true, label: \"Usage\" },\n    { id: \"base_charge\", numeric: false, disablePadding: true, label: \"Base Charge\" },\n    { id: \"unit_charge\", numeric: false, disablePadding: true, label: \"Unit Charge\" },\n    { id: \"amount\", numeric: true, disablePadding: true, label: \"Amount(Ksh)\" },\n    { id: \"edit\", numeric: false, disablePadding: true, label: \"Edit\" },\n    { id: \"delete\", numeric: false, disablePadding: true, label: \"Delete\" },\n];\n\nlet ProductsPage = ({\n    fetchData,\n    products,\n    handleItemDelete,\n    match,\n}) => {\n    const classes = commonStyles();\n    let [meterReadingItems, setMeterReadingItems] = useState([]);\n    let [filteredMeterReadingItems, setFilteredMeterReadingItems] = useState([]);\n    let [productNameFilter, setProductNameFilter] = useState(\"\");\n    const [selected, setSelected] = useState([]);\n\n\n    useEffect(() => {\n        fetchData(['products']);\n    }, [fetchData]);\n\n    useEffect(() => {\n        setMeterReadingItems(products);\n        setFilteredMeterReadingItems(filterproductsByCriteria(products));\n    }, [products]);\n\n    const filterproductsByCriteria = (productsToFilter) => {\n        let filteredproducts = productsToFilter\n        .filter(({ product_name }) =>\n                !productNameFilter ? true : product_name.toLowerCase().includes(productNameFilter.toLowerCase())\n            )\n        return filteredproducts;\n    }\n\n    const handleSearchFormSubmit = (event) => {\n        event.preventDefault();\n        //filter the products here according to search criteria\n        setFilteredMeterReadingItems(filterproductsByCriteria(meterReadingItems));\n    };\n\n    const resetSearchForm = (event) => {\n        event.preventDefault();\n        setProductNameFilter(\"\")\n    };\n\n    return (\n        <Layout pageTitle=\"Products\">\n            <Grid\n                container\n                spacing={3}\n                alignItems=\"center\"\n            >\n                <Grid item lg={12}>\n                    <PageHeading text=\"Products\" />\n                </Grid>\n                <Grid\n                    container\n                    spacing={2}\n                    item\n                    alignItems=\"center\"\n                    direction=\"row\"\n                    key={1}\n                >\n                    <Grid item>\n                        <Button\n                            type=\"button\"\n                            color=\"primary\"\n                            variant=\"contained\"\n                            size=\"medium\"\n                            startIcon={<AddIcon />}\n                            component={Link}\n                            to={`${match.url}/new`}\n                        >\n                            NEW\n                        </Button>\n                    </Grid>\n                    <Grid item>\n                        <Button\n                            type=\"button\"\n                            color=\"primary\"\n                            variant=\"contained\"\n                            size=\"medium\"\n                            startIcon={<EditIcon />}\n                            disabled={!selected.length}\n                            component={Link}\n                            to={`${match.url}/${selected[0]}/edit`}\n                        >\n                            Edit\n                        </Button>\n                    </Grid>\n                    <Grid item>\n                        <PrintArrayToPdf\n                            disabled={!selected.length}\n                            reportName={'Products Records'}\n                            reportTitle={'Products Records'}\n                            headCells={productsTableHeadCells}\n                            dataToPrint={meterReadingItems.filter(({ id }) => selected.includes(id))}\n                        />\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    <Box\n                        border={1}\n                        borderRadius=\"borderRadius\"\n                        borderColor=\"grey.400\"\n                    >\n                        <form\n                            className={classes.form}\n                            id=\"contactSearchForm\"\n                            onSubmit={handleSearchFormSubmit}\n                        >\n                            <Grid\n                                container\n                                spacing={2}\n                                justify=\"center\"\n                                direction=\"column\"\n                            >\n                                <Grid\n                                    container\n                                    item\n                                    spacing={2}\n                                    justify=\"center\"\n                                    direction=\"row\"\n                                >\n                                    <Grid item container direction=\"row\" xs={12} md={6} spacing={2}>\n                                        <Grid item xs={12} md={6}>\n                                            <TextField\n                                                fullWidth\n                                                variant=\"outlined\"\n                                                id=\"contact_first_name\"\n                                                name=\"contact_first_name\"\n                                                label=\"Product Name\"\n                                                value={productNameFilter}\n                                                onChange={(event) => {\n                                                    setProductNameFilter(\n                                                        event.target.value.trim()\n                                                    );\n                                                }}\n                                            />\n                                        </Grid>\n                                    </Grid>\n\n                                </Grid>\n                                <Grid\n                                    container\n                                    spacing={2}\n                                    item\n                                    justify=\"flex-end\"\n                                    alignItems=\"center\"\n                                    direction=\"row\"\n                                    key={1}\n                                >\n                                    <Grid item>\n                                        <Button\n                                            onClick={(event) => handleSearchFormSubmit(event)}\n                                            type=\"submit\"\n                                            form=\"contactSearchForm\"\n                                            color=\"primary\"\n                                            variant=\"contained\"\n                                            size=\"medium\"\n                                            startIcon={<SearchIcon />}\n                                        >\n                                            SEARCH\n                                        </Button>\n                                    </Grid>\n                                    <Grid item>\n                                        <Button\n                                            onClick={(event) =>\n                                                resetSearchForm(event)\n                                            }\n                                            type=\"reset\"\n                                            form=\"propertySearchForm\"\n                                            color=\"primary\"\n                                            variant=\"contained\"\n                                            size=\"medium\"\n                                            startIcon={<UndoIcon />}\n                                        >\n                                            RESET\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </form>\n                    </Box>\n                </Grid>\n                <Grid item xs={12}>\n                    <CommonTable\n                        selected={selected}\n                        setSelected={setSelected}\n                        rows={filteredMeterReadingItems}\n                        headCells={productsTableHeadCells}\n                        handleDelete={handleItemDelete}\n                        deleteUrl={\"products\"}\n                    />\n                </Grid>\n            </Grid>\n        </Layout>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        products: state.products\n    };\n};\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchData: (collectionsUrls) => dispatch(itemsFetchData(collectionsUrls)),\n        handleItemDelete: (itemId, url) => dispatch(handleDelete(itemId, url)),\n    };\n};\n\nProductsPage = connect(mapStateToProps, mapDispatchToProps)(ProductsPage);\n\nexport default withRouter(ProductsPage);\n"]},"metadata":{},"sourceType":"module"}