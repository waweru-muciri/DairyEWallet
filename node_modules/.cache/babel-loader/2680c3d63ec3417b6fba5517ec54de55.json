{"ast":null,"code":"var _jsxFileName = \"/home/brianmuciri/Projects/farm-ledger-ld/src/components/to-dos/ToDoInputForm.js\";\nimport React from \"react\";\nimport { Button, TextField, FormControl, FormLabel, FormControlLabel, RadioGroup, Radio, Grid } from \"@material-ui/core\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport CustomCircularProgress from \"../CustomCircularProgress\";\nimport CustomSnackbar from '../CustomSnackbar';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { Formik } from \"formik\";\nimport { commonStyles } from \"../commonStyles\";\nimport * as Yup from \"yup\";\nconst ToDoSchema = Yup.object().shape({\n  title: Yup.string().required(\"Title is Required\"),\n  start: Yup.string().required(\"Start Date is Required\"),\n  end: Yup.date().required(\"End Date is Required\"),\n  description: Yup.string().required(\"Event Description is Required\"),\n  complete_status: Yup.boolean().default(false),\n  reminder_date: Yup.date().when(\"start\", (start, schema) => start && schema.max(start, \"Reminder date must be <= start date\"))\n});\n\nlet ToDoInputForm = props => {\n  const classes = commonStyles();\n  const {\n    handleItemSubmit,\n    handleItemDelete,\n    open,\n    handleClose,\n    eventToShow,\n    users,\n    setEventToShow\n  } = props;\n  const pageTitle = eventToShow.id ? \"Edit To-Do\" : \"Add To-Do\";\n  return /*#__PURE__*/React.createElement(Dialog, {\n    fullWidth: true,\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }\n  }, pageTitle), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: eventToShow,\n    enableReinitialize: true,\n    validationSchema: ToDoSchema,\n    onSubmit: (values, {\n      resetForm,\n      setStatus\n    }) => {\n      try {\n        let todo = {\n          id: values.id,\n          title: values.title,\n          start: values.start,\n          end: values.end,\n          extendedProps: {\n            assigned_to: values.assigned_to,\n            description: values.description,\n            reminder_date: values.reminder_date,\n            complete_status: values.complete_status\n          }\n        };\n        handleItemSubmit(todo, \"to-dos\").then(response => {\n          setEventToShow({});\n          resetForm({});\n\n          if (values.id) {\n            handleClose();\n          }\n        });\n        setStatus({\n          sent: true,\n          msg: \"Details saved successfully.\"\n        });\n      } catch (error) {\n        setStatus({\n          sent: false,\n          msg: `Error! ${error}.`\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 4\n    }\n  }, ({\n    values,\n    status,\n    touched,\n    errors,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    setFieldValue,\n    isSubmitting\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    method: \"post\",\n    id: \"todoInputForm\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, status && status.msg && /*#__PURE__*/React.createElement(CustomSnackbar, {\n    variant: status.sent ? \"success\" : \"error\",\n    message: status.msg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 10\n    }\n  }), isSubmitting && /*#__PURE__*/React.createElement(CustomCircularProgress, {\n    open: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 26\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    name: \"title\",\n    label: \"Title\",\n    id: \"title\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    value: values.title || \"\",\n    error: errors.title && touched.title,\n    helperText: touched.title && errors.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    id: \"start\",\n    name: \"start\",\n    label: \"Start Date\",\n    type: \"date\",\n    value: values.start || \"\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    error: errors.start && touched.start,\n    helperText: touched.start && errors.start,\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    id: \"end\",\n    name: \"end\",\n    label: \"End Date\",\n    type: \"date\",\n    value: values.end || \"\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    error: errors.end && touched.end,\n    helperText: touched.end && errors.end,\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    id: \"assigned_to\",\n    options: users,\n    getOptionSelected: (option, value) => option && value ? option.id === value.id : \"\",\n    name: \"assigned_to\",\n    onChange: (event, newValue) => {\n      setFieldValue(\"assigned_to\", newValue);\n    },\n    value: values.assigned_to,\n    getOptionLabel: user => user ? `${user.first_name} ${user.last_name}` : '',\n    style: {\n      width: \"100%\"\n    },\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"Assigned To\",\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 35\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    type: \"date\",\n    variant: \"outlined\",\n    id: \"reminder_date\",\n    name: \"reminder_date\",\n    label: \"Reminder Date\",\n    value: values.reminder_date || \"\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    error: errors.reminder_date && touched.reminder_date,\n    helperText: touched.reminder_date && errors.reminder_date,\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    multiline: true,\n    rows: 2,\n    variant: \"outlined\",\n    id: \"description\",\n    name: \"description\",\n    label: \"Description\",\n    value: values.description || \"\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    error: errors.description && touched.description,\n    helperText: touched.description && errors.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    component: \"fieldset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    component: \"legend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 10\n    }\n  }, \"Complete Status\"), /*#__PURE__*/React.createElement(RadioGroup, {\n    row: true,\n    \"aria-label\": \"Completed Status\",\n    name: \"complete_status\",\n    value: values.complete_status,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"true\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 21\n      }\n    }),\n    label: \"Complete\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"false\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 21\n      }\n    }),\n    label: \"Incomplete\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 11\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    justify: \"flex-start\",\n    direction: \"row\",\n    className: classes.buttonBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    size: \"medium\",\n    startIcon: /*#__PURE__*/React.createElement(CancelIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 22\n      }\n    }),\n    onClick: () => handleClose(),\n    disableElevation: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 10\n    }\n  }, \"Cancel\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    size: \"medium\",\n    startIcon: /*#__PURE__*/React.createElement(SaveIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 22\n      }\n    }),\n    form: \"todoInputForm\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 10\n    }\n  }, \"Save\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    size: \"medium\",\n    startIcon: /*#__PURE__*/React.createElement(DeleteIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 22\n      }\n    }),\n    disabled: !values.id,\n    onClick: () => {\n      handleItemDelete(values.id, \"to-dos\");\n      handleClose();\n    },\n    disableElevation: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 10\n    }\n  }, \"Delete\")))))));\n};\n\nexport default ToDoInputForm;","map":{"version":3,"sources":["/home/brianmuciri/Projects/farm-ledger-ld/src/components/to-dos/ToDoInputForm.js"],"names":["React","Button","TextField","FormControl","FormLabel","FormControlLabel","RadioGroup","Radio","Grid","SaveIcon","CancelIcon","DeleteIcon","Dialog","DialogActions","DialogTitle","CustomCircularProgress","CustomSnackbar","Autocomplete","Formik","commonStyles","Yup","ToDoSchema","object","shape","title","string","required","start","end","date","description","complete_status","boolean","default","reminder_date","when","schema","max","ToDoInputForm","props","classes","handleItemSubmit","handleItemDelete","open","handleClose","eventToShow","users","setEventToShow","pageTitle","id","values","resetForm","setStatus","todo","extendedProps","assigned_to","then","response","sent","msg","error","status","touched","errors","handleChange","handleBlur","handleSubmit","setFieldValue","isSubmitting","form","shrink","option","value","event","newValue","user","first_name","last_name","width","params","buttonBox"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n\tButton,\n\tTextField,\n\tFormControl,\n\tFormLabel,\n\tFormControlLabel,\n\tRadioGroup,\n\tRadio,\n\tGrid,\n} from \"@material-ui/core\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport CustomCircularProgress from \"../CustomCircularProgress\";\nimport CustomSnackbar from '../CustomSnackbar';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { Formik } from \"formik\";\nimport { commonStyles } from \"../commonStyles\";\nimport * as Yup from \"yup\";\n\nconst ToDoSchema = Yup.object().shape({\n\ttitle: Yup.string().required(\"Title is Required\"),\n\tstart: Yup.string().required(\"Start Date is Required\"),\n\tend: Yup.date().required(\"End Date is Required\"),\n\tdescription: Yup.string().required(\"Event Description is Required\"),\n\tcomplete_status: Yup.boolean().default(false),\n\treminder_date: Yup.date()\n\t\t.when(\"start\", (start, schema) => start && schema.max(start, \"Reminder date must be <= start date\")),\n});\n\nlet ToDoInputForm = (props) => {\n\tconst classes = commonStyles();\n\tconst {\n\t\thandleItemSubmit,\n\t\thandleItemDelete,\n\t\topen,\n\t\thandleClose,\n\t\teventToShow,\n\t\tusers,\n\t\tsetEventToShow,\n\t} = props;\n\tconst pageTitle = eventToShow.id ? \"Edit To-Do\" : \"Add To-Do\";\n\n\treturn (\n\t\t<Dialog\n\t\t\tfullWidth\n\t\t\topen={open}\n\t\t\tonClose={handleClose}\n\t\t\taria-labelledby=\"form-dialog-title\"\n\t\t>\n\t\t\t<DialogTitle id=\"form-dialog-title\">{pageTitle}</DialogTitle>\n\t\t\t<Formik\n\t\t\t\tinitialValues={eventToShow}\n\t\t\t\tenableReinitialize\n\t\t\t\tvalidationSchema={ToDoSchema}\n\t\t\t\tonSubmit={(values, { resetForm, setStatus }) => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlet todo = {\n\t\t\t\t\t\t\tid: values.id,\n\t\t\t\t\t\t\ttitle: values.title,\n\t\t\t\t\t\t\tstart: values.start,\n\t\t\t\t\t\t\tend: values.end,\n\t\t\t\t\t\t\textendedProps: {\n\t\t\t\t\t\t\t\tassigned_to: values.assigned_to,\n\t\t\t\t\t\t\t\tdescription: values.description,\n\t\t\t\t\t\t\t\treminder_date: values.reminder_date,\n\t\t\t\t\t\t\t\tcomplete_status: values.complete_status,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\thandleItemSubmit(todo, \"to-dos\").then((response) => {\n\t\t\t\t\t\t\tsetEventToShow({});\n\t\t\t\t\t\t\tresetForm({});\n\t\t\t\t\t\t\tif (values.id) {\n\t\t\t\t\t\t\t\thandleClose()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetStatus({ sent: true, msg: \"Details saved successfully.\" })\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tsetStatus({ sent: false, msg: `Error! ${error}.` })\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{({\n\t\t\t\t\tvalues,\n\t\t\t\t\tstatus,\n\t\t\t\t\ttouched,\n\t\t\t\t\terrors,\n\t\t\t\t\thandleChange,\n\t\t\t\t\thandleBlur,\n\t\t\t\t\thandleSubmit,\n\t\t\t\t\tsetFieldValue,\n\t\t\t\t\tisSubmitting,\n\t\t\t\t}) => (\n\t\t\t\t\t<form\n\t\t\t\t\t\tclassName={classes.form}\n\t\t\t\t\t\tmethod=\"post\"\n\t\t\t\t\t\tid=\"todoInputForm\"\n\t\t\t\t\t\tonSubmit={handleSubmit}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Grid container direction=\"column\" spacing={2}>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tstatus && status.msg && (\n\t\t\t\t\t\t\t\t\t<CustomSnackbar\n\t\t\t\t\t\t\t\t\t\tvariant={status.sent ? \"success\" : \"error\"}\n\t\t\t\t\t\t\t\t\t\tmessage={status.msg}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tisSubmitting && (<CustomCircularProgress open={true} />)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\tname=\"title\"\n\t\t\t\t\t\t\t\t\tlabel=\"Title\"\n\t\t\t\t\t\t\t\t\tid=\"title\"\n\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\tvalue={values.title || \"\"}\n\t\t\t\t\t\t\t\t\terror={errors.title && touched.title}\n\t\t\t\t\t\t\t\t\thelperText={touched.title && errors.title}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\tid=\"start\"\n\t\t\t\t\t\t\t\t\tname=\"start\"\n\t\t\t\t\t\t\t\t\tlabel=\"Start Date\"\n\t\t\t\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\t\t\t\tvalue={values.start || \"\"}\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\terror={errors.start && touched.start}\n\t\t\t\t\t\t\t\t\thelperText={touched.start && errors.start}\n\t\t\t\t\t\t\t\t\tInputLabelProps={{ shrink: true }}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\tid=\"end\"\n\t\t\t\t\t\t\t\t\tname=\"end\"\n\t\t\t\t\t\t\t\t\tlabel=\"End Date\"\n\t\t\t\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\t\t\t\tvalue={values.end || \"\"}\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\terror={errors.end && touched.end}\n\t\t\t\t\t\t\t\t\thelperText={touched.end && errors.end}\n\t\t\t\t\t\t\t\t\tInputLabelProps={{ shrink: true }}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\t\t\t\tid=\"assigned_to\"\n\t\t\t\t\t\t\t\t\toptions={users}\n\t\t\t\t\t\t\t\t\tgetOptionSelected={(option, value) => option && value ? option.id === value.id : \"\"}\n\t\t\t\t\t\t\t\t\tname=\"assigned_to\"\n\t\t\t\t\t\t\t\t\tonChange={(event, newValue) => {\n\t\t\t\t\t\t\t\t\t\tsetFieldValue(\"assigned_to\", newValue);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tvalue={values.assigned_to}\n\t\t\t\t\t\t\t\t\tgetOptionLabel={(user) => user ? `${user.first_name} ${user.last_name}` : ''}\n\t\t\t\t\t\t\t\t\tstyle={{ width: \"100%\" }}\n\t\t\t\t\t\t\t\t\trenderInput={(params) => <TextField {...params} label=\"Assigned To\" variant=\"outlined\" />}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\ttype=\"date\"\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\tid=\"reminder_date\"\n\t\t\t\t\t\t\t\t\tname=\"reminder_date\"\n\t\t\t\t\t\t\t\t\tlabel=\"Reminder Date\"\n\t\t\t\t\t\t\t\t\tvalue={values.reminder_date || \"\"}\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\terror={\n\t\t\t\t\t\t\t\t\t\terrors.reminder_date && touched.reminder_date\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\t\t\ttouched.reminder_date && errors.reminder_date\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tInputLabelProps={{ shrink: true }}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\tmultiline\n\t\t\t\t\t\t\t\t\trows={2}\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\tid=\"description\"\n\t\t\t\t\t\t\t\t\tname=\"description\"\n\t\t\t\t\t\t\t\t\tlabel=\"Description\"\n\t\t\t\t\t\t\t\t\tvalue={values.description || \"\"}\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\terror={errors.description && touched.description}\n\t\t\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\t\t\ttouched.description && errors.description\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<FormControl fullWidth component=\"fieldset\">\n\t\t\t\t\t\t\t\t\t<FormLabel component=\"legend\">\n\t\t\t\t\t\t\t\t\t\tComplete Status\n\t\t\t\t\t\t\t\t\t</FormLabel>\n\t\t\t\t\t\t\t\t\t<RadioGroup\n\t\t\t\t\t\t\t\t\t\trow\n\t\t\t\t\t\t\t\t\t\taria-label=\"Completed Status\"\n\t\t\t\t\t\t\t\t\t\tname=\"complete_status\"\n\t\t\t\t\t\t\t\t\t\tvalue={values.complete_status}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\t\t\tvalue={\"true\"}\n\t\t\t\t\t\t\t\t\t\t\tcontrol={<Radio />}\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Complete\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\t\t\tvalue={\"false\"}\n\t\t\t\t\t\t\t\t\t\t\tcontrol={<Radio />}\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Incomplete\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</RadioGroup>\n\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item\n\t\t\t\t\t\t\t\tcontainer\n\t\t\t\t\t\t\t\tjustify=\"flex-start\"\n\t\t\t\t\t\t\t\tdirection=\"row\"\n\t\t\t\t\t\t\t\tclassName={classes.buttonBox}>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\t\t\t\tstartIcon={<CancelIcon />}\n\t\t\t\t\t\t\t\t\t\tonClick={() => handleClose()}\n\t\t\t\t\t\t\t\t\t\tdisableElevation\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\t\t\t\tstartIcon={<SaveIcon />}\n\t\t\t\t\t\t\t\t\t\tform=\"todoInputForm\"\n\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tSave\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\t\t\t\t\tstartIcon={<DeleteIcon />}\n\t\t\t\t\t\t\t\t\t\tdisabled={!values.id}\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\thandleItemDelete(values.id, \"to-dos\");\n\t\t\t\t\t\t\t\t\t\t\thandleClose();\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tdisableElevation\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</form>\n\t\t\t\t)}\n\t\t\t</Formik>\n\t\t</Dialog>\n\t);\n};\n\nexport default ToDoInputForm;\n"]},"metadata":{},"sourceType":"module"}