{"ast":null,"code":"var _jsxFileName = \"/home/brianmuciri/Projects/farm-ledger-ld/src/Routes/ToDos.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Layout from \"../components/PrivateLayout\";\nimport PageHeading from \"../components/PageHeading\";\nimport ToDoInputForm from \"../components/to-dos/ToDoInputForm.js\";\nimport { Grid } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\"; // must manually import the stylesheets for each plugin\n\nimport \"@fullcalendar/core/main.css\";\nimport \"@fullcalendar/daygrid/main.css\";\nimport \"@fullcalendar/timegrid/main.css\";\nimport { handleItemFormSubmit, handleDelete, itemsFetchData } from \"../actions/actions\";\nimport { format, startOfToday } from \"date-fns\";\nconst defaultDate = format(startOfToday(), 'yyyy-MM-dd');\n\nlet ToDosPage = ({\n  fetchData,\n  currentUser,\n  toDos,\n  users,\n  handleItemDelete,\n  handleItemSubmit\n}) => {\n  const [open, toggleOpen] = useState(false);\n  const [toDoItems, setToDoItems] = useState([]);\n  const [eventToShow, setEventToShow] = useState({});\n  useEffect(() => {\n    fetchData(['to-dos']);\n  }, [fetchData]);\n  useEffect(() => {\n    const mappedToDos = toDos.map(event => Object.assign({}, event, {\n      backgroundColor: event.extendedProps.complete_status === \"true\" ? \"#008000\" : \"\"\n    }));\n    setToDoItems(mappedToDos);\n  }, [toDos]);\n\n  const handleEventDrop = async info => {\n    const updatedEvent = {\n      start: format(info.event.start, 'yyyy-MM-dd'),\n      end: format(info.event.start, 'yyyy-MM-dd'),\n      id: info.event.id,\n      title: info.event.title,\n      extendedProps: { ...info.event.extendedProps\n      }\n    };\n    await handleItemSubmit(updatedEvent, \"to-dos\");\n  };\n\n  const handleClose = () => {\n    toggleOpen(!open);\n  };\n\n  const handleEventClick = ({\n    event\n  }) => {\n    const clickedEvent = {\n      title: event.title,\n      id: event.id,\n      assigned_to: event.extendedProps.assigned_to || null,\n      description: event.extendedProps.description,\n      reminder_date: event.extendedProps.reminder_date,\n      complete_status: event.extendedProps.complete_status,\n      start: event.start ? format(event.start, 'yyyy-MM-dd') : defaultDate,\n      end: event.end ? format(event.end, 'yyyy-MM-dd') : defaultDate,\n      allDay: event.allDay\n    };\n    setEventToShow(clickedEvent);\n    handleClose();\n  };\n\n  const handleEventResize = ({\n    event\n  }) => {\n    const clickedEvent = {\n      title: event.title,\n      id: event.id,\n      assigned_to: event.extendedProps.assigned_to || null,\n      description: event.extendedProps.description,\n      reminder_date: event.extendedProps.reminder_date,\n      complete_status: event.extendedProps.complete_status,\n      start: event.start ? format(event.start, 'yyyy-MM-dd') : defaultDate,\n      end: event.end ? format(event.end, 'yyyy-MM-dd') : defaultDate,\n      allDay: event.allDay\n    };\n    setEventToShow(clickedEvent);\n    handleClose(); //console.log(event);\n  };\n\n  const handleDateClick = arg => {\n    setEventToShow({\n      start: arg.date ? format(arg.date, 'yyyy-MM-dd') : ''\n    });\n    handleClose();\n  };\n\n  return /*#__PURE__*/React.createElement(Layout, {\n    pageTitle: \"To-Dos\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    justify: \"space-evenly\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PageHeading, {\n    text: \"To-Dos\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FullCalendar, {\n    defaultView: \"dayGridMonth\",\n    header: {\n      left: \"prev,next today\",\n      center: \"title\",\n      right: \"dayGridMonth,timeGridWeek,timeGridDay,listWeek\"\n    },\n    plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n    editable: true,\n    events: toDoItems,\n    eventResize: handleEventResize,\n    eventDrop: handleEventDrop,\n    eventClick: handleEventClick,\n    dateClick: handleDateClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(ToDoInputForm, {\n    handleItemDelete: handleItemDelete,\n    currentUser: currentUser,\n    handleItemSubmit: handleItemSubmit,\n    users: users,\n    eventToShow: eventToShow,\n    setEventToShow: setEventToShow,\n    open: open,\n    handleClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 6\n    }\n  }))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.currentUser,\n    toDos: state.toDos,\n    users: state.users\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchData: collectionsUrls => dispatch(itemsFetchData(collectionsUrls)),\n    handleItemDelete: (itemId, url) => dispatch(handleDelete(itemId, url)),\n    handleItemSubmit: (item, url) => dispatch(handleItemFormSubmit(item, url))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ToDosPage);","map":{"version":3,"sources":["/home/brianmuciri/Projects/farm-ledger-ld/src/Routes/ToDos.js"],"names":["React","useState","useEffect","Layout","PageHeading","ToDoInputForm","Grid","connect","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","handleItemFormSubmit","handleDelete","itemsFetchData","format","startOfToday","defaultDate","ToDosPage","fetchData","currentUser","toDos","users","handleItemDelete","handleItemSubmit","open","toggleOpen","toDoItems","setToDoItems","eventToShow","setEventToShow","mappedToDos","map","event","Object","assign","backgroundColor","extendedProps","complete_status","handleEventDrop","info","updatedEvent","start","end","id","title","handleClose","handleEventClick","clickedEvent","assigned_to","description","reminder_date","allDay","handleEventResize","handleDateClick","arg","date","left","center","right","mapStateToProps","state","mapDispatchToProps","dispatch","collectionsUrls","itemId","url","item"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Layout from \"../components/PrivateLayout\";\nimport PageHeading from \"../components/PageHeading\";\nimport ToDoInputForm from \"../components/to-dos/ToDoInputForm.js\";\nimport { Grid } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\n// must manually import the stylesheets for each plugin\nimport \"@fullcalendar/core/main.css\";\nimport \"@fullcalendar/daygrid/main.css\";\nimport \"@fullcalendar/timegrid/main.css\";\nimport { handleItemFormSubmit, handleDelete, itemsFetchData } from \"../actions/actions\";\nimport { format, startOfToday } from \"date-fns\";\n\nconst defaultDate = format(startOfToday(), 'yyyy-MM-dd')\n\nlet ToDosPage = ({ fetchData, currentUser, toDos, users, handleItemDelete, handleItemSubmit }) => {\n\tconst [open, toggleOpen] = useState(false);\n\tconst [toDoItems, setToDoItems] = useState([]);\n\tconst [eventToShow, setEventToShow] = useState({});\n\n\tuseEffect(() => {\n\t\tfetchData(['to-dos']);\n\t}, [fetchData]);\n\n\tuseEffect(() => {\n\t\tconst mappedToDos = toDos.map((event) =>\n\t\t\tObject.assign({}, event, {\n\t\t\t\tbackgroundColor: event.extendedProps.complete_status === \"true\" ? \"#008000\" : \"\",\n\t\t\t})\n\t\t);\n\t\tsetToDoItems(mappedToDos);\n\t}, [toDos]);\n\n\tconst handleEventDrop = async (info) => {\n\t\tconst updatedEvent = {\n\t\t\tstart: format(info.event.start, 'yyyy-MM-dd'),\n\t\t\tend: format(info.event.start, 'yyyy-MM-dd'),\n\t\t\tid: info.event.id,\n\t\t\ttitle: info.event.title,\n\t\t\textendedProps: { ...info.event.extendedProps }\n\t\t};\n\t\tawait handleItemSubmit(updatedEvent, \"to-dos\");\n\t};\n\n\tconst handleClose = () => {\n\t\ttoggleOpen(!open);\n\t};\n\n\tconst handleEventClick = ({ event }) => {\n\t\tconst clickedEvent = {\n\t\t\ttitle: event.title,\n\t\t\tid: event.id,\n\t\t\tassigned_to: event.extendedProps.assigned_to || null,\n\t\t\tdescription: event.extendedProps.description,\n\t\t\treminder_date: event.extendedProps.reminder_date,\n\t\t\tcomplete_status: event.extendedProps.complete_status,\n\t\t\tstart: event.start ? format(event.start, 'yyyy-MM-dd') : defaultDate,\n\t\t\tend: event.end ? format(event.end, 'yyyy-MM-dd') : defaultDate,\n\t\t\tallDay: event.allDay,\n\t\t};\n\t\tsetEventToShow(clickedEvent);\n\t\thandleClose();\n\t};\n\n\tconst handleEventResize = ({ event }) => {\n\t\tconst clickedEvent = {\n\t\t\ttitle: event.title,\n\t\t\tid: event.id,\n\t\t\tassigned_to: event.extendedProps.assigned_to || null,\n\t\t\tdescription: event.extendedProps.description,\n\t\t\treminder_date: event.extendedProps.reminder_date,\n\t\t\tcomplete_status: event.extendedProps.complete_status,\n\t\t\tstart: event.start ? format(event.start, 'yyyy-MM-dd') : defaultDate,\n\t\t\tend: event.end ? format(event.end, 'yyyy-MM-dd') : defaultDate,\n\t\t\tallDay: event.allDay,\n\t\t};\n\t\tsetEventToShow(clickedEvent);\n\t\thandleClose();\n\t\t//console.log(event);\n\t};\n\n\tconst handleDateClick = (arg) => {\n\t\tsetEventToShow({ start: arg.date ? format(arg.date, 'yyyy-MM-dd') : '' });\n\t\thandleClose();\n\t};\n\n\treturn (\n\t\t<Layout pageTitle={\"To-Dos\"}>\n\t\t\t<Grid\n\t\t\t\tcontainer\n\t\t\t\tspacing={3}\n\t\t\t\tjustify=\"space-evenly\"\n\t\t\t\talignItems=\"center\"\n\t\t\t>\n\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t<PageHeading text=\"To-Dos\" />\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<FullCalendar\n\t\t\t\t\t\tdefaultView=\"dayGridMonth\"\n\t\t\t\t\t\theader={{\n\t\t\t\t\t\t\tleft: \"prev,next today\",\n\t\t\t\t\t\t\tcenter: \"title\",\n\t\t\t\t\t\t\tright:\n\t\t\t\t\t\t\t\t\"dayGridMonth,timeGridWeek,timeGridDay,listWeek\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tplugins={[\n\t\t\t\t\t\t\tdayGridPlugin,\n\t\t\t\t\t\t\ttimeGridPlugin,\n\t\t\t\t\t\t\tinteractionPlugin,\n\t\t\t\t\t\t]}\n\t\t\t\t\t\teditable\n\t\t\t\t\t\tevents={toDoItems}\n\t\t\t\t\t\teventResize={handleEventResize}\n\t\t\t\t\t\teventDrop={handleEventDrop}\n\t\t\t\t\t\teventClick={handleEventClick}\n\t\t\t\t\t\tdateClick={handleDateClick}\n\t\t\t\t\t/>\n\t\t\t\t\t<ToDoInputForm\n\t\t\t\t\t\thandleItemDelete={handleItemDelete}\n\t\t\t\t\t\tcurrentUser={currentUser}\n\t\t\t\t\t\thandleItemSubmit={handleItemSubmit}\n\t\t\t\t\t\tusers={users}\n\t\t\t\t\t\teventToShow={eventToShow}\n\t\t\t\t\t\tsetEventToShow={setEventToShow}\n\t\t\t\t\t\topen={open}\n\t\t\t\t\t\thandleClose={handleClose}\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Layout>\n\t);\n};\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tcurrentUser: state.currentUser,\n\t\ttoDos: state.toDos,\n\t\tusers: state.users,\n\t};\n};\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tfetchData: (collectionsUrls) => dispatch(itemsFetchData(collectionsUrls)),\n\t\thandleItemDelete: (itemId, url) => dispatch(handleDelete(itemId, url)),\n\t\thandleItemSubmit: (item, url) => dispatch(handleItemFormSubmit(item, url)),\n\t};\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ToDosPage);\n"]},"metadata":{},"sourceType":"module"}