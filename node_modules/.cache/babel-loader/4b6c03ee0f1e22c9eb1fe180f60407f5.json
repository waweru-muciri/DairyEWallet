{"ast":null,"code":"import * as actionTypes from \"../assets/actionTypes\";\nimport * as contactsActions from \"./contacts\";\nimport * as salesActions from \"./sales\";\nimport * as productsActions from \"./products\";\nimport * as creditNotesActions from \"./CreditNotes\";\nimport { auth, firebaseStorage, firebaseFunctions } from \"../firebase\";\nimport { getDatabaseRef } from \"./firebaseHelpers\";\nconst setAdminCustomClaim = firebaseFunctions.httpsCallable('setAdminCustomClaim');\nexport const setDatabaseRefCustomClaim = firebaseFunctions.httpsCallable('setDatabaseRefCustomClaim');\nexport const createFirebaseUser = firebaseFunctions.httpsCallable('createFirebaseUser');\nexport const adminCreateFirebaseUser = firebaseFunctions.httpsCallable('adminCreateFirebaseUser');\nexport const updateFirebaseUser = firebaseFunctions.httpsCallable('updateFirebaseUser');\nexport const deleteFirebaseUsers = firebaseFunctions.httpsCallable('deleteFirebaseUsers');\nexport const sendInvoice = firebaseFunctions.httpsCallable('sendInvoice');\nexport function setCurrentUser(user) {\n  return {\n    type: actionTypes.SET_CURRENT_USER,\n    user\n  };\n}\nconst firebaseGetOptions = {\n  source: 'default'\n};\nexport const firebaseSignOutUser = () => {\n  return dispatch => {\n    auth.signOut().then(function () {}).catch(function (error) {// An error happened.\n    }).finally(() => {\n      dispatch(setCurrentUser(null));\n    });\n  };\n};\nexport const getFirebaseUserDetails = async userToken => {\n  const idTokenResult = await userToken.getIdTokenResult();\n  let isAdmin;\n  let tenantId;\n\n  if (idTokenResult.claims) {\n    isAdmin = idTokenResult.claims.admin;\n    tenantId = idTokenResult.claims.databaseRef;\n  }\n\n  const userDetails = {\n    displayName: userToken.displayName,\n    email: userToken.email,\n    emailVerified: userToken.emailVerified,\n    photoURL: userToken.photoURL,\n    uid: userToken.uid,\n    id: userToken.uid,\n    isAdmin: isAdmin,\n    tenant_id: tenantId\n  };\n  return userDetails;\n};\nexport const resetUserPasswordByEmail = async email => {\n  return await auth.sendPasswordResetEmail(email, {\n    handleCodeInApp: false,\n    url: 'https://rentgatepm.com/account-actions/'\n  });\n};\nexport const signUpWithEmailAndPassword = async userDetails => {\n  try {\n    const returnValue = await createFirebaseUser(userDetails);\n    const createdUser = returnValue.data;\n    await setAdminCustomClaim({\n      userId: createdUser.uid,\n      userProfile: userDetails\n    });\n  } catch (error) {\n    // Handle Errors here.\n    console.log(\"Actions error => \", error.message);\n    throw new Error(error);\n  }\n};\nexport const signInUserWithEmailAndPassword = async (email, password) => {\n  try {\n    const authCredential = await auth.signInWithEmailAndPassword(email, password);\n    const user = authCredential.user;\n    const userDetails = getFirebaseUserDetails(user);\n    return userDetails;\n  } catch (error) {\n    // Handle Errors here.\n    var errorCode = error.code;\n    var errorMessage = errorCode === \"auth/wrong-password\" ? \"Wrong password.\" : errorCode === \"auth/user-disabled\" ? \"User account disabled\" : errorCode === \"auth/invalid-email\" ? \"Email is Invalid\" : errorCode === \"auth/user-not-found\" ? \"No user found with email\" : \"Failed to connect to resource. Check your internet connection\";\n    throw new Error(errorMessage);\n  }\n};\nexport async function sendEmails(from_user, subject, email, recipients) {\n  var sendEmail = firebaseFunctions.httpsCallable('sendEmail');\n\n  try {\n    await sendEmail({\n      replyTo: from_user,\n      subject: subject,\n      email: email,\n      recipients: recipients\n    }); // Read result of the Cloud Function.\n  } catch (error) {\n    //getting the error details\n    var code = error.code;\n    var message = error.message;\n    var details = error.details;\n    console.error(`There was an error when calling the sendEmails Cloud Function.\\n \n        Error Code => ${code}. Error Message => ${message}. Error Details => ${details}`);\n  }\n}\nexport function itemsFetchData(collectionsUrls) {\n  return dispatch => {\n    dispatch(itemsIsLoading(true));\n    collectionsUrls.forEach(async url => {\n      try {\n        const snapshot = await getDatabaseRef().collection(url).get(firebaseGetOptions);\n        let fetchedItems = [];\n        snapshot.forEach(doc => {\n          let fetchedObject = Object.assign({}, doc.data(), {\n            id: doc.id\n          });\n          fetchedItems.push(fetchedObject);\n        });\n\n        switch (url) {\n          case \"contacts\":\n            dispatch(contactsActions.contactsFetchDataSuccess(fetchedItems));\n            break;\n\n          case \"sales\":\n            dispatch(salesActions.salesFetchDataSuccess(fetchedItems));\n            break;\n\n          case \"products\":\n            dispatch(productsActions.productsFetchDataSuccess(fetchedItems));\n            break;\n\n          case \"client-deposits\":\n            dispatch(creditNotesActions.creditNotesFetchDataSuccess(fetchedItems));\n            break;\n\n          default:\n            break;\n        }\n      } catch (error) {\n        dispatch(itemsHasErrored(error.message));\n        dispatch(itemsIsLoading(false));\n      }\n    });\n    dispatch(itemsIsLoading(false));\n  };\n}\nexport function setPaginationPage(index) {\n  return {\n    type: actionTypes.SET_PAGINATION_PAGE,\n    index\n  };\n}\nexport function toggleDrawer(toggleValue) {\n  return {\n    type: actionTypes.TOGGLE_DRAWER,\n    toggleValue\n  };\n}\nexport function itemsHasErrored(error) {\n  return {\n    type: actionTypes.ITEMS_HAS_ERRORED,\n    error\n  };\n}\nexport function itemsIsLoading(bool) {\n  return {\n    type: actionTypes.ITEMS_IS_LOADING,\n    isLoading: bool\n  };\n}\nexport function handleDelete(itemId, url) {\n  //send request to server to delete selected item\n  return async dispatch => {\n    try {\n      await getDatabaseRef().collection(url).doc(itemId).delete();\n\n      switch (url) {\n        case \"contacts\":\n          dispatch(contactsActions.deleteContact(itemId));\n          break;\n\n        case \"sales\":\n          dispatch(salesActions.deleteSale(itemId));\n          break;\n\n        case \"client-deposits\":\n          dispatch(creditNotesActions.deleteCreditNote(itemId));\n          break;\n\n        case \"products\":\n          dispatch(productsActions.deleteProduct(itemId));\n          break;\n\n        default:\n          break;\n      }\n    } catch (error) {\n      dispatch(itemsHasErrored(error.message));\n      dispatch(itemsIsLoading(false));\n      console.log(\"Failed to Delete Document!\", error);\n    }\n  };\n}\nexport function handleItemFormSubmit(data, url) {\n  if (typeof data.id === \"undefined\") {\n    delete data.id;\n  }\n\n  return dispatch => {\n    return new Promise(function (resolve, reject) {\n      dispatch(itemsIsLoading(true));\n      typeof data.id !== \"undefined\" ? //send post request to edit the item\n      getDatabaseRef().collection(url).doc(data.id).update(data).then(docRef => {\n        let modifiedObject = Object.assign({}, data);\n\n        switch (url) {\n          case \"contacts\":\n            dispatch(contactsActions.editContact(modifiedObject));\n            break;\n\n          case \"sales\":\n            dispatch(salesActions.editSale(modifiedObject));\n            break;\n\n          case \"products\":\n            dispatch(productsActions.editProduct(modifiedObject));\n            break;\n\n          case \"client-deposits\":\n            dispatch(creditNotesActions.editCreditNote(modifiedObject));\n            break;\n\n          default:\n            break;\n        }\n\n        resolve(data.id);\n      }).catch(error => {\n        dispatch(itemsHasErrored(error.message));\n        console.log(\"Error updating document => \", error.response);\n        reject(error);\n      }).finally(() => {\n        dispatch(itemsIsLoading(false));\n      }) : //send post to create item\n      getDatabaseRef().collection(url).add(data).then(docRef => {\n        let addedItem = Object.assign({}, data, {\n          id: docRef.id\n        });\n\n        switch (url) {\n          case \"contacts\":\n            dispatch(contactsActions.addContact(addedItem));\n            break;\n\n          case \"sales\":\n            dispatch(salesActions.addSale(addedItem));\n            break;\n\n          case \"products\":\n            dispatch(productsActions.addProduct(addedItem));\n            break;\n\n          case \"client-deposits\":\n            dispatch(creditNotesActions.addCreditNote(addedItem));\n            break;\n\n          default:\n            break;\n        }\n\n        resolve(docRef.id);\n      }).catch(error => {\n        dispatch(itemsHasErrored(error.message));\n        console.log(\"Error adding document => \", error.response);\n        reject(error);\n      }).finally(() => {\n        dispatch(itemsIsLoading(false));\n      });\n    });\n  };\n}","map":{"version":3,"sources":["/home/brianmuciri/Projects/farm-ledger-ld/src/actions/actions.js"],"names":["actionTypes","contactsActions","salesActions","productsActions","creditNotesActions","auth","firebaseStorage","firebaseFunctions","getDatabaseRef","setAdminCustomClaim","httpsCallable","setDatabaseRefCustomClaim","createFirebaseUser","adminCreateFirebaseUser","updateFirebaseUser","deleteFirebaseUsers","sendInvoice","setCurrentUser","user","type","SET_CURRENT_USER","firebaseGetOptions","source","firebaseSignOutUser","dispatch","signOut","then","catch","error","finally","getFirebaseUserDetails","userToken","idTokenResult","getIdTokenResult","isAdmin","tenantId","claims","admin","databaseRef","userDetails","displayName","email","emailVerified","photoURL","uid","id","tenant_id","resetUserPasswordByEmail","sendPasswordResetEmail","handleCodeInApp","url","signUpWithEmailAndPassword","returnValue","createdUser","data","userId","userProfile","console","log","message","Error","signInUserWithEmailAndPassword","password","authCredential","signInWithEmailAndPassword","errorCode","code","errorMessage","sendEmails","from_user","subject","recipients","sendEmail","replyTo","details","itemsFetchData","collectionsUrls","itemsIsLoading","forEach","snapshot","collection","get","fetchedItems","doc","fetchedObject","Object","assign","push","contactsFetchDataSuccess","salesFetchDataSuccess","productsFetchDataSuccess","creditNotesFetchDataSuccess","itemsHasErrored","setPaginationPage","index","SET_PAGINATION_PAGE","toggleDrawer","toggleValue","TOGGLE_DRAWER","ITEMS_HAS_ERRORED","bool","ITEMS_IS_LOADING","isLoading","handleDelete","itemId","delete","deleteContact","deleteSale","deleteCreditNote","deleteProduct","handleItemFormSubmit","Promise","resolve","reject","update","docRef","modifiedObject","editContact","editSale","editProduct","editCreditNote","response","add","addedItem","addContact","addSale","addProduct","addCreditNote"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,uBAA7B;AACA,OAAO,KAAKC,eAAZ,MAAiC,YAAjC;AACA,OAAO,KAAKC,YAAZ,MAA8B,SAA9B;AACA,OAAO,KAAKC,eAAZ,MAAiC,YAAjC;AACA,OAAO,KAAKC,kBAAZ,MAAoC,eAApC;AACA,SAASC,IAAT,EAAeC,eAAf,EAAgCC,iBAAhC,QAAyD,aAAzD;AACA,SAASC,cAAT,QAA+B,mBAA/B;AAGA,MAAMC,mBAAmB,GAAGF,iBAAiB,CAACG,aAAlB,CAAgC,qBAAhC,CAA5B;AACA,OAAO,MAAMC,yBAAyB,GAAGJ,iBAAiB,CAACG,aAAlB,CAAgC,2BAAhC,CAAlC;AACP,OAAO,MAAME,kBAAkB,GAAGL,iBAAiB,CAACG,aAAlB,CAAgC,oBAAhC,CAA3B;AACP,OAAO,MAAMG,uBAAuB,GAAGN,iBAAiB,CAACG,aAAlB,CAAgC,yBAAhC,CAAhC;AACP,OAAO,MAAMI,kBAAkB,GAAGP,iBAAiB,CAACG,aAAlB,CAAgC,oBAAhC,CAA3B;AACP,OAAO,MAAMK,mBAAmB,GAAGR,iBAAiB,CAACG,aAAlB,CAAgC,qBAAhC,CAA5B;AACP,OAAO,MAAMM,WAAW,GAAGT,iBAAiB,CAACG,aAAlB,CAAgC,aAAhC,CAApB;AAEP,OAAO,SAASO,cAAT,CAAwBC,IAAxB,EAA8B;AACjC,SAAO;AACHC,IAAAA,IAAI,EAAEnB,WAAW,CAACoB,gBADf;AAEHF,IAAAA;AAFG,GAAP;AAIH;AAED,MAAMG,kBAAkB,GAAG;AACvBC,EAAAA,MAAM,EAAE;AADe,CAA3B;AAIA,OAAO,MAAMC,mBAAmB,GAAG,MAAM;AACrC,SAAQC,QAAD,IAAc;AACjBnB,IAAAA,IAAI,CACCoB,OADL,GAEKC,IAFL,CAEU,YAAY,CAEjB,CAJL,EAKKC,KALL,CAKW,UAAUC,KAAV,EAAiB,CACpB;AACH,KAPL,EAOOC,OAPP,CAOe,MAAM;AACbL,MAAAA,QAAQ,CAACP,cAAc,CAAC,IAAD,CAAf,CAAR;AACH,KATL;AAUH,GAXD;AAYH,CAbM;AAeP,OAAO,MAAMa,sBAAsB,GAAG,MAAOC,SAAP,IAAqB;AACvD,QAAMC,aAAa,GAAG,MAAMD,SAAS,CAACE,gBAAV,EAA5B;AACA,MAAIC,OAAJ;AACA,MAAIC,QAAJ;;AACA,MAAIH,aAAa,CAACI,MAAlB,EAA0B;AACtBF,IAAAA,OAAO,GAAGF,aAAa,CAACI,MAAd,CAAqBC,KAA/B;AACAF,IAAAA,QAAQ,GAAGH,aAAa,CAACI,MAAd,CAAqBE,WAAhC;AACH;;AACD,QAAMC,WAAW,GAAG;AAChBC,IAAAA,WAAW,EAAET,SAAS,CAACS,WADP;AAEhBC,IAAAA,KAAK,EAAEV,SAAS,CAACU,KAFD;AAGhBC,IAAAA,aAAa,EAAEX,SAAS,CAACW,aAHT;AAIhBC,IAAAA,QAAQ,EAAEZ,SAAS,CAACY,QAJJ;AAKhBC,IAAAA,GAAG,EAAEb,SAAS,CAACa,GALC;AAMhBC,IAAAA,EAAE,EAAEd,SAAS,CAACa,GANE;AAOhBV,IAAAA,OAAO,EAAEA,OAPO;AAQhBY,IAAAA,SAAS,EAAEX;AARK,GAApB;AAUA,SAAOI,WAAP;AACH,CAnBM;AAqBP,OAAO,MAAMQ,wBAAwB,GAAG,MAAON,KAAP,IAAiB;AACrD,SAAO,MAAMpC,IAAI,CAAC2C,sBAAL,CAA4BP,KAA5B,EAAmC;AAAEQ,IAAAA,eAAe,EAAE,KAAnB;AAA0BC,IAAAA,GAAG,EAAE;AAA/B,GAAnC,CAAb;AACH,CAFM;AAIP,OAAO,MAAMC,0BAA0B,GAAG,MAAOZ,WAAP,IAAuB;AAC7D,MAAI;AACA,UAAMa,WAAW,GAAG,MAAMxC,kBAAkB,CAAC2B,WAAD,CAA5C;AACA,UAAMc,WAAW,GAAGD,WAAW,CAACE,IAAhC;AACA,UAAM7C,mBAAmB,CAAC;AAAE8C,MAAAA,MAAM,EAAEF,WAAW,CAACT,GAAtB;AAA2BY,MAAAA,WAAW,EAAEjB;AAAxC,KAAD,CAAzB;AACH,GAJD,CAIE,OAAOX,KAAP,EAAc;AACZ;AACA6B,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC9B,KAAK,CAAC+B,OAAvC;AACA,UAAM,IAAIC,KAAJ,CAAUhC,KAAV,CAAN;AACH;AACJ,CAVM;AAYP,OAAO,MAAMiC,8BAA8B,GAAG,OAAOpB,KAAP,EAAcqB,QAAd,KAA2B;AACrE,MAAI;AACA,UAAMC,cAAc,GAAG,MAAM1D,IAAI,CAAC2D,0BAAL,CAAgCvB,KAAhC,EAAuCqB,QAAvC,CAA7B;AACA,UAAM5C,IAAI,GAAG6C,cAAc,CAAC7C,IAA5B;AACA,UAAMqB,WAAW,GAAGT,sBAAsB,CAACZ,IAAD,CAA1C;AACA,WAAOqB,WAAP;AACH,GALD,CAMA,OAAOX,KAAP,EAAc;AACV;AACA,QAAIqC,SAAS,GAAGrC,KAAK,CAACsC,IAAtB;AACA,QAAIC,YAAY,GAAGF,SAAS,KAAK,qBAAd,GACb,iBADa,GAEbA,SAAS,KAAK,oBAAd,GACI,uBADJ,GAEIA,SAAS,KAAK,oBAAd,GACI,kBADJ,GAEIA,SAAS,KAAK,qBAAd,GACI,0BADJ,GAEI,+DARlB;AASA,UAAM,IAAIL,KAAJ,CAAUO,YAAV,CAAN;AACH;AAEJ,CAtBM;AAwBP,OAAO,eAAeC,UAAf,CAA0BC,SAA1B,EAAqCC,OAArC,EAA8C7B,KAA9C,EAAqD8B,UAArD,EAAiE;AACpE,MAAIC,SAAS,GAAGjE,iBAAiB,CAACG,aAAlB,CAAgC,WAAhC,CAAhB;;AACA,MAAI;AACA,UAAM8D,SAAS,CAAC;AAAEC,MAAAA,OAAO,EAAEJ,SAAX;AAAsBC,MAAAA,OAAO,EAAEA,OAA/B;AAAwC7B,MAAAA,KAAK,EAAEA,KAA/C;AAAsD8B,MAAAA,UAAU,EAAEA;AAAlE,KAAD,CAAf,CADA,CAEA;AACH,GAHD,CAGE,OAAO3C,KAAP,EAAc;AACZ;AACA,QAAIsC,IAAI,GAAGtC,KAAK,CAACsC,IAAjB;AACA,QAAIP,OAAO,GAAG/B,KAAK,CAAC+B,OAApB;AACA,QAAIe,OAAO,GAAG9C,KAAK,CAAC8C,OAApB;AACAjB,IAAAA,OAAO,CAAC7B,KAAR,CAAe;wBACCsC,IAAK,sBAAqBP,OAAQ,sBAAqBe,OAAQ,EAD/E;AAEH;AACJ;AAGD,OAAO,SAASC,cAAT,CAAwBC,eAAxB,EAAyC;AAC5C,SAAQpD,QAAD,IAAc;AACjBA,IAAAA,QAAQ,CAACqD,cAAc,CAAC,IAAD,CAAf,CAAR;AACAD,IAAAA,eAAe,CAACE,OAAhB,CAAwB,MAAO5B,GAAP,IAAe;AACnC,UAAI;AACA,cAAM6B,QAAQ,GAAG,MAAMvE,cAAc,GAAGwE,UAAjB,CAA4B9B,GAA5B,EAAiC+B,GAAjC,CAAqC5D,kBAArC,CAAvB;AACA,YAAI6D,YAAY,GAAG,EAAnB;AACAH,QAAAA,QAAQ,CAACD,OAAT,CAAkBK,GAAD,IAAS;AACtB,cAAIC,aAAa,GAAGC,MAAM,CAACC,MAAP,CAChB,EADgB,EAEhBH,GAAG,CAAC7B,IAAJ,EAFgB,EAGhB;AACIT,YAAAA,EAAE,EAAEsC,GAAG,CAACtC;AADZ,WAHgB,CAApB;AAOAqC,UAAAA,YAAY,CAACK,IAAb,CAAkBH,aAAlB;AACH,SATD;;AAUA,gBAAQlC,GAAR;AAEI,eAAK,UAAL;AACI1B,YAAAA,QAAQ,CAACvB,eAAe,CAACuF,wBAAhB,CAAyCN,YAAzC,CAAD,CAAR;AACA;;AAEJ,eAAK,OAAL;AACI1D,YAAAA,QAAQ,CAACtB,YAAY,CAACuF,qBAAb,CAAmCP,YAAnC,CAAD,CAAR;AACA;;AAEJ,eAAK,UAAL;AACI1D,YAAAA,QAAQ,CAACrB,eAAe,CAACuF,wBAAhB,CAAyCR,YAAzC,CAAD,CAAR;AACA;;AAEJ,eAAK,iBAAL;AACI1D,YAAAA,QAAQ,CAACpB,kBAAkB,CAACuF,2BAAnB,CAA+CT,YAA/C,CAAD,CAAR;AACA;;AAEJ;AACI;AAnBR;AAqBH,OAlCD,CAkCE,OAAOtD,KAAP,EAAc;AACZJ,QAAAA,QAAQ,CAACoE,eAAe,CAAChE,KAAK,CAAC+B,OAAP,CAAhB,CAAR;AACAnC,QAAAA,QAAQ,CAACqD,cAAc,CAAC,KAAD,CAAf,CAAR;AACH;AACJ,KAvCD;AAwCArD,IAAAA,QAAQ,CAACqD,cAAc,CAAC,KAAD,CAAf,CAAR;AACH,GA3CD;AA4CH;AAED,OAAO,SAASgB,iBAAT,CAA2BC,KAA3B,EAAkC;AACrC,SAAO;AACH3E,IAAAA,IAAI,EAAEnB,WAAW,CAAC+F,mBADf;AAEHD,IAAAA;AAFG,GAAP;AAIH;AAED,OAAO,SAASE,YAAT,CAAsBC,WAAtB,EAAmC;AACtC,SAAO;AACH9E,IAAAA,IAAI,EAAEnB,WAAW,CAACkG,aADf;AAEHD,IAAAA;AAFG,GAAP;AAIH;AAED,OAAO,SAASL,eAAT,CAAyBhE,KAAzB,EAAgC;AACnC,SAAO;AACHT,IAAAA,IAAI,EAAEnB,WAAW,CAACmG,iBADf;AAEHvE,IAAAA;AAFG,GAAP;AAIH;AAED,OAAO,SAASiD,cAAT,CAAwBuB,IAAxB,EAA8B;AACjC,SAAO;AACHjF,IAAAA,IAAI,EAAEnB,WAAW,CAACqG,gBADf;AAEHC,IAAAA,SAAS,EAAEF;AAFR,GAAP;AAIH;AAED,OAAO,SAASG,YAAT,CAAsBC,MAAtB,EAA8BtD,GAA9B,EAAmC;AACtC;AACA,SAAO,MAAO1B,QAAP,IAAoB;AACvB,QAAI;AACA,YAAMhB,cAAc,GACfwE,UADC,CACU9B,GADV,EAEDiC,GAFC,CAEGqB,MAFH,EAGDC,MAHC,EAAN;;AAIA,cAAQvD,GAAR;AAEI,aAAK,UAAL;AACI1B,UAAAA,QAAQ,CAACvB,eAAe,CAACyG,aAAhB,CAA8BF,MAA9B,CAAD,CAAR;AAEA;;AAEJ,aAAK,OAAL;AACIhF,UAAAA,QAAQ,CAACtB,YAAY,CAACyG,UAAb,CAAwBH,MAAxB,CAAD,CAAR;AAEA;;AAEJ,aAAK,iBAAL;AACIhF,UAAAA,QAAQ,CAACpB,kBAAkB,CAACwG,gBAAnB,CAAoCJ,MAApC,CAAD,CAAR;AAEA;;AAEJ,aAAK,UAAL;AACIhF,UAAAA,QAAQ,CAACrB,eAAe,CAAC0G,aAAhB,CAA8BL,MAA9B,CAAD,CAAR;AAEA;;AAEJ;AACI;AAvBR;AAyBH,KA9BD,CA+BA,OAAO5E,KAAP,EAAc;AACVJ,MAAAA,QAAQ,CAACoE,eAAe,CAAChE,KAAK,CAAC+B,OAAP,CAAhB,CAAR;AACAnC,MAAAA,QAAQ,CAACqD,cAAc,CAAC,KAAD,CAAf,CAAR;AACApB,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0C9B,KAA1C;AACH;AACJ,GArCD;AAsCH;AAED,OAAO,SAASkF,oBAAT,CAA8BxD,IAA9B,EAAoCJ,GAApC,EAAyC;AAC5C,MAAI,OAAOI,IAAI,CAACT,EAAZ,KAAmB,WAAvB,EAAoC;AAChC,WAAOS,IAAI,CAACT,EAAZ;AACH;;AACD,SAAQrB,QAAD,IAAc;AACjB,WAAO,IAAIuF,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC1CzF,MAAAA,QAAQ,CAACqD,cAAc,CAAC,IAAD,CAAf,CAAR;AACA,aAAOvB,IAAI,CAACT,EAAZ,KAAmB,WAAnB,GACM;AACFrC,MAAAA,cAAc,GACTwE,UADL,CACgB9B,GADhB,EAEKiC,GAFL,CAES7B,IAAI,CAACT,EAFd,EAGKqE,MAHL,CAGY5D,IAHZ,EAIK5B,IAJL,CAIWyF,MAAD,IAAY;AACd,YAAIC,cAAc,GAAG/B,MAAM,CAACC,MAAP,CACjB,EADiB,EAEjBhC,IAFiB,CAArB;;AAIA,gBAAQJ,GAAR;AAEI,eAAK,UAAL;AACI1B,YAAAA,QAAQ,CAACvB,eAAe,CAACoH,WAAhB,CAA4BD,cAA5B,CAAD,CAAR;AACA;;AAEJ,eAAK,OAAL;AACI5F,YAAAA,QAAQ,CAACtB,YAAY,CAACoH,QAAb,CAAsBF,cAAtB,CAAD,CAAR;AACA;;AAEJ,eAAK,UAAL;AACI5F,YAAAA,QAAQ,CAACrB,eAAe,CAACoH,WAAhB,CAA4BH,cAA5B,CAAD,CAAR;AACA;;AAEJ,eAAK,iBAAL;AACI5F,YAAAA,QAAQ,CAACpB,kBAAkB,CAACoH,cAAnB,CAAkCJ,cAAlC,CAAD,CAAR;AACA;;AAEJ;AACI;AAnBR;;AAqBAJ,QAAAA,OAAO,CAAC1D,IAAI,CAACT,EAAN,CAAP;AACH,OA/BL,EAgCKlB,KAhCL,CAgCYC,KAAD,IAAW;AACdJ,QAAAA,QAAQ,CAACoE,eAAe,CAAChE,KAAK,CAAC+B,OAAP,CAAhB,CAAR;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2C9B,KAAK,CAAC6F,QAAjD;AACAR,QAAAA,MAAM,CAACrF,KAAD,CAAN;AACH,OApCL,EAoCOC,OApCP,CAoCe,MAAM;AACbL,QAAAA,QAAQ,CAACqD,cAAc,CAAC,KAAD,CAAf,CAAR;AACH,OAtCL,CAFJ,GAyCM;AACFrE,MAAAA,cAAc,GACbwE,UADD,CACY9B,GADZ,EAECwE,GAFD,CAEKpE,IAFL,EAGC5B,IAHD,CAGOyF,MAAD,IAAY;AACV,YAAIQ,SAAS,GAAGtC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBhC,IAAlB,EAAwB;AACpCT,UAAAA,EAAE,EAAEsE,MAAM,CAACtE;AADyB,SAAxB,CAAhB;;AAGA,gBAAQK,GAAR;AAEI,eAAK,UAAL;AACI1B,YAAAA,QAAQ,CAACvB,eAAe,CAAC2H,UAAhB,CAA2BD,SAA3B,CAAD,CAAR;AACA;;AAEJ,eAAK,OAAL;AACInG,YAAAA,QAAQ,CAACtB,YAAY,CAAC2H,OAAb,CAAqBF,SAArB,CAAD,CAAR;AACA;;AAEJ,eAAK,UAAL;AACInG,YAAAA,QAAQ,CAACrB,eAAe,CAAC2H,UAAhB,CAA2BH,SAA3B,CAAD,CAAR;AACA;;AAEJ,eAAK,iBAAL;AACInG,YAAAA,QAAQ,CAACpB,kBAAkB,CAAC2H,aAAnB,CAAiCJ,SAAjC,CAAD,CAAR;AACA;;AAEJ;AACI;AAnBR;;AAqBAX,QAAAA,OAAO,CAACG,MAAM,CAACtE,EAAR,CAAP;AACH,OA7BL,EA8BKlB,KA9BL,CA8BYC,KAAD,IAAW;AACdJ,QAAAA,QAAQ,CAACoE,eAAe,CAAChE,KAAK,CAAC+B,OAAP,CAAhB,CAAR;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyC9B,KAAK,CAAC6F,QAA/C;AACAR,QAAAA,MAAM,CAACrF,KAAD,CAAN;AACH,OAlCL,EAkCOC,OAlCP,CAkCe,MAAM;AACbL,QAAAA,QAAQ,CAACqD,cAAc,CAAC,KAAD,CAAf,CAAR;AACH,OApCL,CA1CJ;AA+EH,KAjFM,CAAP;AAkFH,GAnFD;AAoFH","sourcesContent":["import * as actionTypes from \"../assets/actionTypes\";\nimport * as contactsActions from \"./contacts\";\nimport * as salesActions from \"./sales\";\nimport * as productsActions from \"./products\";\nimport * as creditNotesActions from \"./CreditNotes\";\nimport { auth, firebaseStorage, firebaseFunctions } from \"../firebase\";\nimport { getDatabaseRef } from \"./firebaseHelpers\";\n\n\nconst setAdminCustomClaim = firebaseFunctions.httpsCallable('setAdminCustomClaim');\nexport const setDatabaseRefCustomClaim = firebaseFunctions.httpsCallable('setDatabaseRefCustomClaim');\nexport const createFirebaseUser = firebaseFunctions.httpsCallable('createFirebaseUser');\nexport const adminCreateFirebaseUser = firebaseFunctions.httpsCallable('adminCreateFirebaseUser');\nexport const updateFirebaseUser = firebaseFunctions.httpsCallable('updateFirebaseUser');\nexport const deleteFirebaseUsers = firebaseFunctions.httpsCallable('deleteFirebaseUsers');\nexport const sendInvoice = firebaseFunctions.httpsCallable('sendInvoice');\n\nexport function setCurrentUser(user) {\n    return {\n        type: actionTypes.SET_CURRENT_USER,\n        user,\n    };\n}\n\nconst firebaseGetOptions = {\n    source: 'default'\n};\n\nexport const firebaseSignOutUser = () => {\n    return (dispatch) => {\n        auth\n            .signOut()\n            .then(function () {\n\n            })\n            .catch(function (error) {\n                // An error happened.\n            }).finally(() => {\n                dispatch(setCurrentUser(null))\n            })\n    }\n}\n\nexport const getFirebaseUserDetails = async (userToken) => {\n    const idTokenResult = await userToken.getIdTokenResult()\n    let isAdmin;\n    let tenantId;\n    if (idTokenResult.claims) {\n        isAdmin = idTokenResult.claims.admin\n        tenantId = idTokenResult.claims.databaseRef\n    }\n    const userDetails = {\n        displayName: userToken.displayName,\n        email: userToken.email,\n        emailVerified: userToken.emailVerified,\n        photoURL: userToken.photoURL,\n        uid: userToken.uid,\n        id: userToken.uid,\n        isAdmin: isAdmin,\n        tenant_id: tenantId\n    };\n    return userDetails;\n}\n\nexport const resetUserPasswordByEmail = async (email) => {\n    return await auth.sendPasswordResetEmail(email, { handleCodeInApp: false, url: 'https://rentgatepm.com/account-actions/' })\n}\n\nexport const signUpWithEmailAndPassword = async (userDetails) => {\n    try {\n        const returnValue = await createFirebaseUser(userDetails)\n        const createdUser = returnValue.data\n        await setAdminCustomClaim({ userId: createdUser.uid, userProfile: userDetails })\n    } catch (error) {\n        // Handle Errors here.\n        console.log(\"Actions error => \", error.message)\n        throw new Error(error);\n    }\n};\n\nexport const signInUserWithEmailAndPassword = async (email, password) => {\n    try {\n        const authCredential = await auth.signInWithEmailAndPassword(email, password);\n        const user = authCredential.user;\n        const userDetails = getFirebaseUserDetails(user)\n        return userDetails;\n    }\n    catch (error) {\n        // Handle Errors here.\n        var errorCode = error.code;\n        var errorMessage = errorCode === \"auth/wrong-password\"\n            ? \"Wrong password.\"\n            : errorCode === \"auth/user-disabled\"\n                ? \"User account disabled\"\n                : errorCode === \"auth/invalid-email\"\n                    ? \"Email is Invalid\"\n                    : errorCode === \"auth/user-not-found\"\n                        ? \"No user found with email\"\n                        : \"Failed to connect to resource. Check your internet connection\";\n        throw new Error(errorMessage);\n    }\n\n}\n\nexport async function sendEmails(from_user, subject, email, recipients) {\n    var sendEmail = firebaseFunctions.httpsCallable('sendEmail');\n    try {\n        await sendEmail({ replyTo: from_user, subject: subject, email: email, recipients: recipients })\n        // Read result of the Cloud Function.\n    } catch (error) {\n        //getting the error details\n        var code = error.code;\n        var message = error.message;\n        var details = error.details;\n        console.error(`There was an error when calling the sendEmails Cloud Function.\\n \n        Error Code => ${code}. Error Message => ${message}. Error Details => ${details}`);\n    }\n}\n\n\nexport function itemsFetchData(collectionsUrls) {\n    return (dispatch) => {\n        dispatch(itemsIsLoading(true));\n        collectionsUrls.forEach(async (url) => {\n            try {\n                const snapshot = await getDatabaseRef().collection(url).get(firebaseGetOptions)\n                let fetchedItems = []\n                snapshot.forEach((doc) => {\n                    let fetchedObject = Object.assign(\n                        {},\n                        doc.data(),\n                        {\n                            id: doc.id,\n                        }\n                    );\n                    fetchedItems.push(fetchedObject)\n                });\n                switch (url) {\n  \n                    case \"contacts\":\n                        dispatch(contactsActions.contactsFetchDataSuccess(fetchedItems));\n                        break;\n\n                    case \"sales\":\n                        dispatch(salesActions.salesFetchDataSuccess(fetchedItems));\n                        break;\n\n                    case \"products\":\n                        dispatch(productsActions.productsFetchDataSuccess(fetchedItems));\n                        break;\n\n                    case \"client-deposits\":\n                        dispatch(creditNotesActions.creditNotesFetchDataSuccess(fetchedItems));\n                        break;\n\n                    default:\n                        break;\n                }\n            } catch (error) {\n                dispatch(itemsHasErrored(error.message))\n                dispatch(itemsIsLoading(false));\n            }\n        })\n        dispatch(itemsIsLoading(false));\n    }\n}\n\nexport function setPaginationPage(index) {\n    return {\n        type: actionTypes.SET_PAGINATION_PAGE,\n        index,\n    };\n}\n\nexport function toggleDrawer(toggleValue) {\n    return {\n        type: actionTypes.TOGGLE_DRAWER,\n        toggleValue,\n    };\n}\n\nexport function itemsHasErrored(error) {\n    return {\n        type: actionTypes.ITEMS_HAS_ERRORED,\n        error,\n    };\n}\n\nexport function itemsIsLoading(bool) {\n    return {\n        type: actionTypes.ITEMS_IS_LOADING,\n        isLoading: bool,\n    };\n}\n\nexport function handleDelete(itemId, url) {\n    //send request to server to delete selected item\n    return async (dispatch) => {\n        try {\n            await getDatabaseRef()\n                .collection(url)\n                .doc(itemId)\n                .delete();\n            switch (url) {\n\n                case \"contacts\":\n                    dispatch(contactsActions.deleteContact(itemId)\n                    );\n                    break;\n\n                case \"sales\":\n                    dispatch(salesActions.deleteSale(itemId)\n                    );\n                    break;\n            \n                case \"client-deposits\":\n                    dispatch(creditNotesActions.deleteCreditNote(itemId)\n                    );\n                    break;\n\n                case \"products\":\n                    dispatch(productsActions.deleteProduct(itemId)\n                    );\n                    break;\n\n                default:\n                    break;\n            }\n        }\n        catch (error) {\n            dispatch(itemsHasErrored(error.message))\n            dispatch(itemsIsLoading(false));\n            console.log(\"Failed to Delete Document!\", error);\n        }\n    }\n}\n\nexport function handleItemFormSubmit(data, url) {\n    if (typeof data.id === \"undefined\") {\n        delete data.id;\n    }\n    return (dispatch) => {\n        return new Promise(function (resolve, reject) {\n            dispatch(itemsIsLoading(true))\n            typeof data.id !== \"undefined\"\n                ? //send post request to edit the item\n                getDatabaseRef()\n                    .collection(url)\n                    .doc(data.id)\n                    .update(data)\n                    .then((docRef) => {\n                        let modifiedObject = Object.assign(\n                            {},\n                            data,\n                        );\n                        switch (url) {\n                         \n                            case \"contacts\":\n                                dispatch(contactsActions.editContact(modifiedObject));\n                                break;\n\n                            case \"sales\":\n                                dispatch(salesActions.editSale(modifiedObject));\n                                break;\n\n                            case \"products\":\n                                dispatch(productsActions.editProduct(modifiedObject));\n                                break;\n\n                            case \"client-deposits\":\n                                dispatch(creditNotesActions.editCreditNote(modifiedObject));\n                                break;\n\n                            default:\n                                break;\n                        }\n                        resolve(data.id);\n                    })\n                    .catch((error) => {\n                        dispatch(itemsHasErrored(error.message))\n                        console.log(\"Error updating document => \", error.response);\n                        reject(error)\n                    }).finally(() => {\n                        dispatch(itemsIsLoading(false));\n                    })\n                : //send post to create item\n                getDatabaseRef()\n                .collection(url)\n                .add(data)\n                .then((docRef) => {\n                        let addedItem = Object.assign({}, data, {\n                            id: docRef.id,\n                        });\n                        switch (url) {\n                           \n                            case \"contacts\":\n                                dispatch(contactsActions.addContact(addedItem));\n                                break;\n                          \n                            case \"sales\":\n                                dispatch(salesActions.addSale(addedItem));\n                                break;\n\n                            case \"products\":\n                                dispatch(productsActions.addProduct(addedItem));\n                                break;\n\n                            case \"client-deposits\":\n                                dispatch(creditNotesActions.addCreditNote(addedItem));\n                                break;\n\n                            default:\n                                break;\n                        }\n                        resolve(docRef.id);\n                    })\n                    .catch((error) => {\n                        dispatch(itemsHasErrored(error.message))\n                        console.log(\"Error adding document => \", error.response);\n                        reject(error)\n                    }).finally(() => {\n                        dispatch(itemsIsLoading(false));\n                    });\n        })\n    }\n}\n"]},"metadata":{},"sourceType":"module"}