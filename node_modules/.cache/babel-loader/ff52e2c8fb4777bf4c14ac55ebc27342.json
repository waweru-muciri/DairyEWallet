{"ast":null,"code":"var _jsxFileName = \"/home/brianmuciri/Projects/farm-ledger-ld/src/Routes/Deposits.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { Grid, TextField, Button, MenuItem, Box } from \"@material-ui/core\";\nimport { handleDelete } from \"../actions/actions\";\nimport CommonTable from \"../components/table/commonTable\";\nimport { withRouter } from \"react-router-dom\";\nimport { commonStyles } from \"../components/commonStyles\";\nimport { connect } from \"react-redux\";\nimport ExportToExcelBtn from \"../components/ExportToExcelBtn\";\nimport Layout from \"../components/PrivateLayout\";\nimport PageHeading from \"../components/PageHeading\";\nimport PrintArrayToPdf from \"../components/PrintArrayToPdfBtn\";\nimport { parse } from \"date-fns\";\nconst customerAccountDepositsTableHeadCells = [{\n  id: \"deposit_date\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Date\"\n}, {\n  id: \"customer_name\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Customer\"\n}, {\n  id: \"Deposit Date\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Deposit Date\"\n}, {\n  id: \"deposit_amount\",\n  numeric: true,\n  disablePadding: true,\n  label: \"Deposit Amount(Ksh)\"\n}, {\n  id: \"edit\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Edit\"\n}, {\n  id: \"delete\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Delete\"\n}];\n\nlet DepositsPage = ({\n  customerAccountDeposits,\n  handleItemDelete,\n  contacts,\n  match\n}) => {\n  const classes = commonStyles();\n  const [accountDepositItems, setAccountDepositItems] = useState([]);\n  const [filteredAccountDepositItems, setFilteredAccountDepositItems] = useState([]);\n  const [fromDateFilter, setFromDateFilter] = useState(\"\");\n  const [toDateFilter, setToDateFilter] = useState(\"\");\n  const [contactFilter, setClientFilter] = useState(\"all\");\n  const [selected, setSelected] = useState([]);\n  useEffect(() => {\n    setAccountDepositItems(customerAccountDeposits);\n    setFilteredAccountDepositItems(customerAccountDeposits);\n  }, [customerAccountDeposits]);\n\n  const handleSearchFormSubmit = event => {\n    event.preventDefault(); //filter the customerAccountDeposits here according to search criteria\n\n    const filteredDeposits = customerAccountDeposits.filter(({\n      deposit_date,\n      contact_id\n    }) => (!fromDateFilter ? true : deposit_date >= fromDateFilter) && (!toDateFilter ? true : deposit_date <= toDateFilter) && (contactFilter === \"all\" ? true : contact_id === contactFilter));\n    setFilteredAccountDepositItems(filteredDeposits);\n  };\n\n  const resetSearchForm = event => {\n    event.preventDefault();\n    setFromDateFilter(\"\");\n    setToDateFilter(\"\");\n    setClientFilter(\"all\");\n  };\n\n  return /*#__PURE__*/React.createElement(Layout, {\n    pageTitle: \"Client Deposits\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PageHeading, {\n    text: \"Client Deposits\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    item: true,\n    alignItems: \"center\",\n    direction: \"row\",\n    key: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"medium\",\n    startIcon: /*#__PURE__*/React.createElement(AddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 40\n      }\n    }),\n    component: Link,\n    to: `${match.url}/new`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }, \"NEW\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"medium\",\n    startIcon: /*#__PURE__*/React.createElement(EditIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 40\n      }\n    }),\n    disabled: !selected.length,\n    component: Link,\n    to: `${match.url}/${selected[0]}/edit`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  }, \"Edit\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(PrintArrayToPdf, {\n    disabled: !selected.length,\n    reportName: 'Deposits Records',\n    reportTitle: 'Deposits Data',\n    headCells: customerAccountDepositsTableHeadCells,\n    dataToPrint: accountDepositItems.filter(({\n      id\n    }) => selected.includes(id)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    border: 1,\n    borderRadius: \"borderRadius\",\n    borderColor: \"grey.400\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    id: \"contactSearchForm\",\n    onSubmit: handleSearchFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"center\",\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    md: 6,\n    spacing: 1,\n    justify: \"center\",\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    type: \"date\",\n    id: \"from_date_filter\",\n    name: \"from_date_filter\",\n    label: \"From Date\",\n    value: fromDateFilter,\n    onChange: event => {\n      setFromDateFilter(event.target.value);\n    },\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    type: \"date\",\n    name: \"to_date_filter\",\n    label: \"To Date\",\n    id: \"to_date_filter\",\n    onChange: event => {\n      setToDateFilter(event.target.value);\n    },\n    value: toDateFilter,\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    select: true,\n    variant: \"outlined\",\n    name: \"client_filter\",\n    label: \"Client\",\n    id: \"client_filter\",\n    onChange: event => {\n      setClientFilter(event.target.value);\n    },\n    value: contactFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    key: \"all\",\n    value: \"all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 41\n    }\n  }, \"All\"), contacts.map((contact, index) => /*#__PURE__*/React.createElement(MenuItem, {\n    key: index,\n    value: contact.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 49\n    }\n  }, contact.first_name, \" \", contact.last_name))))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    item: true,\n    justify: \"flex-end\",\n    alignItems: \"center\",\n    direction: \"row\",\n    key: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: event => handleSearchFormSubmit(event),\n    type: \"submit\",\n    form: \"contactSearchForm\",\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"medium\",\n    startIcon: /*#__PURE__*/React.createElement(SearchIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 52\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 37\n    }\n  }, \"SEARCH\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: event => resetSearchForm(event),\n    type: \"reset\",\n    form: \"contactSearchForm\",\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"medium\",\n    startIcon: /*#__PURE__*/React.createElement(UndoIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 52\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 37\n    }\n  }, \"RESET\")))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CommonTable, {\n    selected: selected,\n    setSelected: setSelected,\n    rows: filteredAccountDepositItems,\n    headCells: customerAccountDepositsTableHeadCells,\n    handleDelete: handleItemDelete,\n    deleteUrl: \"client-deposits\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 21\n    }\n  }))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    customerAccountDeposits: state.customerAccountDeposits.map(clientDeposit => {\n      const contactWithDeposit = state.contacts.find(({\n        id\n      }) => id === clientDeposit.contact_id) || {};\n      return Object.assign({}, clientDeposit, {\n        customer_name: `${contactWithDeposit.first_name} ${contactWithDeposit.last_name}`\n      });\n    }).sort((clientDeposit1, clientDeposit2) => parse(clientDeposit2.deposit_date, 'yyyy-MM-dd', new Date()) - parse(clientDeposit1.deposit_date, 'yyyy-MM-dd', new Date())),\n    contacts: state.contacts\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleItemDelete: (itemId, url) => dispatch(handleDelete(itemId, url))\n  };\n};\n\nDepositsPage = connect(mapStateToProps, mapDispatchToProps)(DepositsPage);\nexport default withRouter(DepositsPage);","map":{"version":3,"sources":["/home/brianmuciri/Projects/farm-ledger-ld/src/Routes/Deposits.js"],"names":["React","useEffect","useState","Link","EditIcon","SearchIcon","UndoIcon","AddIcon","Grid","TextField","Button","MenuItem","Box","handleDelete","CommonTable","withRouter","commonStyles","connect","ExportToExcelBtn","Layout","PageHeading","PrintArrayToPdf","parse","customerAccountDepositsTableHeadCells","id","numeric","disablePadding","label","DepositsPage","customerAccountDeposits","handleItemDelete","contacts","match","classes","accountDepositItems","setAccountDepositItems","filteredAccountDepositItems","setFilteredAccountDepositItems","fromDateFilter","setFromDateFilter","toDateFilter","setToDateFilter","contactFilter","setClientFilter","selected","setSelected","handleSearchFormSubmit","event","preventDefault","filteredDeposits","filter","deposit_date","contact_id","resetSearchForm","url","length","includes","form","target","value","shrink","map","contact","index","first_name","last_name","mapStateToProps","state","clientDeposit","contactWithDeposit","find","Object","assign","customer_name","sort","clientDeposit1","clientDeposit2","Date","mapDispatchToProps","dispatch","itemId"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { Grid, TextField, Button, MenuItem, Box } from \"@material-ui/core\";\nimport { handleDelete } from \"../actions/actions\";\nimport CommonTable from \"../components/table/commonTable\";\nimport { withRouter } from \"react-router-dom\";\nimport { commonStyles } from \"../components/commonStyles\";\nimport { connect } from \"react-redux\";\nimport ExportToExcelBtn from \"../components/ExportToExcelBtn\";\nimport Layout from \"../components/PrivateLayout\";\nimport PageHeading from \"../components/PageHeading\";\nimport PrintArrayToPdf from \"../components/PrintArrayToPdfBtn\";\nimport { parse } from \"date-fns\";\n\n\n\nconst customerAccountDepositsTableHeadCells = [\n    { id: \"deposit_date\", numeric: false, disablePadding: true, label: \"Date\", },\n    { id: \"customer_name\", numeric: false, disablePadding: true, label: \"Customer\" },\n    { id: \"Deposit Date\", numeric: false, disablePadding: true, label: \"Deposit Date\" },\n    { id: \"deposit_amount\", numeric: true, disablePadding: true, label: \"Deposit Amount(Ksh)\" },\n    { id: \"edit\", numeric: false, disablePadding: true, label: \"Edit\" },\n    { id: \"delete\", numeric: false, disablePadding: true, label: \"Delete\" },\n\n];\n\nlet DepositsPage = ({\n    customerAccountDeposits,\n    handleItemDelete,\n    contacts,\n    match,\n}) => {\n    const classes = commonStyles();\n    const [accountDepositItems, setAccountDepositItems] = useState([]);\n    const [filteredAccountDepositItems, setFilteredAccountDepositItems] = useState([]);\n    const [fromDateFilter, setFromDateFilter] = useState(\"\");\n    const [toDateFilter, setToDateFilter] = useState(\"\");\n    const [contactFilter, setClientFilter] = useState(\"all\");\n    const [selected, setSelected] = useState([]);\n\n\n    useEffect(() => {\n        setAccountDepositItems(customerAccountDeposits);\n        setFilteredAccountDepositItems(customerAccountDeposits);\n    }, [customerAccountDeposits]);\n\n    const handleSearchFormSubmit = (event) => {\n        event.preventDefault();\n        //filter the customerAccountDeposits here according to search criteria\n        const filteredDeposits = customerAccountDeposits\n            .filter(({ deposit_date, contact_id }) =>\n                (!fromDateFilter ? true : deposit_date >= fromDateFilter)\n                && (!toDateFilter ? true : deposit_date <= toDateFilter)\n                && (contactFilter === \"all\" ? true : contact_id === contactFilter)\n            )\n        setFilteredAccountDepositItems(filteredDeposits);\n    };\n\n    const resetSearchForm = (event) => {\n        event.preventDefault();\n        setFromDateFilter(\"\");\n        setToDateFilter(\"\");\n        setClientFilter(\"all\");\n    };\n\n    return (\n        <Layout pageTitle=\"Client Deposits\">\n            <Grid\n                container\n                spacing={3}\n                alignItems=\"center\"\n            >\n                <Grid item lg={12}>\n                    <PageHeading text=\"Client Deposits\" />\n                </Grid>\n                <Grid\n                    container\n                    spacing={2}\n                    item\n                    alignItems=\"center\"\n                    direction=\"row\"\n                    key={1}\n                >\n                    <Grid item>\n                        <Button\n                            type=\"button\"\n                            color=\"primary\"\n                            variant=\"contained\"\n                            size=\"medium\"\n                            startIcon={<AddIcon />}\n                            component={Link}\n                            to={`${match.url}/new`}\n                        >\n                            NEW\n                        </Button>\n                    </Grid>\n                    <Grid item>\n                        <Button\n                            type=\"button\"\n                            color=\"primary\"\n                            variant=\"contained\"\n                            size=\"medium\"\n                            startIcon={<EditIcon />}\n                            disabled={!selected.length}\n                            component={Link}\n                            to={`${match.url}/${selected[0]}/edit`}\n                        >\n                            Edit\n                        </Button>\n                    </Grid>\n                    <Grid item>\n                        <PrintArrayToPdf\n                            disabled={!selected.length}\n                            reportName={'Deposits Records'}\n                            reportTitle={'Deposits Data'}\n                            headCells={customerAccountDepositsTableHeadCells}\n                            dataToPrint={accountDepositItems.filter(({ id }) => selected.includes(id))}\n                        />\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    <Box\n                        border={1}\n                        borderRadius=\"borderRadius\"\n                        borderColor=\"grey.400\"\n                    >\n                        <form\n                            className={classes.form}\n                            id=\"contactSearchForm\"\n                            onSubmit={handleSearchFormSubmit}\n                        >\n                            <Grid\n                                container\n                                spacing={2}\n                                justify=\"center\"\n                                direction=\"row\"\n                            >\n                                <Grid\n                                    container\n                                    item\n                                    xs={12} md={6}\n                                    spacing={1}\n                                    justify=\"center\"\n                                    direction=\"row\"\n                                >\n                                    <Grid item xs={12} md={6}>\n                                        <TextField\n                                            fullWidth\n                                            variant=\"outlined\"\n                                            type=\"date\"\n                                            id=\"from_date_filter\"\n                                            name=\"from_date_filter\"\n                                            label=\"From Date\"\n                                            value={fromDateFilter}\n                                            onChange={(event) => {\n                                                setFromDateFilter(\n                                                    event.target.value\n                                                );\n                                            }}\n                                            InputLabelProps={{ shrink: true }}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} md={6}>\n                                        <TextField\n                                            fullWidth\n                                            variant=\"outlined\"\n                                            type=\"date\"\n                                            name=\"to_date_filter\"\n                                            label=\"To Date\"\n                                            id=\"to_date_filter\"\n                                            onChange={(event) => {\n                                                setToDateFilter(event.target.value);\n                                            }}\n                                            value={toDateFilter}\n                                            InputLabelProps={{ shrink: true }}\n                                        />\n                                    </Grid>\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        fullWidth\n                                        select\n                                        variant=\"outlined\"\n                                        name=\"client_filter\"\n                                        label=\"Client\"\n                                        id=\"client_filter\"\n                                        onChange={(event) => {\n                                            setClientFilter(\n                                                event.target.value\n                                            );\n                                        }}\n                                        value={contactFilter}\n                                    >\n                                        <MenuItem key={\"all\"} value={\"all\"}>All</MenuItem>\n                                        {contacts.map(\n                                            (contact, index) => (\n                                                <MenuItem\n                                                    key={index}\n                                                    value={contact.id}\n                                                >\n                                                    {contact.first_name} {contact.last_name}\n                                                </MenuItem>\n                                            )\n                                        )}\n                                    </TextField>\n                                </Grid>\n                            </Grid>\n                            <Grid\n                                container\n                                spacing={2}\n                                item\n                                justify=\"flex-end\"\n                                alignItems=\"center\"\n                                direction=\"row\"\n                                key={1}\n                            >\n                                <Grid item>\n                                    <Button\n                                        onClick={(event) => handleSearchFormSubmit(event)}\n                                        type=\"submit\"\n                                        form=\"contactSearchForm\"\n                                        color=\"primary\"\n                                        variant=\"contained\"\n                                        size=\"medium\"\n                                        startIcon={<SearchIcon />}\n                                    >\n                                        SEARCH\n                                    </Button>\n                                </Grid>\n                                <Grid item>\n                                    <Button\n                                        onClick={(event) =>\n                                            resetSearchForm(event)\n                                        }\n                                        type=\"reset\"\n                                        form=\"contactSearchForm\"\n                                        color=\"primary\"\n                                        variant=\"contained\"\n                                        size=\"medium\"\n                                        startIcon={<UndoIcon />}\n                                    >\n                                        RESET\n                                    </Button>\n                                </Grid>\n                            </Grid>\n                        </form>\n                    </Box>\n                </Grid>\n                <Grid item xs={12}>\n                    <CommonTable\n                        selected={selected}\n                        setSelected={setSelected}\n                        rows={filteredAccountDepositItems}\n                        headCells={customerAccountDepositsTableHeadCells}\n                        handleDelete={handleItemDelete}\n                        deleteUrl={\"client-deposits\"}\n                    />\n                </Grid>\n            </Grid>\n        </Layout>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        customerAccountDeposits: state.customerAccountDeposits\n            .map(clientDeposit => {\n                const contactWithDeposit = state.contacts.find(({ id }) => id === clientDeposit.contact_id) || {}\n                return Object.assign({}, clientDeposit,\n                    { customer_name: `${contactWithDeposit.first_name} ${contactWithDeposit.last_name}` })\n            })\n            .sort((clientDeposit1, clientDeposit2) => parse(clientDeposit2.deposit_date, 'yyyy-MM-dd', new Date()) -\n                parse(clientDeposit1.deposit_date, 'yyyy-MM-dd', new Date())),\n        contacts: state.contacts,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleItemDelete: (itemId, url) => dispatch(handleDelete(itemId, url)),\n    };\n};\n\nDepositsPage = connect(mapStateToProps, mapDispatchToProps)(DepositsPage);\n\nexport default withRouter(DepositsPage);\n"]},"metadata":{},"sourceType":"module"}