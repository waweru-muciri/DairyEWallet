{"ast":null,"code":"var _jsxFileName = \"/home/brianmuciri/Projects/farm-ledger-ld/src/Routes/Leases.js\";\nimport Layout from \"../components/PrivateLayout\";\nimport Grid from \"@material-ui/core/Grid\";\nimport PageHeading from \"../components/PageHeading\";\nimport React, { useEffect, useState } from \"react\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport BlockIcon from \"@material-ui/icons/Block\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport ExportToExcelBtn from \"../components/ExportToExcelBtn\";\nimport { connect } from \"react-redux\";\nimport { handleDelete, handleItemFormSubmit } from \"../actions/actions\";\nimport CommonTable from \"../components/table/commonTable\";\nimport { withRouter } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { commonStyles } from \"../components/commonStyles\";\nimport PrintArrayToPdf from \"../components/PrintArrayToPdfBtn\";\nimport RentAdjustModal from \"./RentAdjustModal\";\nimport AddChargeForm from \"../components/charges/AddChargeForm\";\nimport { parse } from \"date-fns\";\nconst headCells = [{\n  id: \"property_ref\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Property\"\n}, {\n  id: \"unit_ref\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Unit\"\n}, {\n  id: \"lease_type\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Agreement Type\"\n}, {\n  id: \"rent_cycle\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Rent Cycle\"\n}, {\n  id: \"tenant_name\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Tenant Name\"\n}, {\n  id: \"tenant_id_number\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Tenant ID\"\n}, {\n  id: \"start_date\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Start Date\"\n}, {\n  id: \"end_date\",\n  numeric: false,\n  disablePadding: true,\n  label: \"End Date\"\n}, {\n  id: \"security_deposit\",\n  numeric: true,\n  disablePadding: true,\n  label: \"Deposit Held\"\n}, {\n  id: \"rent_amount\",\n  numeric: true,\n  disablePadding: true,\n  label: \"Rent\"\n}, {\n  id: \"rent_due_date\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Rent Due Date\"\n}, {\n  id: \"edit\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Edit\"\n}, {\n  id: \"delete\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Delete\"\n}];\n\nlet TransactionPage = ({\n  leases,\n  properties,\n  match,\n  history,\n  handleItemSubmit,\n  handleItemDelete\n}) => {\n  const classes = commonStyles();\n  const [leaseItems, setLeaseItems] = useState([]);\n  const [filteredLeaseItems, setFilteredLeaseItems] = useState([]);\n  const [propertyFilter, setPropertyFilter] = useState(\"all\");\n  const [activeStatusFilter, setActiveStatusFilter] = useState(\"all\");\n  const [fromDateFilter, setFromDateFilter] = useState(\"\");\n  const [toDateFilter, setToDateFilter] = useState(\"\");\n  const [selected, setSelected] = useState([]);\n  const [adjustRentModalState, setAdjustRentModalState] = useState(false);\n  const [addChargeModalState, setAddChargeModalState] = useState(false);\n\n  const filterLeasesByCriteria = leasesToFilter => {\n    //filter the leases according to the search criteria here\n    const filteredLeases = leasesToFilter.filter(({\n      start_date,\n      end_date,\n      property_id,\n      terminated\n    }) => (!fromDateFilter ? true : start_date >= fromDateFilter) && (!toDateFilter ? true : !end_date ? false : end_date <= toDateFilter) && (propertyFilter === \"all\" ? true : property_id === propertyFilter) && (activeStatusFilter === \"all\" ? true : typeof terminated === 'undefined' ? true : terminated === activeStatusFilter));\n    return filteredLeases;\n  };\n\n  useEffect(() => {\n    setLeaseItems(leases);\n    setFilteredLeaseItems(filterLeasesByCriteria(leases));\n  }, [leases]);\n\n  const handleSearchFormSubmit = event => {\n    event.preventDefault();\n    setFilteredLeaseItems(filterLeasesByCriteria(leases));\n  };\n\n  const handleModalStateToggle = () => {\n    setAdjustRentModalState(!adjustRentModalState);\n  };\n\n  const resetSearchForm = event => {\n    event.preventDefault();\n    setPropertyFilter(\"all\");\n    setActiveStatusFilter(\"all\");\n    setFromDateFilter(\"\");\n    setToDateFilter(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(Layout, {\n    pageTitle: \"Rental Agreements\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    key: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PageHeading, {\n    text: 'Rental Agreements',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    item: true,\n    alignItems: \"center\",\n    direction: \"row\",\n    key: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"medium\",\n    startIcon: /*#__PURE__*/React.createElement(AddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 40\n      }\n    }),\n    component: Link,\n    to: `${match.url}/new`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 25\n    }\n  }, \"NEW\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"medium\",\n    startIcon: /*#__PURE__*/React.createElement(EditIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 40\n      }\n    }),\n    disabled: selected.length !== 1,\n    component: Link,\n    to: `${match.url}/${selected[0]}/edit`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 25\n    }\n  }, \"Edit\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"medium\",\n    disabled: selected.length !== 1,\n    startIcon: /*#__PURE__*/React.createElement(AddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 40\n      }\n    }),\n    onClick: () => {\n      setAddChargeModalState(!addChargeModalState);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 25\n    }\n  }, \"Add Charge\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"medium\",\n    disabled: !selected.length,\n    onClick: handleModalStateToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 25\n    }\n  }, \"Adjust Rent Amount\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"medium\",\n    startIcon: /*#__PURE__*/React.createElement(BlockIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 40\n      }\n    }),\n    disabled: selected.length !== 1,\n    component: Link,\n    to: `/app/notices/new?lease=${selected[0]}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 25\n    }\n  }, \"End Agreement\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(PrintArrayToPdf, {\n    disabled: !selected.length,\n    reportName: 'Rental Agreements Records',\n    reportTitle: 'Rental Agreements Data',\n    headCells: headCells,\n    dataToPrint: leaseItems.filter(({\n      id\n    }) => selected.includes(id)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ExportToExcelBtn, {\n    disabled: !selected.length,\n    reportName: 'Rental Agreements Records',\n    reportTitle: 'Rental Agreements Data',\n    headCells: headCells,\n    dataToPrint: leaseItems.filter(({\n      id\n    }) => selected.includes(id)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    border: 1,\n    borderRadius: \"borderRadius\",\n    borderColor: \"grey.400\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    id: \"contactSearchForm\",\n    onSubmit: handleSearchFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"center\",\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    select: true,\n    variant: \"outlined\",\n    id: \"lease_status\",\n    name: \"lease_status\",\n    label: \"Agreement Status\",\n    value: activeStatusFilter,\n    onChange: event => {\n      setActiveStatusFilter(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    key: \"all\",\n    value: \"all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 41\n    }\n  }, \"All\"), /*#__PURE__*/React.createElement(MenuItem, {\n    key: \"active\",\n    value: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 41\n    }\n  }, \"Active\"), /*#__PURE__*/React.createElement(MenuItem, {\n    key: \"in-active\",\n    value: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 41\n    }\n  }, \"In-Active\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    select: true,\n    variant: \"outlined\",\n    name: \"property_filter\",\n    label: \"Select Property\",\n    id: \"property_filter\",\n    onChange: event => {\n      setPropertyFilter(event.target.value);\n    },\n    value: propertyFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    key: \"all\",\n    value: \"all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 41\n    }\n  }, \"All\"), properties.map((property, index) => /*#__PURE__*/React.createElement(MenuItem, {\n    key: index,\n    value: property.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 45\n    }\n  }, property.ref))))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"center\",\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    type: \"date\",\n    id: \"from_date_filter\",\n    name: \"from_date_filter\",\n    label: \"From Date\",\n    value: fromDateFilter,\n    onChange: event => {\n      setFromDateFilter(event.target.value);\n    },\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    type: \"date\",\n    name: \"to_date_filter\",\n    label: \"To Date\",\n    id: \"to_date_filter\",\n    onChange: event => {\n      setToDateFilter(event.target.value);\n    },\n    value: toDateFilter,\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    item: true,\n    justify: \"flex-end\",\n    alignItems: \"center\",\n    direction: \"row\",\n    key: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: event => handleSearchFormSubmit(event),\n    type: \"submit\",\n    form: \"contactSearchForm\",\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"medium\",\n    startIcon: /*#__PURE__*/React.createElement(SearchIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 52\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 37\n    }\n  }, \"SEARCH\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: event => resetSearchForm(event),\n    type: \"reset\",\n    form: \"contactSearchForm\",\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"medium\",\n    startIcon: /*#__PURE__*/React.createElement(UndoIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 52\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 37\n    }\n  }, \"RESET\")))))), adjustRentModalState ? /*#__PURE__*/React.createElement(RentAdjustModal, {\n    open: adjustRentModalState,\n    leasesToAdjustRentAmounts: leaseItems.filter(({\n      id\n    }) => selected.includes(id)),\n    handleClose: handleModalStateToggle,\n    history: history,\n    handleItemSubmit: handleItemSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 25\n    }\n  }) : null, addChargeModalState ? /*#__PURE__*/React.createElement(AddChargeForm, {\n    open: addChargeModalState,\n    leaseToAddCharge: leaseItems.find(({\n      id\n    }) => id === selected[0]),\n    handleClose: () => {\n      setAddChargeModalState(!addChargeModalState);\n    },\n    handleItemSubmit: handleItemSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 25\n    }\n  }) : null, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CommonTable, {\n    selected: selected,\n    setSelected: setSelected,\n    rows: filteredLeaseItems,\n    headCells: headCells,\n    handleDelete: handleItemDelete,\n    deleteUrl: \"leases\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 21\n    }\n  }))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    leases: state.leases.map(lease => {\n      const tenant = state.contacts.find(contact => contact.id === lease.tenants[0]) || {};\n      const property = state.properties.find(({\n        id\n      }) => id === lease.property_id) || {};\n      const unitWithLease = state.propertyUnits.find(({\n        id\n      }) => id === lease.unit_id) || {};\n      return Object.assign({}, lease, {\n        tenant_name: tenant.first_name + \" \" + tenant.last_name,\n        tenant_id_number: tenant.id_number,\n        property_ref: property.ref,\n        unit_ref: unitWithLease.ref\n      });\n    }).sort((lease1, lease2) => parse(lease2.start_date, 'yyyy-MM-dd', new Date()) - parse(lease1.start_date, 'yyyy-MM-dd', new Date())),\n    properties: state.properties\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleItemSubmit: (item, url) => dispatch(handleItemFormSubmit(item, url)),\n    handleItemDelete: (itemId, url) => dispatch(handleDelete(itemId, url))\n  };\n};\n\nTransactionPage = connect(mapStateToProps, mapDispatchToProps)(TransactionPage);\nexport default withRouter(TransactionPage);","map":{"version":3,"sources":["/home/brianmuciri/Projects/farm-ledger-ld/src/Routes/Leases.js"],"names":["Layout","Grid","PageHeading","React","useEffect","useState","MenuItem","Box","Button","TextField","EditIcon","SearchIcon","UndoIcon","BlockIcon","AddIcon","ExportToExcelBtn","connect","handleDelete","handleItemFormSubmit","CommonTable","withRouter","Link","commonStyles","PrintArrayToPdf","RentAdjustModal","AddChargeForm","parse","headCells","id","numeric","disablePadding","label","TransactionPage","leases","properties","match","history","handleItemSubmit","handleItemDelete","classes","leaseItems","setLeaseItems","filteredLeaseItems","setFilteredLeaseItems","propertyFilter","setPropertyFilter","activeStatusFilter","setActiveStatusFilter","fromDateFilter","setFromDateFilter","toDateFilter","setToDateFilter","selected","setSelected","adjustRentModalState","setAdjustRentModalState","addChargeModalState","setAddChargeModalState","filterLeasesByCriteria","leasesToFilter","filteredLeases","filter","start_date","end_date","property_id","terminated","handleSearchFormSubmit","event","preventDefault","handleModalStateToggle","resetSearchForm","url","length","includes","form","target","value","map","property","index","ref","shrink","find","mapStateToProps","state","lease","tenant","contacts","contact","tenants","unitWithLease","propertyUnits","unit_id","Object","assign","tenant_name","first_name","last_name","tenant_id_number","id_number","property_ref","unit_ref","sort","lease1","lease2","Date","mapDispatchToProps","dispatch","item","itemId"],"mappings":"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","sourcesContent":["import Layout from \"../components/PrivateLayout\";\nimport Grid from \"@material-ui/core/Grid\";\nimport PageHeading from \"../components/PageHeading\";\nimport React, { useEffect, useState } from \"react\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport BlockIcon from \"@material-ui/icons/Block\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport ExportToExcelBtn from \"../components/ExportToExcelBtn\";\nimport { connect } from \"react-redux\";\nimport { handleDelete, handleItemFormSubmit } from \"../actions/actions\";\nimport CommonTable from \"../components/table/commonTable\";\nimport { withRouter } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { commonStyles } from \"../components/commonStyles\";\nimport PrintArrayToPdf from \"../components/PrintArrayToPdfBtn\";\nimport RentAdjustModal from \"./RentAdjustModal\";\nimport AddChargeForm from \"../components/charges/AddChargeForm\";\nimport { parse } from \"date-fns\";\n\nconst headCells = [\n    { id: \"property_ref\", numeric: false, disablePadding: true, label: \"Property\", },\n    { id: \"unit_ref\", numeric: false, disablePadding: true, label: \"Unit\", },\n    { id: \"lease_type\", numeric: false, disablePadding: true, label: \"Agreement Type\", },\n    { id: \"rent_cycle\", numeric: false, disablePadding: true, label: \"Rent Cycle\", },\n    { id: \"tenant_name\", numeric: false, disablePadding: true, label: \"Tenant Name\", },\n    { id: \"tenant_id_number\", numeric: false, disablePadding: true, label: \"Tenant ID\", },\n    { id: \"start_date\", numeric: false, disablePadding: true, label: \"Start Date\", },\n    { id: \"end_date\", numeric: false, disablePadding: true, label: \"End Date\", },\n    { id: \"security_deposit\", numeric: true, disablePadding: true, label: \"Deposit Held\", },\n    { id: \"rent_amount\", numeric: true, disablePadding: true, label: \"Rent\", },\n    { id: \"rent_due_date\", numeric: false, disablePadding: true, label: \"Rent Due Date\", },\n    { id: \"edit\", numeric: false, disablePadding: true, label: \"Edit\" },\n    { id: \"delete\", numeric: false, disablePadding: true, label: \"Delete\" },\n];\n\nlet TransactionPage = ({\n    leases,\n    properties,\n    match,\n    history,\n    handleItemSubmit,\n    handleItemDelete,\n}) => {\n    const classes = commonStyles();\n    const [leaseItems, setLeaseItems] = useState([]);\n    const [filteredLeaseItems, setFilteredLeaseItems] = useState([]);\n    const [propertyFilter, setPropertyFilter] = useState(\"all\");\n    const [activeStatusFilter, setActiveStatusFilter] = useState(\"all\");\n    const [fromDateFilter, setFromDateFilter] = useState(\"\");\n    const [toDateFilter, setToDateFilter] = useState(\"\");\n    const [selected, setSelected] = useState([]);\n    const [adjustRentModalState, setAdjustRentModalState] = useState(false);\n    const [addChargeModalState, setAddChargeModalState] = useState(false);\n\n    const filterLeasesByCriteria = (leasesToFilter) => {\n        //filter the leases according to the search criteria here\n        const filteredLeases = leasesToFilter\n            .filter(({ start_date, end_date, property_id, terminated }) =>\n                (!fromDateFilter ? true : start_date >= fromDateFilter)\n                && (!toDateFilter ? true : !end_date ? false : end_date <= toDateFilter)\n                && (propertyFilter === \"all\" ? true : property_id === propertyFilter)\n                && (activeStatusFilter === \"all\" ? true : typeof terminated === 'undefined' ? true : terminated === activeStatusFilter)\n            )\n        return filteredLeases;\n    }\n\n    useEffect(() => {\n        setLeaseItems(leases);\n        setFilteredLeaseItems(filterLeasesByCriteria(leases));\n    }, [leases]);\n\n    const handleSearchFormSubmit = (event) => {\n        event.preventDefault();\n        setFilteredLeaseItems(filterLeasesByCriteria(leases));\n    };\n\n    const handleModalStateToggle = () => {\n        setAdjustRentModalState(!adjustRentModalState)\n    }\n\n    const resetSearchForm = (event) => {\n        event.preventDefault();\n        setPropertyFilter(\"all\");\n        setActiveStatusFilter(\"all\");\n        setFromDateFilter(\"\");\n        setToDateFilter(\"\");\n    };\n\n    return (\n        <Layout pageTitle=\"Rental Agreements\">\n            <Grid\n                container\n                spacing={3}\n                alignItems=\"center\"\n            >\n                <Grid item key={2}>\n                    <PageHeading text={'Rental Agreements'} />\n                </Grid>\n                <Grid\n                    container\n                    spacing={2}\n                    item\n                    alignItems=\"center\"\n                    direction=\"row\"\n                    key={1}\n                >\n                    <Grid item>\n                        <Button\n                            type=\"button\"\n                            color=\"primary\"\n                            variant=\"contained\"\n                            size=\"medium\"\n                            startIcon={<AddIcon />}\n                            component={Link}\n                            to={`${match.url}/new`}\n                        >\n                            NEW\n                        </Button>\n                    </Grid>\n                    <Grid item>\n                        <Button\n                            type=\"button\"\n                            color=\"primary\"\n                            variant=\"contained\"\n                            size=\"medium\"\n                            startIcon={<EditIcon />}\n                            disabled={selected.length !== 1}\n                            component={Link}\n                            to={`${match.url}/${selected[0]}/edit`}\n                        >\n                            Edit\n                        </Button>\n                    </Grid>\n                    <Grid item>\n                        <Button\n                            type=\"button\"\n                            color=\"primary\"\n                            variant=\"contained\"\n                            size=\"medium\"\n                            disabled={selected.length !== 1}\n                            startIcon={<AddIcon />}\n                            onClick={() => {\n                                setAddChargeModalState(!addChargeModalState)\n                            }}\n                        >\n                            Add Charge\n                        </Button>\n                    </Grid>\n                    <Grid item>\n                        <Button\n                            type=\"button\"\n                            color=\"primary\"\n                            variant=\"contained\"\n                            size=\"medium\"\n                            disabled={!selected.length}\n                            onClick={handleModalStateToggle}\n                        >\n                            Adjust Rent Amount\n                        </Button>\n                    </Grid>\n                    <Grid item>\n                        <Button\n                            type=\"button\"\n                            color=\"primary\"\n                            variant=\"contained\"\n                            size=\"medium\"\n                            startIcon={<BlockIcon />}\n                            disabled={selected.length !== 1}\n                            component={Link}\n                            to={`/app/notices/new?lease=${selected[0]}`}\n                        >\n                            End Agreement\n                        </Button>\n                    </Grid>\n                    <Grid item>\n                        <PrintArrayToPdf\n                            disabled={!selected.length}\n                            reportName={'Rental Agreements Records'}\n                            reportTitle={'Rental Agreements Data'}\n                            headCells={headCells}\n                            dataToPrint={leaseItems.filter(({ id }) => selected.includes(id))}\n                        />\n                    </Grid>\n                    <Grid item>\n                        <ExportToExcelBtn\n                            disabled={!selected.length}\n                            reportName={'Rental Agreements Records'}\n                            reportTitle={'Rental Agreements Data'}\n                            headCells={headCells}\n                            dataToPrint={leaseItems.filter(({ id }) => selected.includes(id))}\n                        />\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    <Box\n                        border={1}\n                        borderRadius=\"borderRadius\"\n                        borderColor=\"grey.400\"\n                    >\n                        <form\n                            className={classes.form}\n                            id=\"contactSearchForm\"\n                            onSubmit={handleSearchFormSubmit}\n                        >\n                            <Grid\n                                container\n                                spacing={2}\n                                justify=\"center\"\n                                direction=\"row\"\n                            >\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        fullWidth\n                                        select\n                                        variant=\"outlined\"\n                                        id=\"lease_status\"\n                                        name=\"lease_status\"\n                                        label=\"Agreement Status\"\n                                        value={activeStatusFilter}\n                                        onChange={(event) => {\n                                            setActiveStatusFilter(\n                                                event.target.value\n                                            );\n                                        }}\n                                    >\n                                        <MenuItem key=\"all\" value={\"all\"}>All</MenuItem>\n                                        <MenuItem key=\"active\" value={false}>Active</MenuItem>\n                                        <MenuItem key=\"in-active\" value={true}>In-Active</MenuItem>\n                                    </TextField>\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        fullWidth\n                                        select\n                                        variant=\"outlined\"\n                                        name=\"property_filter\"\n                                        label=\"Select Property\"\n                                        id=\"property_filter\"\n                                        onChange={(event) => {\n                                            setPropertyFilter(\n                                                event.target.value\n                                            );\n                                        }}\n                                        value={propertyFilter}\n                                    >\n                                        <MenuItem key={\"all\"} value={\"all\"}>All</MenuItem>\n                                        {properties.map((property, index) => (\n                                            <MenuItem\n                                                key={index}\n                                                value={property.id}\n                                            >\n                                                {property.ref}\n                                            </MenuItem>\n                                        ))}\n                                    </TextField>\n                                </Grid>\n                            </Grid>\n                            <Grid\n                                container\n                                spacing={2}\n                                justify=\"center\"\n                                direction=\"row\"\n                            >\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        fullWidth\n                                        variant=\"outlined\"\n                                        type=\"date\"\n                                        id=\"from_date_filter\"\n                                        name=\"from_date_filter\"\n                                        label=\"From Date\"\n                                        value={fromDateFilter}\n                                        onChange={(event) => {\n                                            setFromDateFilter(\n                                                event.target.value\n                                            );\n                                        }}\n                                        InputLabelProps={{ shrink: true }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        fullWidth\n                                        variant=\"outlined\"\n                                        type=\"date\"\n                                        name=\"to_date_filter\"\n                                        label=\"To Date\"\n                                        id=\"to_date_filter\"\n                                        onChange={(event) => {\n                                            setToDateFilter(event.target.value);\n                                        }}\n                                        value={toDateFilter}\n                                        InputLabelProps={{ shrink: true }}\n                                    />\n                                </Grid>\n                            </Grid>\n                            <Grid\n                                container\n                                spacing={2}\n                                item\n                                justify=\"flex-end\"\n                                alignItems=\"center\"\n                                direction=\"row\"\n                                key={1}\n                            >\n                                <Grid item>\n                                    <Button\n                                        onClick={(event) => handleSearchFormSubmit(event)}\n                                        type=\"submit\"\n                                        form=\"contactSearchForm\"\n                                        color=\"primary\"\n                                        variant=\"contained\"\n                                        size=\"medium\"\n                                        startIcon={<SearchIcon />}\n                                    >\n                                        SEARCH\n                                    </Button>\n                                </Grid>\n                                <Grid item>\n                                    <Button\n                                        onClick={(event) => resetSearchForm(event)}\n                                        type=\"reset\"\n                                        form=\"contactSearchForm\"\n                                        color=\"primary\"\n                                        variant=\"contained\"\n                                        size=\"medium\"\n                                        startIcon={<UndoIcon />}\n                                    >\n                                        RESET\n                                    </Button>\n                                </Grid>\n                            </Grid>\n                        </form>\n                    </Box>\n                </Grid>\n                {\n                    adjustRentModalState ?\n                        <RentAdjustModal open={adjustRentModalState}\n                            leasesToAdjustRentAmounts={leaseItems.filter(({ id }) => selected.includes(id))}\n                            handleClose={handleModalStateToggle} history={history}\n                            handleItemSubmit={handleItemSubmit} /> : null\n                }\n                {\n                    addChargeModalState ?\n                        <AddChargeForm open={addChargeModalState}\n                            leaseToAddCharge={leaseItems.find(({ id }) => id === selected[0])}\n                            handleClose={() => {\n                                setAddChargeModalState(!addChargeModalState);\n                            }}\n                            handleItemSubmit={handleItemSubmit} /> : null\n                }\n                <Grid item xs={12}>\n                    <CommonTable\n                        selected={selected}\n                        setSelected={setSelected}\n                        rows={filteredLeaseItems}\n                        headCells={headCells}\n                        handleDelete={handleItemDelete}\n                        deleteUrl={\"leases\"}\n                    />\n                </Grid>\n            </Grid>\n        </Layout>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        leases: state.leases\n            .map((lease) => {\n                const tenant = state.contacts.find((contact) => contact.id === lease.tenants[0]) || {};\n                const property = state.properties.find(({ id }) => id === lease.property_id) || {};\n                const unitWithLease = state.propertyUnits.find(({ id }) => id === lease.unit_id) || {};\n                return Object.assign({}, lease,\n                    {\n                        tenant_name: tenant.first_name + \" \" + tenant.last_name,\n                        tenant_id_number: tenant.id_number,\n                        property_ref: property.ref,\n                        unit_ref: unitWithLease.ref,\n                    });\n            })\n            .sort((lease1, lease2) => parse(lease2.start_date, 'yyyy-MM-dd', new Date()) -\n                parse(lease1.start_date, 'yyyy-MM-dd', new Date())),\n        properties: state.properties,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleItemSubmit: (item, url) => dispatch(handleItemFormSubmit(item, url)),\n        handleItemDelete: (itemId, url) => dispatch(handleDelete(itemId, url)),\n    };\n};\n\nTransactionPage = connect(mapStateToProps, mapDispatchToProps)(TransactionPage);\n\nexport default withRouter(TransactionPage);\n"]},"metadata":{},"sourceType":"module"}