{"ast":null,"code":"var _jsxFileName = \"/home/brianmuciri/Projects/farm-ledger-ld/src/Routes/TenantsChargesStatement.js\";\nimport Grid from \"@material-ui/core/Grid\";\nimport React, { useEffect, useState } from \"react\";\nimport { Box, TextField, Button, MenuItem } from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport ExportToExcelBtn from \"../components/ExportToExcelBtn\";\nimport PrintArrayToPdf from \"../components/PrintArrayToPdfBtn\";\nimport CommonTable from \"../components/table/commonTable\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport PageHeading from \"../components/PageHeading\";\nimport { getStartEndDatesForPeriod, getSalesFilterOptions } from \"../assets/commonAssets\";\nimport { parse, isWithinInterval } from \"date-fns\";\nconst headCells = [{\n  id: \"tenant_name\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Tenant\"\n}, {\n  id: \"tenant_id_number\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Tenant ID\"\n}, {\n  id: \"unit_ref\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Unit Ref/Number\"\n}, {\n  id: \"charge_label\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Charge Name/Type\"\n}, {\n  id: \"charge_date\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Charge Date\"\n}, {\n  id: \"due_date\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Due Date\"\n}, {\n  id: \"charge_amount\",\n  numeric: true,\n  disablePadding: true,\n  label: \"Charge Amount\"\n}];\nconst TRANSACTIONS_FILTER_OPTIONS = getSalesFilterOptions();\n\nlet TenantStatementsPage = ({\n  rentalCharges,\n  properties,\n  contacts,\n  classes\n}) => {\n  const [filteredChargeItems, setFilteredChargeItems] = useState([]);\n  const [contactFilter, setContactFilter] = useState(null);\n  const [periodFilter, setPeriodFilter] = useState(\"month-to-date\");\n  const [fromDateFilter, setFromDateFilter] = useState(\"\");\n  const [toDateFilter, setToDateFilter] = useState(\"\");\n  const [propertyFilter, setPropertyFilter] = useState(\"all\");\n  const [selected, setSelected] = useState([]);\n  useEffect(() => {\n    setFilteredChargeItems(filterChargesByCriteria(rentalCharges));\n  }, [rentalCharges]);\n\n  const filterChargesByCriteria = statementsToFilter => {\n    let statementsWithinDateRange = statementsToFilter; //filter the rentalCharges according to the search criteria here\n\n    if (periodFilter) {\n      const {\n        startDate,\n        endDate\n      } = getStartEndDatesForPeriod(periodFilter);\n      statementsWithinDateRange = statementsWithinDateRange.filter(chargeItem => {\n        const chargeItemDate = parse(chargeItem.charge_date, 'yyyy-MM-dd', new Date());\n        return isWithinInterval(chargeItemDate, {\n          start: startDate,\n          end: endDate\n        });\n      });\n    }\n\n    const filteredStatements = statementsWithinDateRange.filter(({\n      charge_date,\n      property_id,\n      tenant_id\n    }) => (!fromDateFilter ? true : charge_date >= fromDateFilter) && (!toDateFilter ? true : charge_date <= toDateFilter) && (propertyFilter === \"all\" ? true : property_id === propertyFilter) && (!contactFilter ? true : tenant_id === contactFilter.id));\n    return filteredStatements;\n  };\n\n  const handleSearchFormSubmit = event => {\n    event.preventDefault();\n    setFilteredChargeItems(filterChargesByCriteria(rentalCharges));\n  };\n\n  const resetSearchForm = event => {\n    event.preventDefault();\n    setPropertyFilter(\"all\");\n    setPeriodFilter(\"month-to-date\");\n    setContactFilter(null);\n    setFromDateFilter(\"\");\n    setToDateFilter(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    justify: \"center\",\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    key: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(PageHeading, {\n    text: \"Tenants Charges Statement\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    item: true,\n    alignItems: \"center\",\n    direction: \"row\",\n    key: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PrintArrayToPdf, {\n    disabled: !selected.length,\n    reportName: 'Tenants Charges Records',\n    reportTitle: 'Tenants Charges Data',\n    headCells: headCells,\n    dataToPrint: rentalCharges.filter(({\n      id\n    }) => selected.includes(id)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ExportToExcelBtn, {\n    disabled: !selected.length,\n    reportName: 'Tenants Charges Records',\n    reportTitle: 'Tenants Charges Records',\n    headCells: headCells,\n    dataToPrint: rentalCharges.filter(({\n      id\n    }) => selected.includes(id)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    border: 1,\n    borderRadius: \"borderRadius\",\n    borderColor: \"grey.400\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    id: \"tenantChargesSearchForm\",\n    onSubmit: handleSearchFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"center\",\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    md: 6,\n    spacing: 1,\n    justify: \"center\",\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    type: \"date\",\n    id: \"from_date_filter\",\n    name: \"from_date_filter\",\n    label: \"From Date\",\n    value: fromDateFilter,\n    onChange: event => {\n      setFromDateFilter(event.target.value);\n    },\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    type: \"date\",\n    name: \"to_date_filter\",\n    label: \"To Date\",\n    id: \"to_date_filter\",\n    onChange: event => {\n      setToDateFilter(event.target.value);\n    },\n    value: toDateFilter,\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    select: true,\n    variant: \"outlined\",\n    name: \"propertyFilter\",\n    label: \"Property\",\n    id: \"propertyFilter\",\n    onChange: event => {\n      setPropertyFilter(event.target.value);\n    },\n    value: propertyFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    key: \"all\",\n    value: \"all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 37\n    }\n  }, \"All\"), properties.map((property, index) => /*#__PURE__*/React.createElement(MenuItem, {\n    key: index,\n    value: property.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 45\n    }\n  }, property.ref))))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"center\",\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    variant: \"outlined\",\n    select: true,\n    id: \"period_filter\",\n    name: \"period_filter\",\n    label: \"Period\",\n    value: periodFilter,\n    onChange: event => {\n      setPeriodFilter(event.target.value);\n    },\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 33\n    }\n  }, TRANSACTIONS_FILTER_OPTIONS.map((filterOption, index) => /*#__PURE__*/React.createElement(MenuItem, {\n    key: index,\n    value: filterOption.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 41\n    }\n  }, filterOption.text)))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    id: \"contact_filter\",\n    options: contacts,\n    getOptionSelected: (option, value) => option.id === value.id,\n    name: \"contact_filter\",\n    onChange: (event, newValue) => {\n      setContactFilter(newValue);\n    },\n    value: contactFilter,\n    getOptionLabel: tenant => tenant ? `${tenant.first_name} ${tenant.last_name}` : '',\n    style: {\n      width: \"100%\"\n    },\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"Tenant\",\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 62\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    item: true,\n    justify: \"flex-end\",\n    alignItems: \"center\",\n    direction: \"row\",\n    key: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: event => handleSearchFormSubmit(event),\n    type: \"submit\",\n    form: \"tenantChargesSearchForm\",\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"medium\",\n    startIcon: /*#__PURE__*/React.createElement(SearchIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 48\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 33\n    }\n  }, \"SEARCH\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: event => resetSearchForm(event),\n    type: \"reset\",\n    form: \"tenantChargesSearchForm\",\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"medium\",\n    startIcon: /*#__PURE__*/React.createElement(UndoIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 48\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 33\n    }\n  }, \"RESET\")))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CommonTable, {\n    selected: selected,\n    setSelected: setSelected,\n    rows: filteredChargeItems,\n    headCells: headCells,\n    noEditCol: true,\n    noDeleteCol: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default TenantStatementsPage;","map":{"version":3,"sources":["/home/brianmuciri/Projects/farm-ledger-ld/src/Routes/TenantsChargesStatement.js"],"names":["Grid","React","useEffect","useState","Box","TextField","Button","MenuItem","SearchIcon","UndoIcon","ExportToExcelBtn","PrintArrayToPdf","CommonTable","Autocomplete","PageHeading","getStartEndDatesForPeriod","getSalesFilterOptions","parse","isWithinInterval","headCells","id","numeric","disablePadding","label","TRANSACTIONS_FILTER_OPTIONS","TenantStatementsPage","rentalCharges","properties","contacts","classes","filteredChargeItems","setFilteredChargeItems","contactFilter","setContactFilter","periodFilter","setPeriodFilter","fromDateFilter","setFromDateFilter","toDateFilter","setToDateFilter","propertyFilter","setPropertyFilter","selected","setSelected","filterChargesByCriteria","statementsToFilter","statementsWithinDateRange","startDate","endDate","filter","chargeItem","chargeItemDate","charge_date","Date","start","end","filteredStatements","property_id","tenant_id","handleSearchFormSubmit","event","preventDefault","resetSearchForm","length","includes","form","target","value","shrink","map","property","index","ref","filterOption","text","option","newValue","tenant","first_name","last_name","width","params"],"mappings":"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","sourcesContent":["import Grid from \"@material-ui/core/Grid\";\nimport React, { useEffect, useState } from \"react\";\nimport { Box, TextField, Button, MenuItem } from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport ExportToExcelBtn from \"../components/ExportToExcelBtn\";\nimport PrintArrayToPdf from \"../components/PrintArrayToPdfBtn\";\nimport CommonTable from \"../components/table/commonTable\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport PageHeading from \"../components/PageHeading\";\nimport { getStartEndDatesForPeriod, getSalesFilterOptions } from \"../assets/commonAssets\";\nimport { parse, isWithinInterval } from \"date-fns\";\n\nconst headCells = [\n    { id: \"tenant_name\", numeric: false, disablePadding: true, label: \"Tenant\" },\n    { id: \"tenant_id_number\", numeric: false, disablePadding: true, label: \"Tenant ID\" },\n    { id: \"unit_ref\", numeric: false, disablePadding: true, label: \"Unit Ref/Number\" },\n    { id: \"charge_label\", numeric: false, disablePadding: true, label: \"Charge Name/Type\" },\n    { id: \"charge_date\", numeric: false, disablePadding: true, label: \"Charge Date\", },\n    { id: \"due_date\", numeric: false, disablePadding: true, label: \"Due Date\", },\n    { id: \"charge_amount\", numeric: true, disablePadding: true, label: \"Charge Amount\", },\n];\n\nconst TRANSACTIONS_FILTER_OPTIONS = getSalesFilterOptions()\n\nlet TenantStatementsPage = ({\n    rentalCharges,\n    properties,\n    contacts,\n    classes\n}) => {\n    const [filteredChargeItems, setFilteredChargeItems] = useState([]);\n    const [contactFilter, setContactFilter] = useState(null);\n    const [periodFilter, setPeriodFilter] = useState(\"month-to-date\");\n    const [fromDateFilter, setFromDateFilter] = useState(\"\");\n    const [toDateFilter, setToDateFilter] = useState(\"\");\n    const [propertyFilter, setPropertyFilter] = useState(\"all\");\n    const [selected, setSelected] = useState([]);\n\n    useEffect(() => {\n        setFilteredChargeItems(filterChargesByCriteria(rentalCharges));\n    }, [rentalCharges]);\n\n    const filterChargesByCriteria = (statementsToFilter) => {\n        let statementsWithinDateRange = statementsToFilter;\n        //filter the rentalCharges according to the search criteria here\n        if (periodFilter) {\n            const { startDate, endDate } = getStartEndDatesForPeriod(periodFilter)\n            statementsWithinDateRange = statementsWithinDateRange.filter((chargeItem) => {\n                const chargeItemDate = parse(chargeItem.charge_date, 'yyyy-MM-dd', new Date())\n                return isWithinInterval(chargeItemDate, { start: startDate, end: endDate })\n            })\n        }\n        const filteredStatements = statementsWithinDateRange\n            .filter(({ charge_date, property_id, tenant_id }) =>\n                (!fromDateFilter ? true : charge_date >= fromDateFilter)\n                && (!toDateFilter ? true : charge_date <= toDateFilter)\n                && (propertyFilter === \"all\" ? true : property_id === propertyFilter)\n                && (!contactFilter ? true : tenant_id === contactFilter.id)\n            )\n        return filteredStatements;\n    }\n\n    const handleSearchFormSubmit = (event) => {\n        event.preventDefault();\n        setFilteredChargeItems(filterChargesByCriteria(rentalCharges));\n    };\n\n    const resetSearchForm = (event) => {\n        event.preventDefault();\n        setPropertyFilter(\"all\");\n        setPeriodFilter(\"month-to-date\");\n        setContactFilter(null);\n        setFromDateFilter(\"\");\n        setToDateFilter(\"\");\n    };\n\n    return (\n        <Grid\n            container\n            spacing={3}\n            justify=\"center\" direction=\"column\"\n        >\n            <Grid item key={2}>\n                <PageHeading text={\"Tenants Charges Statement\"} />\n            </Grid>\n            <Grid\n                container\n                spacing={2}\n                item\n                alignItems=\"center\"\n                direction=\"row\"\n                key={1}\n            >\n                <Grid item>\n                    <PrintArrayToPdf\n                        disabled={!selected.length}\n                        reportName={'Tenants Charges Records'}\n                        reportTitle={'Tenants Charges Data'}\n                        headCells={headCells}\n                        dataToPrint={rentalCharges.filter(({ id }) => selected.includes(id))}\n                    />\n                </Grid>\n                <Grid item>\n                    <ExportToExcelBtn\n                        disabled={!selected.length}\n                        reportName={'Tenants Charges Records'}\n                        reportTitle={'Tenants Charges Records'}\n                        headCells={headCells}\n                        dataToPrint={rentalCharges.filter(({ id }) => selected.includes(id))}\n                    />\n                </Grid>\n            </Grid>\n            <Grid item xs={12}>\n                <Box\n                    border={1}\n                    borderRadius=\"borderRadius\"\n                    borderColor=\"grey.400\"\n                >\n                    <form\n                        className={classes.form}\n                        id=\"tenantChargesSearchForm\"\n                        onSubmit={handleSearchFormSubmit}\n                    >\n                        <Grid\n                            container\n                            spacing={2}\n                            justify=\"center\"\n                            direction=\"row\"\n                        >\n                            <Grid\n                                container\n                                item\n                                xs={12} md={6}\n                                spacing={1}\n                                justify=\"center\"\n                                direction=\"row\"\n                            >\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        fullWidth\n                                        variant=\"outlined\"\n                                        type=\"date\"\n                                        id=\"from_date_filter\"\n                                        name=\"from_date_filter\"\n                                        label=\"From Date\"\n                                        value={fromDateFilter}\n                                        onChange={(event) => {\n                                            setFromDateFilter(\n                                                event.target.value\n                                            );\n                                        }}\n                                        InputLabelProps={{ shrink: true }}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <TextField\n                                        fullWidth\n                                        variant=\"outlined\"\n                                        type=\"date\"\n                                        name=\"to_date_filter\"\n                                        label=\"To Date\"\n                                        id=\"to_date_filter\"\n                                        onChange={(event) => {\n                                            setToDateFilter(event.target.value);\n                                        }}\n                                        value={toDateFilter}\n                                        InputLabelProps={{ shrink: true }}\n                                    />\n                                </Grid>\n                            </Grid>\n                            <Grid item md={6} xs={12}>\n                                <TextField\n                                    fullWidth\n                                    select\n                                    variant=\"outlined\"\n                                    name=\"propertyFilter\"\n                                    label=\"Property\"\n                                    id=\"propertyFilter\"\n                                    onChange={(event) => {\n                                        setPropertyFilter(\n                                            event.target.value\n                                        );\n                                    }}\n                                    value={propertyFilter}\n                                >\n                                    <MenuItem key={\"all\"} value={\"all\"}>All</MenuItem>\n                                    {properties.map(\n                                        (property, index) => (\n                                            <MenuItem\n                                                key={index}\n                                                value={property.id}\n                                            >\n                                                {property.ref}\n                                            </MenuItem>\n                                        )\n                                    )}\n                                </TextField>\n                            </Grid>\n                        </Grid>\n                        <Grid\n                            container\n                            spacing={2}\n                            justify=\"center\"\n                            direction=\"row\"\n                        >\n                            <Grid item md={6} xs={12}>\n                                <TextField\n                                    fullWidth\n                                    variant=\"outlined\"\n                                    select\n                                    id=\"period_filter\"\n                                    name=\"period_filter\"\n                                    label=\"Period\"\n                                    value={periodFilter}\n                                    onChange={(event) => {\n                                        setPeriodFilter(\n                                            event.target.value\n                                        );\n                                    }}\n                                    InputLabelProps={{ shrink: true }}\n                                >\n                                    {TRANSACTIONS_FILTER_OPTIONS.map((filterOption, index) => (\n                                        <MenuItem\n                                            key={index}\n                                            value={filterOption.id}\n                                        >\n                                            {filterOption.text}\n                                        </MenuItem>\n                                    ))}\n                                </TextField>\n                            </Grid>\n                            <Grid item xs={12} md={6}>\n                                <Autocomplete\n                                    id=\"contact_filter\"\n                                    options={contacts}\n                                    getOptionSelected={(option, value) => option.id === value.id}\n                                    name=\"contact_filter\"\n                                    onChange={(event, newValue) => {\n                                        setContactFilter(newValue);\n                                    }}\n                                    value={contactFilter}\n                                    getOptionLabel={(tenant) => tenant ? `${tenant.first_name} ${tenant.last_name}` : ''}\n                                    style={{ width: \"100%\" }}\n                                    renderInput={(params) => <TextField {...params} label=\"Tenant\" variant=\"outlined\" />}\n                                />\n                            </Grid>\n                        </Grid>\n                        <Grid\n                            container\n                            spacing={2}\n                            item\n                            justify=\"flex-end\"\n                            alignItems=\"center\"\n                            direction=\"row\"\n                            key={1}\n                        >\n                            <Grid item>\n                                <Button\n                                    onClick={(event) => handleSearchFormSubmit(event)}\n                                    type=\"submit\"\n                                    form=\"tenantChargesSearchForm\"\n                                    color=\"primary\"\n                                    variant=\"contained\"\n                                    size=\"medium\"\n                                    startIcon={<SearchIcon />}\n                                >\n                                    SEARCH\n                                    </Button>\n                            </Grid>\n                            <Grid item>\n                                <Button\n                                    onClick={(event) => resetSearchForm(event)}\n                                    type=\"reset\"\n                                    form=\"tenantChargesSearchForm\"\n                                    color=\"primary\"\n                                    variant=\"contained\"\n                                    size=\"medium\"\n                                    startIcon={<UndoIcon />}\n                                >\n                                    RESET\n                                    </Button>\n                            </Grid>\n                        </Grid>\n                    </form>\n                </Box>\n            </Grid>\n            <Grid item xs={12}>\n                <CommonTable\n                    selected={selected}\n                    setSelected={setSelected}\n                    rows={filteredChargeItems}\n                    headCells={headCells}\n                    noEditCol\n                    noDeleteCol\n                />\n            </Grid>\n        </Grid>\n    );\n};\n\n\nexport default TenantStatementsPage;\n"]},"metadata":{},"sourceType":"module"}