{"ast":null,"code":"import * as actionTypes from \"../assets/actionTypes\";\nexport function notices(state = [], action) {\n  switch (action.type) {\n    case actionTypes.NOTICES_FETCH_DATA_SUCCESS:\n      return action.notices;\n\n    case actionTypes.EDIT_NOTICE:\n      return state.map(notice => notice.id === action.notice.id ? Object.assign({}, notice, action.notice) : notice);\n\n    case actionTypes.ADD_NOTICE:\n      return [...state, action.notice];\n\n    case actionTypes.DELETE_NOTICE:\n      return state.filter(notice => notice.id !== action.noticeId);\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/brianmuciri/Projects/farm-ledger-ld/src/reducers/notices.js"],"names":["actionTypes","notices","state","action","type","NOTICES_FETCH_DATA_SUCCESS","EDIT_NOTICE","map","notice","id","Object","assign","ADD_NOTICE","DELETE_NOTICE","filter","noticeId"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,uBAA7B;AAEA,OAAO,SAASC,OAAT,CAAiBC,KAAK,GAAG,EAAzB,EAA6BC,MAA7B,EAAqC;AACxC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKJ,WAAW,CAACK,0BAAjB;AACI,aAAOF,MAAM,CAACF,OAAd;;AAEJ,SAAKD,WAAW,CAACM,WAAjB;AACI,aAAOJ,KAAK,CAACK,GAAN,CAAWC,MAAD,IACbA,MAAM,CAACC,EAAP,KAAcN,MAAM,CAACK,MAAP,CAAcC,EAA5B,GACMC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,MAAlB,EAA0BL,MAAM,CAACK,MAAjC,CADN,GAEMA,MAHH,CAAP;;AAMJ,SAAKR,WAAW,CAACY,UAAjB;AACI,aAAO,CAAC,GAAGV,KAAJ,EAAWC,MAAM,CAACK,MAAlB,CAAP;;AAEJ,SAAKR,WAAW,CAACa,aAAjB;AACI,aAAOX,KAAK,CAACY,MAAN,CAAcN,MAAD,IAAYA,MAAM,CAACC,EAAP,KAAcN,MAAM,CAACY,QAA9C,CAAP;;AAEJ;AACI,aAAOb,KAAP;AAlBR;AAoBH","sourcesContent":["import * as actionTypes from \"../assets/actionTypes\";\n\nexport function notices(state = [], action) {\n    switch (action.type) {\n        case actionTypes.NOTICES_FETCH_DATA_SUCCESS:\n            return action.notices;\n\n        case actionTypes.EDIT_NOTICE:\n            return state.map((notice) =>\n                notice.id === action.notice.id\n                    ? Object.assign({}, notice, action.notice)\n                    : notice\n            );\n\n        case actionTypes.ADD_NOTICE:\n            return [...state, action.notice];\n\n        case actionTypes.DELETE_NOTICE:\n            return state.filter((notice) => notice.id !== action.noticeId);\n\n        default:\n            return state;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}