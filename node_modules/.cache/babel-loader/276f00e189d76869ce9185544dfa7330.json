{"ast":null,"code":"var _jsxFileName = \"/home/brianmuciri/Projects/farm-ledger-ld/src/Routes/Emails.js\";\nimport Layout from \"../components/PrivateLayout\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { Grid, TextField, Button, Box } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { handleDelete, itemsFetchData } from \"../actions/actions\";\nimport CommonTable from \"../components/table/commonTable\";\nimport { commonStyles } from \"../components/commonStyles\";\nimport { withRouter } from \"react-router-dom\";\nimport PageHeading from \"../components/PageHeading\";\nconst emailsTableHeadCells = [{\n  id: \"from_user\",\n  numeric: false,\n  disablePadding: true,\n  label: \"From\"\n}, {\n  id: \"date_sent\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Date Sent\"\n}, {\n  id: \"email_subject\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Email Subject\"\n}];\n\nlet EmailsPage = ({\n  fetchData,\n  communicationEmails,\n  match\n}) => {\n  const classes = commonStyles();\n  const [emailItems, setEmailItems] = useState([]);\n  const [selected, setSelected] = useState([]);\n  const [fromDateFilter, setFromDateFilter] = useState(\"\");\n  const [toDateFilter, setToDateFilter] = useState(\"\");\n  useEffect(() => {\n    fetchData(['communication_emails']);\n  }, [fetchData]);\n  useEffect(() => {\n    setEmailItems(communicationEmails);\n  }, [communicationEmails]);\n\n  const filterEmailCommunicationsByCriteria = emailsToFilter => {\n    const filteredEmailCommunications = emailsToFilter.filter(({\n      date_sent\n    }) => (!fromDateFilter ? true : date_sent >= fromDateFilter) && (!toDateFilter ? true : date_sent <= toDateFilter));\n    return filteredEmailCommunications;\n  };\n\n  const handleSearchFormSubmit = event => {\n    event.preventDefault(); //filter the communicationEmails here according to search criteria\n\n    setEmailItems(filterEmailCommunicationsByCriteria(communicationEmails));\n  };\n\n  const resetSearchForm = event => {\n    event.preventDefault();\n    setFromDateFilter(\"\");\n    setToDateFilter(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(Layout, {\n    pageTitle: \"Emails\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    justify: \"space-evenly\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PageHeading, {\n    text: \"Emails\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    item: true,\n    alignItems: \"center\",\n    direction: \"row\",\n    key: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"medium\",\n    startIcon: /*#__PURE__*/React.createElement(AddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 40\n      }\n    }),\n    component: Link,\n    to: `${match.url}/new`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  }, \"Compose Email\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    border: 1,\n    borderRadius: \"borderRadius\",\n    borderColor: \"grey.400\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    id: \"contactSearchForm\",\n    onSubmit: handleSearchFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"center\",\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 6,\n    md: 6,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    type: \"date\",\n    InputLabelProps: {\n      shrink: true\n    },\n    variant: \"outlined\",\n    id: \"from_date\",\n    name: \"from_date\",\n    label: \"From Date\",\n    value: fromDateFilter,\n    onChange: event => {\n      setFromDateFilter(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 6,\n    md: 6,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    type: \"date\",\n    InputLabelProps: {\n      shrink: true\n    },\n    variant: \"outlined\",\n    name: \"to_date\",\n    label: \"To Date\",\n    id: \"to_date\",\n    onChange: event => {\n      setToDateFilter(event.target.value);\n    },\n    value: toDateFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    item: true,\n    justify: \"flex-end\",\n    alignItems: \"center\",\n    direction: \"row\",\n    key: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: event => handleSearchFormSubmit(event),\n    type: \"submit\",\n    form: \"contactSearchForm\",\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"medium\",\n    startIcon: /*#__PURE__*/React.createElement(SearchIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 52\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 37\n    }\n  }, \"SEARCH\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: event => {\n      resetSearchForm(event);\n    },\n    type: \"reset\",\n    form: \"propertySearchForm\",\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"medium\",\n    startIcon: /*#__PURE__*/React.createElement(UndoIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 52\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 37\n    }\n  }, \"RESET\")))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CommonTable, {\n    selected: selected,\n    setSelected: setSelected,\n    rows: emailItems,\n    headCells: emailsTableHeadCells,\n    handleDelete: handleDelete,\n    deleteUrl: \"communication_emails\",\n    noDetailsCol: true,\n    noEditCol: true,\n    noDeleteCol: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 21\n    }\n  }))));\n};\n\nconst mapStateToProps = state => {\n  console.log(state.users);\n  return {\n    users: state.users,\n    currentUser: state.currentUser,\n    communicationEmails: state.communicationEmails\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchData: collectionsUrls => dispatch(itemsFetchData(collectionsUrls))\n  };\n};\n\nEmailsPage = connect(mapStateToProps, mapDispatchToProps)(EmailsPage);\nexport default withRouter(EmailsPage);","map":{"version":3,"sources":["/home/brianmuciri/Projects/farm-ledger-ld/src/Routes/Emails.js"],"names":["Layout","React","useEffect","useState","Link","SearchIcon","UndoIcon","AddIcon","Grid","TextField","Button","Box","connect","handleDelete","itemsFetchData","CommonTable","commonStyles","withRouter","PageHeading","emailsTableHeadCells","id","numeric","disablePadding","label","EmailsPage","fetchData","communicationEmails","match","classes","emailItems","setEmailItems","selected","setSelected","fromDateFilter","setFromDateFilter","toDateFilter","setToDateFilter","filterEmailCommunicationsByCriteria","emailsToFilter","filteredEmailCommunications","filter","date_sent","handleSearchFormSubmit","event","preventDefault","resetSearchForm","url","form","shrink","target","value","mapStateToProps","state","console","log","users","currentUser","mapDispatchToProps","dispatch","collectionsUrls"],"mappings":"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","sourcesContent":["import Layout from \"../components/PrivateLayout\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { Grid, TextField, Button, Box } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { handleDelete, itemsFetchData } from \"../actions/actions\";\nimport CommonTable from \"../components/table/commonTable\";\nimport { commonStyles } from \"../components/commonStyles\";\nimport { withRouter } from \"react-router-dom\";\nimport PageHeading from \"../components/PageHeading\";\n\nconst emailsTableHeadCells = [\n    { id: \"from_user\", numeric: false, disablePadding: true, label: \"From\" },\n    { id: \"date_sent\", numeric: false, disablePadding: true, label: \"Date Sent\" },\n    { id: \"email_subject\", numeric: false, disablePadding: true, label: \"Email Subject\" },\n];\n\nlet EmailsPage = ({\n    fetchData,\n    communicationEmails,\n    match,\n}) => {\n    const classes = commonStyles();\n    const [emailItems, setEmailItems] = useState([]);\n    const [selected, setSelected] = useState([]);\n    const [fromDateFilter, setFromDateFilter] = useState(\"\");\n    const [toDateFilter, setToDateFilter] = useState(\"\");\n\n    useEffect(() => {\n        fetchData(['communication_emails']);\n    }, [fetchData]);\n    \n    \n    useEffect(() => {\n        setEmailItems(communicationEmails);\n    }, [communicationEmails]);\n    \n    const filterEmailCommunicationsByCriteria = (emailsToFilter) => {\n        const filteredEmailCommunications = emailsToFilter\n        .filter(({ date_sent }) =>\n        (!fromDateFilter ? true : date_sent >= fromDateFilter)\n        && (!toDateFilter ? true : date_sent <= toDateFilter));\n        return filteredEmailCommunications;\n    }\n    \n    const handleSearchFormSubmit = (event) => {\n        event.preventDefault();\n        //filter the communicationEmails here according to search criteria\n        setEmailItems(filterEmailCommunicationsByCriteria(communicationEmails));\n    };\n    \n    const resetSearchForm = (event) => {\n        event.preventDefault();\n        setFromDateFilter(\"\");\n        setToDateFilter(\"\");\n    };\n    \n    return (\n        <Layout pageTitle=\"Emails\">\n            <Grid\n                container\n                spacing={3}\n                justify=\"space-evenly\"\n                alignItems=\"center\"\n                >\n                <Grid item xs={12}>\n                    <PageHeading text=\"Emails\" />\n                </Grid>\n                <Grid\n                    container\n                    spacing={2}\n                    item\n                    alignItems=\"center\"\n                    direction=\"row\"\n                    key={1}\n                    >\n                    <Grid item>\n                        <Button\n                            type=\"button\"\n                            color=\"primary\"\n                            variant=\"contained\"\n                            size=\"medium\"\n                            startIcon={<AddIcon />}\n                            component={Link}\n                            to={`${match.url}/new`}\n                            >\n                            Compose Email\n                        </Button>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    <Box\n                        border={1}\n                        borderRadius=\"borderRadius\"\n                        borderColor=\"grey.400\"\n                        >\n                        <form\n                            className={classes.form}\n                            id=\"contactSearchForm\"\n                            onSubmit={handleSearchFormSubmit}\n                            >\n                            <Grid\n                                container\n                                spacing={2}\n                                justify=\"center\"\n                                direction=\"row\"\n                                >\n                                <Grid item lg={6} md={6} xs={6}>\n                                    <TextField\n                                        fullWidth\n                                        type=\"date\"\n                                        InputLabelProps={{ shrink: true }}\n                                        variant=\"outlined\"\n                                        id=\"from_date\"\n                                        name=\"from_date\"\n                                        label=\"From Date\"\n                                        value={fromDateFilter}\n                                        onChange={(event) => {\n                                            setFromDateFilter(\n                                                event.target.value\n                                                );\n                                            }}\n                                            />\n                                </Grid>\n                                <Grid item lg={6} md={6} xs={6}>\n                                    <TextField\n                                        fullWidth\n                                        type=\"date\"\n                                        InputLabelProps={{ shrink: true }}\n                                        variant=\"outlined\"\n                                        name=\"to_date\"\n                                        label=\"To Date\"\n                                        id=\"to_date\"\n                                        onChange={(event) => {\n                                            setToDateFilter(event.target.value);\n                                        }}\n                                        value={toDateFilter}\n                                        />\n                                </Grid>\n                            </Grid>\n                            <Grid\n                                container\n                                spacing={2}\n                                item\n                                justify=\"flex-end\"\n                                alignItems=\"center\"\n                                direction=\"row\"\n                                key={1}\n                                >\n                                <Grid item>\n                                    <Button\n                                        onClick={(event) =>\n                                            handleSearchFormSubmit(event)\n                                        }\n                                        type=\"submit\"\n                                        form=\"contactSearchForm\"\n                                        color=\"primary\"\n                                        variant=\"contained\"\n                                        size=\"medium\"\n                                        startIcon={<SearchIcon />}\n                                        >\n                                        SEARCH\n                                    </Button>\n                                </Grid>\n                                <Grid item>\n                                    <Button\n                                        onClick={(event) => {\n                                            resetSearchForm(event);\n                                        }}\n                                        type=\"reset\"\n                                        form=\"propertySearchForm\"\n                                        color=\"primary\"\n                                        variant=\"contained\"\n                                        size=\"medium\"\n                                        startIcon={<UndoIcon />}\n                                        >\n                                        RESET\n                                    </Button>\n                                </Grid>\n                            </Grid>\n                        </form>\n                    </Box>\n                </Grid>\n                <Grid item xs={12}>\n                    <CommonTable\n                        selected={selected}\n                        setSelected={setSelected}\n                        rows={emailItems}\n                        headCells={emailsTableHeadCells}\n                        handleDelete={handleDelete}\n                        deleteUrl={\"communication_emails\"}\n                        noDetailsCol\n                        noEditCol\n                        noDeleteCol\n                        />\n                </Grid>\n\n            </Grid>\n        </Layout>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    console.log(state.users)\n    return {\n        users: state.users,\n        currentUser: state.currentUser,\n        communicationEmails: state.communicationEmails,\n    };\n};\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchData: (collectionsUrls) => dispatch(itemsFetchData(collectionsUrls)),\n    };\n};\nEmailsPage = connect(mapStateToProps, mapDispatchToProps)(EmailsPage);\n\nexport default withRouter(EmailsPage);\n"]},"metadata":{},"sourceType":"module"}