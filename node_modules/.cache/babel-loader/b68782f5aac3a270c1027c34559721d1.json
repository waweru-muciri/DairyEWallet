{"ast":null,"code":"var _jsxFileName = \"/home/brianmuciri/Projects/farm-ledger-ld/src/components/emails/EmailsSelect.js\";\nimport React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { commonStyles } from \"../commonStyles\";\n\nfunction not(a, b) {\n  return a.filter(value => b.indexOf(value) === -1);\n}\n\nfunction intersection(a, b) {\n  return a.filter(value => b.indexOf(value) !== -1);\n}\n\nexport default function TransferList(props) {\n  const classes = commonStyles();\n  const {\n    contacts,\n    users,\n    contactToSendEmailTo,\n    contactSource,\n    submitEmailSourceValues,\n    handleBack\n  } = props;\n  const [checked, setChecked] = React.useState([]);\n  const [left, setLeft] = React.useState([]);\n  const [right, setRight] = React.useState([]);\n  const [selectedEmailsSource, setSelectedEmailsSource] = React.useState('Tenants');\n  const emailsSources = [\"Tenants\", \"Users\"];\n  useEffect(() => {\n    setLeft(contacts);\n    setSelectedEmailsSource('Tenants');\n  }, [contacts]);\n  useEffect(() => {\n    setChecked([contactToSendEmailTo]);\n    setSelectedEmailsSource(contactSource);\n  }, [contactToSendEmailTo]);\n  useEffect(() => {\n    setLeft(users);\n    setSelectedEmailsSource('Users');\n  }, [users]);\n\n  const getEmailsFromSource = () => {\n    return selectedEmailsSource === \"Tenants\" ? right.map(tenantDetails => tenantDetails.contact_email) : right.map(userDetails => userDetails.primary_email);\n  };\n\n  const leftChecked = intersection(checked, left);\n  const rightChecked = intersection(checked, right);\n\n  const handleToggle = value => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  const handleAllRight = () => {\n    setRight(right.concat(left));\n    setLeft([]);\n  };\n\n  const handleCheckedRight = () => {\n    setRight(right.concat(leftChecked));\n    setLeft(not(left, leftChecked));\n    setChecked(not(checked, leftChecked));\n  };\n\n  const handleCheckedLeft = () => {\n    setLeft(left.concat(rightChecked));\n    setRight(not(right, rightChecked));\n    setChecked(not(checked, rightChecked));\n  };\n\n  const handleAllLeft = () => {\n    setLeft(left.concat(right));\n    setRight([]);\n  };\n\n  const customList = items => /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    dense: true,\n    component: \"div\",\n    role: \"list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, items.map((value, index) => {\n    const labelId = `transfer-list-item-${index}-label`;\n    return /*#__PURE__*/React.createElement(ListItem, {\n      key: index,\n      role: \"listitem\",\n      button: true,\n      onClick: handleToggle(value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ListItemIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      checked: checked.indexOf(value) !== -1,\n      tabIndex: -1,\n      disableRipple: true,\n      inputProps: {\n        \"aria-labelledby\": labelId\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      id: labelId,\n      primary: `${value.first_name} ${value.last_name}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }\n    }));\n  }), /*#__PURE__*/React.createElement(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  })));\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    direction: \"column\",\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    alignItems: \"center\",\n    direction: \"column\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, right.length >= 1 ? `${right.length} ${selectedEmailsSource} selected` : `Select ${selectedEmailsSource} to send email`)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    select: true,\n    onChange: event => {\n      setSelectedEmailsSource(event.target.value);\n\n      switch (event.target.value) {\n        case 'Tenants':\n          setLeft(contacts);\n          setRight([]);\n          setChecked([]);\n          break;\n\n        case 'Users':\n          setLeft(users);\n          setRight([]);\n          setChecked([]);\n          break;\n\n        default:\n          break;\n      }\n    },\n    variant: \"outlined\",\n    label: \"Select Emails Source\",\n    value: selectedEmailsSource,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, emailsSources.map((source, index) => {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: index,\n      value: source,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 19\n      }\n    }, source);\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    direction: \"row\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 11\n    }\n  }, customList(left)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 4,\n    container: true,\n    direction: \"column\",\n    spacing: 1,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    size: \"small\",\n    className: classes.button,\n    onClick: handleAllRight,\n    disabled: left.length === 0,\n    \"aria-label\": \"move all right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 15\n    }\n  }, \"\\u226B\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    size: \"small\",\n    className: classes.button,\n    onClick: handleCheckedRight,\n    disabled: leftChecked.length === 0,\n    \"aria-label\": \"move selected right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 15\n    }\n  }, \">\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    size: \"small\",\n    className: classes.button,\n    onClick: handleCheckedLeft,\n    disabled: rightChecked.length === 0,\n    \"aria-label\": \"move selected left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 15\n    }\n  }, \"<\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    size: \"small\",\n    className: classes.button,\n    onClick: handleAllLeft,\n    disabled: right.length === 0,\n    \"aria-label\": \"move all left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 15\n    }\n  }, \"\\u226A\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 11\n    }\n  }, customList(right)))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleBack,\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 11\n    }\n  }, \"Back\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    disabled: !right.length,\n    onClick: () => {\n      submitEmailSourceValues(getEmailsFromSource());\n    },\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 11\n    }\n  }, \"Send\"))));\n}","map":{"version":3,"sources":["/home/brianmuciri/Projects/farm-ledger-ld/src/components/emails/EmailsSelect.js"],"names":["React","useEffect","Grid","ListItem","TextField","ListItemIcon","ListItemText","Checkbox","Button","Paper","MenuItem","List","Typography","commonStyles","not","a","b","filter","value","indexOf","intersection","TransferList","props","classes","contacts","users","contactToSendEmailTo","contactSource","submitEmailSourceValues","handleBack","checked","setChecked","useState","left","setLeft","right","setRight","selectedEmailsSource","setSelectedEmailsSource","emailsSources","getEmailsFromSource","map","tenantDetails","contact_email","userDetails","primary_email","leftChecked","rightChecked","handleToggle","currentIndex","newChecked","push","splice","handleAllRight","concat","handleCheckedRight","handleCheckedLeft","handleAllLeft","customList","items","paper","index","labelId","first_name","last_name","root","length","event","target","source","button"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { commonStyles } from \"../commonStyles\";\n\n\nfunction not(a, b) {\n  return a.filter((value) => b.indexOf(value) === -1);\n}\n\nfunction intersection(a, b) {\n  return a.filter((value) => b.indexOf(value) !== -1);\n}\n\nexport default function TransferList(props) {\n  const classes = commonStyles();\n  const { contacts, users, contactToSendEmailTo, contactSource, submitEmailSourceValues, handleBack } = props;\n  const [checked, setChecked] = React.useState([]);\n  const [left, setLeft] = React.useState([]);\n  const [right, setRight] = React.useState([]);\n  const [selectedEmailsSource, setSelectedEmailsSource] = React.useState('Tenants');\n  const emailsSources = [\"Tenants\", \"Users\"];\n\n  useEffect(() => {\n    setLeft(contacts);\n    setSelectedEmailsSource('Tenants')\n  }, [contacts])\n\n  useEffect(() => {\n    setChecked([contactToSendEmailTo]);\n    setSelectedEmailsSource(contactSource)\n  }, [contactToSendEmailTo])\n\n  useEffect(() => {\n    setLeft(users);\n    setSelectedEmailsSource('Users')\n  }, [users])\n\n  const getEmailsFromSource = () => {\n    return selectedEmailsSource === \"Tenants\" ? right.map(tenantDetails => tenantDetails.contact_email)\n      : right.map(userDetails => userDetails.primary_email)\n  }\n\n  const leftChecked = intersection(checked, left);\n  const rightChecked = intersection(checked, right);\n\n  const handleToggle = (value) => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  const handleAllRight = () => {\n    setRight(right.concat(left));\n    setLeft([]);\n  };\n\n  const handleCheckedRight = () => {\n    setRight(right.concat(leftChecked));\n    setLeft(not(left, leftChecked));\n    setChecked(not(checked, leftChecked));\n  };\n\n  const handleCheckedLeft = () => {\n    setLeft(left.concat(rightChecked));\n    setRight(not(right, rightChecked));\n    setChecked(not(checked, rightChecked));\n  };\n\n  const handleAllLeft = () => {\n    setLeft(left.concat(right));\n    setRight([]);\n  };\n\n  const customList = (items) => (\n    <Paper className={classes.paper}>\n      <List dense component=\"div\" role=\"list\">\n        {items.map((value, index) => {\n          const labelId = `transfer-list-item-${index}-label`;\n          return (\n            <ListItem\n              key={index}\n              role=\"listitem\"\n              button\n              onClick={handleToggle(value)}\n            >\n              <ListItemIcon>\n                <Checkbox\n                  checked={checked.indexOf(value) !== -1}\n                  tabIndex={-1}\n                  disableRipple\n                  inputProps={{ \"aria-labelledby\": labelId }}\n                />\n              </ListItemIcon>\n              <ListItemText id={labelId} primary={`${value.first_name} ${value.last_name}`} />\n            </ListItem>\n          );\n        })}\n        <ListItem />\n      </List>\n    </Paper>\n  );\n\n  return (\n    <Grid\n      container\n      spacing={2}\n      direction=\"column\"\n      className={classes.root}\n    >\n      <Grid\n        item\n        container\n        alignItems=\"center\"\n        direction=\"column\"\n        spacing={2}\n      >\n\n        <Grid item>\n          <Typography variant=\"subtitle1\">\n            {right.length >= 1 ? `${right.length} ${selectedEmailsSource} selected`\n              : `Select ${selectedEmailsSource} to send email`}\n          </Typography>\n        </Grid>\n        <Grid item>\n          <TextField\n            fullWidth\n            select\n            onChange={(event) => {\n              setSelectedEmailsSource(event.target.value)\n              switch (event.target.value) {\n                case 'Tenants': setLeft(contacts); setRight([]); setChecked([]);\n                  break;\n\n                case 'Users': setLeft(users); setRight([]); setChecked([]);\n                  break;\n\n                default: break;\n              }\n            }}\n            variant=\"outlined\"\n            label=\"Select Emails Source\"\n            value={selectedEmailsSource}>\n            {\n              emailsSources.map((source, index) => {\n                return (\n                  <MenuItem key={index} value={source}>\n                    {source}\n                  </MenuItem>);\n              })\n            }\n          </TextField>\n        </Grid>\n        <Grid\n          item\n          container\n          direction=\"row\"\n          spacing={2}\n        >\n          <Grid item sm>{customList(left)}</Grid>\n          <Grid item sm={4} container direction=\"column\" spacing={1} alignItems=\"center\">\n            <Grid item>\n              <Button\n                variant=\"outlined\"\n                size=\"small\"\n                className={classes.button}\n                onClick={handleAllRight}\n                disabled={left.length === 0}\n                aria-label=\"move all right\"\n              >\n                ≫\n                    </Button>\n            </Grid>\n            <Grid item>\n              <Button\n                variant=\"outlined\"\n                size=\"small\"\n                className={classes.button}\n                onClick={handleCheckedRight}\n                disabled={leftChecked.length === 0}\n                aria-label=\"move selected right\"\n              >\n                &gt;\n                     </Button>\n            </Grid>\n            <Grid item>\n              <Button\n                variant=\"outlined\"\n                size=\"small\"\n                className={classes.button}\n                onClick={handleCheckedLeft}\n                disabled={rightChecked.length === 0}\n                aria-label=\"move selected left\"\n              >\n                &lt;\n                    </Button>\n            </Grid>\n            <Grid item>\n              <Button\n                variant=\"outlined\"\n                size=\"small\"\n                className={classes.button}\n                onClick={handleAllLeft}\n                disabled={right.length === 0}\n                aria-label=\"move all left\"\n              >\n                ≪\n                    </Button>\n            </Grid>\n          </Grid>\n          <Grid item sm>{customList(right)}</Grid>\n        </Grid>\n      </Grid>\n      <Grid\n        item\n        container\n        spacing={2}\n      >\n        <Grid item>\n          <Button\n            onClick={handleBack}\n            variant=\"contained\">\n            Back\n                      </Button>\n        </Grid>\n        <Grid item>\n          <Button\n            disabled={!right.length}\n            onClick={() => { submitEmailSourceValues(getEmailsFromSource()) }}\n            variant=\"contained\"\n            color=\"primary\">\n            Send\n          </Button>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}